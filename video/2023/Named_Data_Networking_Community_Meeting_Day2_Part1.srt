1
00:00:00,110 --> 00:00:03,915
>> Good morning
everyone and welcome to

2
00:00:03,915 --> 00:00:07,455
day 2 of the Indian
community meeting,

3
00:00:07,455 --> 00:00:10,560
the 2023 end year income.

4
00:00:10,560 --> 00:00:16,860
Today's agenda has as
the first item Session

5
00:00:16,860 --> 00:00:21,900
4 on forwarding
and applications.

6
00:00:21,900 --> 00:00:26,910
And the session has
three remote speakers.

7
00:00:26,910 --> 00:00:31,005
The first speaker
is Tian Song,

8
00:00:31,005 --> 00:00:32,640
who was a professor at

9
00:00:32,640 --> 00:00:35,220
Beijing Institute
of Technology.

10
00:00:35,220 --> 00:00:38,250
Tian, are you ready?

11
00:00:38,250 --> 00:00:40,290
If you're already,

12
00:00:40,290 --> 00:00:40,830
you can start
[OVERLAPPING]

13
00:00:40,830 --> 00:00:42,730
>> Yes, I'm ready.

14
00:00:42,800 --> 00:00:47,110
>> Share your slides
and you can go ahead.

15
00:00:48,320 --> 00:00:51,380
>> Thank you. I'm glad

16
00:00:51,380 --> 00:00:54,515
to have this opportunity
to present our work

17
00:00:54,515 --> 00:00:57,525
about the iStack it's

18
00:00:57,525 --> 00:01:00,915
actually work of
from my group.

19
00:01:00,915 --> 00:01:05,420
We have three very
important guys seen

20
00:01:05,420 --> 00:01:08,090
this work is my
students can

21
00:01:08,090 --> 00:01:11,135
only and another
faculty getting here.

22
00:01:11,135 --> 00:01:13,670
So our work is about

23
00:01:13,670 --> 00:01:16,685
an in-Kernel networking
stack for India.

24
00:01:16,685 --> 00:01:20,420
So we have
another title for

25
00:01:20,420 --> 00:01:21,950
this talk about

26
00:01:21,950 --> 00:01:24,845
implementation of
data networking.

27
00:01:24,845 --> 00:01:27,395
What do we have and
what do they need?

28
00:01:27,395 --> 00:01:28,895
Then use what's the

29
00:01:28,895 --> 00:01:30,530
Indian community
country have,

30
00:01:30,530 --> 00:01:34,850
and what's the future
way Indian community in

31
00:01:34,850 --> 00:01:37,295
need to support

32
00:01:37,295 --> 00:01:41,150
the deployment of
engine network.

33
00:01:41,150 --> 00:01:44,015
So let's have
a quick review

34
00:01:44,015 --> 00:01:45,980
on current and
then forwarders.

35
00:01:45,980 --> 00:01:51,170
Since forwarders is
the real worker to say

36
00:01:51,170 --> 00:01:54,460
that Indian can actually

37
00:01:54,460 --> 00:01:56,540
take out an
important role.

38
00:01:56,540 --> 00:01:58,880
So let's go back 10
years ago we have

39
00:01:58,880 --> 00:02:01,420
the first version
of Indians sim.

40
00:02:01,420 --> 00:02:03,930
Is actually over
the Season X.

41
00:02:03,930 --> 00:02:05,790
So from that time,

42
00:02:05,790 --> 00:02:08,370
I write the source code

43
00:02:08,370 --> 00:02:10,000
overseas and hikes
and know that

44
00:02:10,000 --> 00:02:13,030
all the Indian
architecture

45
00:02:13,030 --> 00:02:14,470
is something like
interests and

46
00:02:14,470 --> 00:02:17,465
there's pathways
and the dumping

47
00:02:17,465 --> 00:02:20,325
and the very important,
and very interesting.

48
00:02:20,325 --> 00:02:22,620
And in 2014,

49
00:02:22,620 --> 00:02:27,145
so we have the NFV and
involved in daemon.

50
00:02:27,145 --> 00:02:29,890
So at that time, my group,

51
00:02:29,890 --> 00:02:32,470
one of my students
and I was involved

52
00:02:32,470 --> 00:02:34,075
in the development of

53
00:02:34,075 --> 00:02:36,295
an act, the
forwarding part.

54
00:02:36,295 --> 00:02:38,515
That's a
collaborative work

55
00:02:38,515 --> 00:02:40,459
of five universities

56
00:02:40,459 --> 00:02:41,980
and then we have

57
00:02:41,980 --> 00:02:45,460
a new version of
an exam over fd,

58
00:02:45,460 --> 00:02:47,850
and we have Indian Lite

59
00:02:47,850 --> 00:02:50,400
and the DPDK and
other forwarders.

60
00:02:50,400 --> 00:02:53,380
So that's the path

61
00:02:53,570 --> 00:02:57,855
important forwarders
of the past 10 years.

62
00:02:57,855 --> 00:03:01,410
So what we want

63
00:03:01,410 --> 00:03:04,560
to get is general-purpose
forwarder.

64
00:03:04,560 --> 00:03:07,665
So let's take the
FT as an example,

65
00:03:07,665 --> 00:03:08,919
is a general-purpose

66
00:03:08,919 --> 00:03:10,970
software package
forwarder is

67
00:03:10,970 --> 00:03:13,550
implemented in
C ++ language

68
00:03:13,550 --> 00:03:15,110
, is very successful.

69
00:03:15,110 --> 00:03:17,480
That we can use
it to support

70
00:03:17,480 --> 00:03:21,665
the architectural
research and it's used

71
00:03:21,665 --> 00:03:24,590
on public NDN
project testbed and

72
00:03:24,590 --> 00:03:26,270
then several
applications that

73
00:03:26,270 --> 00:03:29,080
demonstrated based on NFD.

74
00:03:29,080 --> 00:03:32,020
So let's talk
about how NFD

75
00:03:32,020 --> 00:03:34,440
provides the narrative for

76
00:03:34,440 --> 00:03:35,755
applications that means,

77
00:03:35,755 --> 00:03:39,125
especially how
the FD support

78
00:03:39,125 --> 00:03:42,035
multiple applications
running over it.

79
00:03:42,035 --> 00:03:44,420
So there's a sentence

80
00:03:44,420 --> 00:03:46,610
say that communication
between NFD

81
00:03:46,610 --> 00:03:48,470
and the local
application can be

82
00:03:48,470 --> 00:03:51,805
done where the
Unix-domain.

83
00:03:51,805 --> 00:03:54,865
So what's that
Unix-domain sockets,

84
00:03:54,865 --> 00:03:56,750
supposedly have
network packets

85
00:03:56,750 --> 00:03:59,030
and we have
already kernels.

86
00:03:59,030 --> 00:04:01,760
Then the kernel
provides sockets,

87
00:04:01,760 --> 00:04:05,720
NFD is designed and
implemented over socket.

88
00:04:05,720 --> 00:04:10,665
So how do we support
multiple applications?

89
00:04:10,665 --> 00:04:12,660
Use Unix-domain sockets

90
00:04:12,660 --> 00:04:16,905
is inter-processing
communication way.

91
00:04:16,905 --> 00:04:22,375
That's an IPC in the
application layer.

92
00:04:22,375 --> 00:04:25,895
Like TCP, IP protocols,

93
00:04:25,895 --> 00:04:29,270
the operating systems
use Berkeley socket.

94
00:04:29,270 --> 00:04:33,390
They use the socket
applications

95
00:04:33,390 --> 00:04:34,910
, create a socket,

96
00:04:34,910 --> 00:04:38,645
and the kernel
corresponding create a sock

97
00:04:38,645 --> 00:04:44,145
and the packets are
distinguished by port.

98
00:04:44,145 --> 00:04:48,500
So TCP/IP and to go
through the kernel and

99
00:04:48,500 --> 00:04:52,270
the distinguish
using ports

100
00:04:52,270 --> 00:04:54,380
and go to each
applications.

101
00:04:54,380 --> 00:04:58,290
So that's TCP/IP works.

102
00:04:59,120 --> 00:05:02,025
Actually is a
kernel things.

103
00:05:02,025 --> 00:05:05,420
So let's look other
typical forwarders

104
00:05:05,420 --> 00:05:07,785
like Indian Riot.

105
00:05:07,785 --> 00:05:10,640
Actually, real
operating systems,

106
00:05:10,640 --> 00:05:13,505
since the system is
a microorganism,

107
00:05:13,505 --> 00:05:17,350
is no kernel user
space that stuff.

108
00:05:17,350 --> 00:05:20,010
So the packets are

109
00:05:20,010 --> 00:05:24,410
passing cross-layer
is used through IPC.

110
00:05:24,410 --> 00:05:27,275
So the first forwarder
actually using

111
00:05:27,275 --> 00:05:29,300
application layer IPC to

112
00:05:29,300 --> 00:05:33,050
classify the packets
to each applications.

113
00:05:33,050 --> 00:05:35,970
And the Indian
Lite is a little

114
00:05:35,970 --> 00:05:37,530
different since

115
00:05:37,530 --> 00:05:39,975
it's lighter version
of forwarder.

116
00:05:39,975 --> 00:05:41,370
It can only support

117
00:05:41,370 --> 00:05:44,160
one application
each forwarder.

118
00:05:44,160 --> 00:05:45,600
That means if you run

119
00:05:45,600 --> 00:05:46,790
one forwarder it can only

120
00:05:46,790 --> 00:05:48,350
support the web
applications,

121
00:05:48,350 --> 00:05:51,950
that's something
like you can use it

122
00:05:51,950 --> 00:05:55,280
as a router forwarding
applications,

123
00:05:55,280 --> 00:05:58,159
but it cannot support
multiple applications.

124
00:05:58,159 --> 00:06:01,695
Now then we go
to NDN and DPDK.

125
00:06:01,695 --> 00:06:03,900
Actually, DPDK, the pack

126
00:06:03,900 --> 00:06:06,500
target of the DPDK is for

127
00:06:06,500 --> 00:06:08,960
extremely high
performance and

128
00:06:08,960 --> 00:06:12,550
it bypass the
kernel stack,

129
00:06:12,550 --> 00:06:16,530
DPDK bypass for
high-performance.

130
00:06:16,530 --> 00:06:17,900
And it's very suitable for

131
00:06:17,900 --> 00:06:21,545
single-task equipment
like routers.

132
00:06:21,545 --> 00:06:24,260
But if consider the

133
00:06:24,260 --> 00:06:26,705
generative for
applications,

134
00:06:26,705 --> 00:06:31,950
I think Indian DPDK is
a little difficult.

135
00:06:31,950 --> 00:06:36,790
And then we have
YaNFD is similar.

136
00:06:36,790 --> 00:06:39,620
The only difference is

137
00:06:39,620 --> 00:06:43,250
the implementation
language, if called so.

138
00:06:43,250 --> 00:06:44,675
So it also use

139
00:06:44,675 --> 00:06:49,145
application layer way
to distinguish packets.

140
00:06:49,145 --> 00:06:53,450
So let's discuss
this problem.

141
00:06:53,450 --> 00:06:54,560
I think this question.

142
00:06:54,560 --> 00:06:56,780
So all modern
operating system

143
00:06:56,780 --> 00:06:58,460
actually implement
a version of

144
00:06:58,460 --> 00:07:00,395
the Berkeley
socket interface,

145
00:07:00,395 --> 00:07:02,674
and use this framework

146
00:07:02,674 --> 00:07:04,475
to organize the packets

147
00:07:04,475 --> 00:07:08,930
and the upper layer
applications.

148
00:07:08,930 --> 00:07:11,210
Then why I've provide

149
00:07:11,210 --> 00:07:15,120
another application
layer-level solution

150
00:07:15,120 --> 00:07:17,505
imbedded into the kernel.

151
00:07:17,505 --> 00:07:19,320
So I guess there may be

152
00:07:19,320 --> 00:07:22,415
two packets, maybe speed.

153
00:07:22,415 --> 00:07:26,100
So if we bypass
the kernel,

154
00:07:26,710 --> 00:07:29,930
we can think that the new

155
00:07:29,930 --> 00:07:33,430
version how to
higher performance.

156
00:07:33,430 --> 00:07:34,820
But however, if

157
00:07:34,820 --> 00:07:37,710
we use application-level
solution,

158
00:07:37,710 --> 00:07:41,270
we also involve that

159
00:07:41,270 --> 00:07:43,760
the overhead of
Unix-domain sockets.

160
00:07:43,760 --> 00:07:48,545
Actually, it also can
film the complexity of

161
00:07:48,545 --> 00:07:53,600
computing it cannot
maybe achieve that

162
00:07:53,600 --> 00:07:55,910
high-speed unless
way bypass

163
00:07:55,910 --> 00:07:59,105
the kernel totally
using DPDK.

164
00:07:59,105 --> 00:08:01,640
And then maybe try

165
00:08:01,640 --> 00:08:05,000
to think that NDN
is targeted for

166
00:08:05,000 --> 00:08:08,930
a big story like I think

167
00:08:08,930 --> 00:08:10,130
currently runs over

168
00:08:10,130 --> 00:08:14,045
many protocols
like TCP/UDP/IP.

169
00:08:14,045 --> 00:08:16,520
So you use current,

170
00:08:16,520 --> 00:08:19,285
the socket mechanism,

171
00:08:19,285 --> 00:08:21,305
and the using the
logic of phase

172
00:08:21,305 --> 00:08:24,155
2 over that protocols.

173
00:08:24,155 --> 00:08:26,510
Also, I have the
account over

174
00:08:26,510 --> 00:08:29,270
Ethernet directly by using

175
00:08:29,270 --> 00:08:31,190
the [inaudible]
have some way

176
00:08:31,190 --> 00:08:34,985
of packets capturing.

177
00:08:34,985 --> 00:08:37,445
So if we think

178
00:08:37,445 --> 00:08:39,980
that Indian is
tagged for big star.

179
00:08:39,980 --> 00:08:41,330
And that's okay.

180
00:08:41,330 --> 00:08:45,395
If NDAs is designed as
a network protocol,

181
00:08:45,395 --> 00:08:48,740
it should be run directly
on the link layer.

182
00:08:48,740 --> 00:08:50,915
That should be the way

183
00:08:50,915 --> 00:08:53,080
like network
protocol does.

184
00:08:53,080 --> 00:08:56,900
So why we need
another forwarder.

185
00:08:56,900 --> 00:08:58,730
So we seek

186
00:08:58,730 --> 00:09:01,810
a general purpose
networking protocol stack

187
00:09:01,810 --> 00:09:06,660
and it is expected to
be a three targets.

188
00:09:06,660 --> 00:09:08,815
That's general
that is flexible.

189
00:09:08,815 --> 00:09:12,200
That means many
applications has shared

190
00:09:12,200 --> 00:09:15,235
this forwarder with
different purpose

191
00:09:15,235 --> 00:09:18,455
using a same Canvas,

192
00:09:18,455 --> 00:09:21,380
API or programming models.

193
00:09:21,380 --> 00:09:23,430
And the second one is that

194
00:09:23,430 --> 00:09:27,965
this networking forwarder
should be secure.

195
00:09:27,965 --> 00:09:30,350
That means it
should be achieved

196
00:09:30,350 --> 00:09:32,765
system-level
security since it

197
00:09:32,765 --> 00:09:35,970
should be embedded
in the system.

198
00:09:35,970 --> 00:09:38,935
>> The current kernel
stack like TCP,

199
00:09:38,935 --> 00:09:41,665
IP kernel run as
kernel threads

200
00:09:41,665 --> 00:09:45,310
that's protected by
the operating systems.

201
00:09:45,310 --> 00:09:49,120
So there should be
another NDN forwarder

202
00:09:49,120 --> 00:09:50,710
that should embed in

203
00:09:50,710 --> 00:09:53,290
the kernel to gain
the OS protection.

204
00:09:53,290 --> 00:09:56,320
And also, we try to

205
00:09:56,320 --> 00:10:00,610
push NDN forwarder
kernel's reuse.

206
00:10:00,610 --> 00:10:04,510
That means we should
integrate the folder

207
00:10:04,510 --> 00:10:08,410
into the development
of operating system.

208
00:10:08,410 --> 00:10:11,650
That means the
non-working parts should

209
00:10:11,650 --> 00:10:15,790
be distributed along
with operating system.

210
00:10:15,790 --> 00:10:19,435
That's long term evolution

211
00:10:19,435 --> 00:10:20,485
with operating system,

212
00:10:20,485 --> 00:10:22,195
that should be
integration.

213
00:10:22,195 --> 00:10:24,340
So that's why we

214
00:10:24,340 --> 00:10:28,105
consider that we
should take NDN,

215
00:10:28,105 --> 00:10:30,430
this protocol into
operating system

216
00:10:30,430 --> 00:10:32,770
, not over it.

217
00:10:32,770 --> 00:10:37,645
So we proposed an
in-kernel NDN stack.

218
00:10:37,645 --> 00:10:40,750
We try to design an
in-kernel NDN stack,

219
00:10:40,750 --> 00:10:44,860
but we have to face the
following challenges.

220
00:10:44,860 --> 00:10:46,930
The first one is that NDN

221
00:10:46,930 --> 00:10:49,180
is entirely
based on names.

222
00:10:49,180 --> 00:10:51,385
That means consider
the speed,

223
00:10:51,385 --> 00:10:53,920
we should classify packets

224
00:10:53,920 --> 00:10:58,000
with the variable and
unlimited last names.

225
00:10:58,000 --> 00:11:04,765
While the TCP/IP use
IP is short addresses.

226
00:11:04,765 --> 00:11:07,495
And we have to
use the names,

227
00:11:07,495 --> 00:11:09,864
especially name prefix

228
00:11:09,864 --> 00:11:12,625
to classify the packets,

229
00:11:12,625 --> 00:11:16,915
to relate those packets

230
00:11:16,915 --> 00:11:20,425
to each application
requirements.

231
00:11:20,425 --> 00:11:23,230
So that's a flag complex

232
00:11:23,230 --> 00:11:27,310
and also computing
consuming.

233
00:11:27,310 --> 00:11:28,840
And the second one is that

234
00:11:28,840 --> 00:11:31,510
NDN is a stateful
data plane.

235
00:11:31,510 --> 00:11:34,855
If we embed it
into the kernel,

236
00:11:34,855 --> 00:11:38,485
we have to face the
first performance issues

237
00:11:38,485 --> 00:11:40,315
that a stateful data plane

238
00:11:40,315 --> 00:11:42,115
is hard to achieve
line speed.

239
00:11:42,115 --> 00:11:47,110
And also the stateful
data plane will keep

240
00:11:47,110 --> 00:11:49,660
track of each
interests and

241
00:11:49,660 --> 00:11:52,555
data packets that
state behavior.

242
00:11:52,555 --> 00:11:55,375
And that state
behavior is very

243
00:11:55,375 --> 00:12:00,055
leak from the
perspective of security.

244
00:12:00,055 --> 00:12:01,840
So we have to gain

245
00:12:01,840 --> 00:12:05,005
the kernel level isolation

246
00:12:05,005 --> 00:12:09,115
for that security
requirements concern.

247
00:12:09,115 --> 00:12:12,610
And also, we have
to consider to pull

248
00:12:12,610 --> 00:12:15,400
the content store
as a memory

249
00:12:15,400 --> 00:12:18,565
into the OS kernel,

250
00:12:18,565 --> 00:12:20,380
or search the kernel.

251
00:12:20,380 --> 00:12:22,960
But no matter what
kind of your design,

252
00:12:22,960 --> 00:12:25,345
you have to inject

253
00:12:25,345 --> 00:12:28,270
some memory into
the kernel design.

254
00:12:28,270 --> 00:12:31,690
That may be a challenge
for the kernel,

255
00:12:31,690 --> 00:12:33,280
that since kernel regards

256
00:12:33,280 --> 00:12:34,450
the networking stack

257
00:12:34,450 --> 00:12:37,540
should maintain
no memories,

258
00:12:37,540 --> 00:12:40,615
no memory can
store that size.

259
00:12:40,615 --> 00:12:43,210
And the third challenge

260
00:12:43,210 --> 00:12:45,100
is the programming model.

261
00:12:45,100 --> 00:12:49,480
Since the current TCP/IP

262
00:12:49,480 --> 00:12:51,640
is okay to use
the session way

263
00:12:51,640 --> 00:12:53,770
to organize this
programming.

264
00:12:53,770 --> 00:12:56,290
But any user name
or continent

265
00:12:56,290 --> 00:13:00,055
way to do that,
that's different.

266
00:13:00,055 --> 00:13:04,060
So we consider to
solve the old above

267
00:13:04,060 --> 00:13:05,980
the challenges and taken

268
00:13:05,980 --> 00:13:09,175
into this kernel weight
proposed the iStack.

269
00:13:09,175 --> 00:13:11,065
So what is iStack?

270
00:13:11,065 --> 00:13:12,760
Let's go back to review

271
00:13:12,760 --> 00:13:15,385
the hourglass
architecture first.

272
00:13:15,385 --> 00:13:18,250
That's the beginning
of the NDN to say,

273
00:13:18,250 --> 00:13:20,650
NDN is very good to

274
00:13:20,650 --> 00:13:24,205
maybe correspond
to IP protocols.

275
00:13:24,205 --> 00:13:27,880
Maybe 10 years
ago, I first to

276
00:13:27,880 --> 00:13:29,470
know this graph and

277
00:13:29,470 --> 00:13:32,020
then to know NDN
architecture.

278
00:13:32,020 --> 00:13:34,870
And then let's go back to

279
00:13:34,870 --> 00:13:38,245
the current NFD and
other forwarders.

280
00:13:38,245 --> 00:13:40,850
So what they arrived.

281
00:13:40,860 --> 00:13:44,800
The red line is
the separation

282
00:13:44,800 --> 00:13:46,330
of the user space and

283
00:13:46,330 --> 00:13:48,954
kernel space in an
operating systems.

284
00:13:48,954 --> 00:13:52,015
And the current
that NFD forwarder,

285
00:13:52,015 --> 00:13:54,670
and then maybe the

286
00:13:54,670 --> 00:13:56,875
most important
forwarders we

287
00:13:56,875 --> 00:14:00,130
have is running in

288
00:14:00,130 --> 00:14:04,180
the user space,
actually over socket.

289
00:14:04,180 --> 00:14:07,030
And some of forwaders can

290
00:14:07,030 --> 00:14:11,080
over ethernet by using
packet capturing,

291
00:14:11,080 --> 00:14:13,450
is bypass sockets and

292
00:14:13,450 --> 00:14:15,625
directly over
the ethernet.

293
00:14:15,625 --> 00:14:19,105
But it's not inside
the kernel way,

294
00:14:19,105 --> 00:14:22,450
not go down but bypass
all over sockets.

295
00:14:22,450 --> 00:14:23,755
That's what way

296
00:14:23,755 --> 00:14:28,250
the current forwarders
have designed.

297
00:14:28,250 --> 00:14:30,930
We say that these overlay

298
00:14:30,930 --> 00:14:33,525
design over the socket.

299
00:14:33,525 --> 00:14:35,130
No, I didn't say

300
00:14:35,130 --> 00:14:38,220
overlay protocols,
is overlays sockets.

301
00:14:38,220 --> 00:14:41,960
But iStack is different.

302
00:14:41,960 --> 00:14:46,345
We design iStack
as incrinal stack,

303
00:14:46,345 --> 00:14:48,730
that means the
iStack totally

304
00:14:48,730 --> 00:14:51,325
run within the
kernel space.

305
00:14:51,325 --> 00:14:54,535
And also is directly over

306
00:14:54,535 --> 00:14:56,770
link layer and it

307
00:14:56,770 --> 00:14:59,050
connect to the
upper layer,

308
00:14:59,050 --> 00:15:02,200
we use the iSocket.

309
00:15:02,200 --> 00:15:05,560
We define a socket

310
00:15:05,560 --> 00:15:08,890
primitive programming
model to support

311
00:15:08,890 --> 00:15:12,505
the application design and

312
00:15:12,505 --> 00:15:14,890
all these from
the link layer

313
00:15:14,890 --> 00:15:16,300
to the upper layer,

314
00:15:16,300 --> 00:15:18,175
we use iStack totally.

315
00:15:18,175 --> 00:15:21,745
We didn't use
any TCP/IP and

316
00:15:21,745 --> 00:15:24,685
the iStack merged inside

317
00:15:24,685 --> 00:15:28,180
the current berkeley
sulfated framework.

318
00:15:28,180 --> 00:15:30,250
And it's also
compatible to

319
00:15:30,250 --> 00:15:33,235
the current
socket framework.

320
00:15:33,235 --> 00:15:39,055
So that's the brief
design of iStack.

321
00:15:39,055 --> 00:15:44,545
So there are some novel
design philosophies.

322
00:15:44,545 --> 00:15:48,009
We all know that
we have interface

323
00:15:48,009 --> 00:15:55,210
to connect NDN layer
with other layers.

324
00:15:55,210 --> 00:15:58,645
So we separate
the phase system

325
00:15:58,645 --> 00:16:02,575
from one phase into
lower one and upper one.

326
00:16:02,575 --> 00:16:04,090
And lower one to link

327
00:16:04,090 --> 00:16:06,850
the link layer protocols,

328
00:16:06,850 --> 00:16:08,020
and the upper one is to

329
00:16:08,020 --> 00:16:10,180
support the
application socket.

330
00:16:10,180 --> 00:16:11,170
And then we use

331
00:16:11,170 --> 00:16:13,150
the Netlink sockets
to configure

332
00:16:13,150 --> 00:16:16,015
our forwarding
information table,

333
00:16:16,015 --> 00:16:19,615
and also we designed
all the passes to

334
00:16:19,615 --> 00:16:21,040
make it workable and

335
00:16:21,040 --> 00:16:23,440
compatible in the
kernel system.

336
00:16:23,440 --> 00:16:26,650
So that's the
iStack design.

337
00:16:26,650 --> 00:16:30,490
So this kernel one

338
00:16:30,490 --> 00:16:33,625
is iStack is entirely
based on names.

339
00:16:33,625 --> 00:16:35,215
So we didn't use anything

340
00:16:35,215 --> 00:16:37,135
like a pass, no pass.

341
00:16:37,135 --> 00:16:40,630
We use the name
prefix to distinguish

342
00:16:40,630 --> 00:16:42,265
the packets and

343
00:16:42,265 --> 00:16:44,905
connecting with
the applications.

344
00:16:44,905 --> 00:16:47,320
We also provide

345
00:16:47,320 --> 00:16:49,705
a socket-like
programming model.

346
00:16:49,705 --> 00:16:52,090
That's another
story of our work.

347
00:16:52,090 --> 00:16:54,070
So that's
programming model

348
00:16:54,070 --> 00:16:57,730
for different
philosophy of how to

349
00:16:57,730 --> 00:17:00,969
use the kernel using

350
00:17:00,969 --> 00:17:03,730
content way, not
session way.

351
00:17:03,730 --> 00:17:05,260
So we also have

352
00:17:05,260 --> 00:17:08,740
another design choice
considered, like using

353
00:17:08,740 --> 00:17:12,565
Maggie's writing to
support high-performance.

354
00:17:12,565 --> 00:17:16,705
We catch data package
directly in kernel and

355
00:17:16,705 --> 00:17:19,300
other kernels with several

356
00:17:19,300 --> 00:17:22,435
here of the kitchen story.

357
00:17:22,435 --> 00:17:27,880
And then also we designed
some open API for

358
00:17:27,880 --> 00:17:30,925
events for the
general purpose to

359
00:17:30,925 --> 00:17:34,390
make it practical
for real use.

360
00:17:34,390 --> 00:17:37,300
>> One minute left.

361
00:17:37,300 --> 00:17:39,475
>> So we have deployed

362
00:17:39,475 --> 00:17:41,665
some prototypes
based on iStack.

363
00:17:41,665 --> 00:17:44,245
So we implemented
in Linux kernel,

364
00:17:44,245 --> 00:17:46,540
and we tested it,

365
00:17:46,540 --> 00:17:49,870
iStack currently achieved
over 5 gigabits per

366
00:17:49,870 --> 00:17:51,550
second report over

367
00:17:51,550 --> 00:17:55,555
10 gigabit link without
any optimization.

368
00:17:55,555 --> 00:17:57,850
We test it on
software router,

369
00:17:57,850 --> 00:17:59,920
personal computer and
the Raspberry Pi,

370
00:17:59,920 --> 00:18:01,405
that kind of hardware.

371
00:18:01,405 --> 00:18:05,635
We also deployed
the iStack

372
00:18:05,635 --> 00:18:07,870
as a Wi-Fi router,

373
00:18:07,870 --> 00:18:11,155
and we designed
iGate gateway

374
00:18:11,155 --> 00:18:13,825
to transfer the
NDN protocol and

375
00:18:13,825 --> 00:18:17,050
IP protocol to
make it merged

376
00:18:17,050 --> 00:18:20,765
as separate NDN
edges together.

377
00:18:20,765 --> 00:18:24,895
That iGate is another
story of our group.

378
00:18:24,895 --> 00:18:28,165
And they also have
this early work.

379
00:18:28,165 --> 00:18:31,240
And also we deploy

380
00:18:31,240 --> 00:18:37,160
some prototypes or
iStack using IoT device.

381
00:18:37,160 --> 00:18:39,720
So we tried to give

382
00:18:39,720 --> 00:18:44,565
a long-term evolution
support to the iStack.

383
00:18:44,565 --> 00:18:45,840
And this year we tried to

384
00:18:45,840 --> 00:18:47,250
launch the website and

385
00:18:47,250 --> 00:18:49,315
the gateway
initial version

386
00:18:49,315 --> 00:18:51,310
and we try to use

387
00:18:51,310 --> 00:18:53,980
it for real products
in the next year.

388
00:18:53,980 --> 00:18:56,020
So that's my
talk. Thank you.

389
00:18:56,020 --> 00:19:01,120
>> Thank you, Tian.

390
00:19:01,120 --> 00:19:05,080
Let's see. Monitoring
the stack,

391
00:19:05,080 --> 00:19:06,520
I don't see questions
from stack,

392
00:19:06,520 --> 00:19:08,930
any question from
the audience?

393
00:19:10,280 --> 00:19:12,570
>> Very nice
talk. Thank you.

394
00:19:12,570 --> 00:19:16,410
So is this a kernel
module that's

395
00:19:16,410 --> 00:19:20,830
loaded dynamically or
how does [OVERLAPPING].

396
00:19:20,830 --> 00:19:22,825
>> Yes, this kind of

397
00:19:22,825 --> 00:19:25,390
kernel module
underloaded as

398
00:19:25,390 --> 00:19:27,955
a network stack. Yes.

399
00:19:27,955 --> 00:19:29,900
>> Okay.

400
00:19:30,090 --> 00:19:33,800
>> And you mentioned
some prototypes,

401
00:19:34,470 --> 00:19:38,995
did you done performance
tests and see

402
00:19:38,995 --> 00:19:41,650
how it performs compared

403
00:19:41,650 --> 00:19:45,020
to NFT and another
forwarders?

404
00:19:46,140 --> 00:19:49,210
>> Actually, we done that,

405
00:19:49,210 --> 00:19:59,500
but since it's
not a [NOISE]

406
00:19:59,500 --> 00:20:04,495
>> Connection issue
looks like again and so

407
00:20:04,495 --> 00:20:06,070
we'd probably have to

408
00:20:06,070 --> 00:20:10,600
continue on the
Slack channel,

409
00:20:10,600 --> 00:20:12,940
we've the general
question of in

410
00:20:12,940 --> 00:20:14,500
Kernel versus bypass

411
00:20:14,500 --> 00:20:16,180
the performance
comparisons,

412
00:20:16,180 --> 00:20:18,595
whether he has done
any benchmarking

413
00:20:18,595 --> 00:20:22,600
can be addressed on
the Slack channel.

414
00:20:22,600 --> 00:20:25,870
So we can move to

415
00:20:25,870 --> 00:20:28,764
the next remote speaker

416
00:20:28,764 --> 00:20:33,235
for this second
presentation,

417
00:20:33,235 --> 00:20:35,440
we're moving along Teng,

418
00:20:35,440 --> 00:20:37,914
we can continue the
discussion online

419
00:20:37,914 --> 00:20:40,330
and we're moving to
the second speaker

420
00:20:40,330 --> 00:20:41,630
in this session.

421
00:20:41,630 --> 00:20:43,680
Teng Liang on bringing

422
00:20:43,680 --> 00:20:44,925
name data networking

423
00:20:44,925 --> 00:20:47,580
to InternetLivestreaming,

424
00:20:47,580 --> 00:20:51,540
Teng start sharing
your screen

425
00:20:51,540 --> 00:20:54,350
while I introduce you.

426
00:20:54,350 --> 00:20:56,455
>> Yes, can you here me?

427
00:20:56,455 --> 00:20:57,670
>> Yeah, we can hear you,

428
00:20:57,670 --> 00:21:00,850
so start sharing while
I introduce you,

429
00:21:00,850 --> 00:21:03,385
Teng Liang is working in

430
00:21:03,385 --> 00:21:06,970
banks Shang lab as an
assistant researcher,

431
00:21:06,970 --> 00:21:08,470
he received his PhD from

432
00:21:08,470 --> 00:21:09,550
the University of Arizona

433
00:21:09,550 --> 00:21:11,110
under the supervision of

434
00:21:11,110 --> 00:21:13,720
Beichuan Zhang and he has

435
00:21:13,720 --> 00:21:17,485
been doing research in
the end since 2014.

436
00:21:17,485 --> 00:21:21,170
Go ahead, Teng
you can start.

437
00:21:22,590 --> 00:21:25,240
>> Thank you for
introduction.

438
00:21:25,240 --> 00:21:27,280
Hi everyone my name
is Teng Liang,

439
00:21:27,280 --> 00:21:29,620
today I'm going to
introduce our work,

440
00:21:29,620 --> 00:21:30,850
bringing the data network

441
00:21:30,850 --> 00:21:33,680
into Internetlive
streaming.

442
00:21:34,320 --> 00:21:37,750
So what is the
biggest obstacle

443
00:21:37,750 --> 00:21:40,015
to ICN or Indian
deployment?

444
00:21:40,015 --> 00:21:42,040
One of which probably

445
00:21:42,040 --> 00:21:44,125
is lacking our
applications

446
00:21:44,125 --> 00:21:46,765
support actually
yesterday many people

447
00:21:46,765 --> 00:21:49,295
do care about it and
discuss about it.

448
00:21:49,295 --> 00:21:52,350
And one solution maybe is

449
00:21:52,350 --> 00:21:55,890
to NDNize applications
which proposed in

450
00:21:55,890 --> 00:21:59,250
ICN'18 and which means to

451
00:21:59,250 --> 00:22:01,500
translate between
existing application

452
00:22:01,500 --> 00:22:03,530
level protocols in NDN.

453
00:22:03,530 --> 00:22:06,010
And why we're
going to do that,

454
00:22:06,010 --> 00:22:07,510
because it only requires

455
00:22:07,510 --> 00:22:08,950
minor development efforts,

456
00:22:08,950 --> 00:22:10,840
but gaining significant

457
00:22:10,840 --> 00:22:12,880
architectural benefits.

458
00:22:12,880 --> 00:22:17,635
And in 2018, we built
mailSync which can

459
00:22:17,635 --> 00:22:22,075
toll existing email
applications over NDN,

460
00:22:22,075 --> 00:22:24,880
we also made designs
for chat applications.

461
00:22:24,880 --> 00:22:26,650
And behind them are

462
00:22:26,650 --> 00:22:29,995
IMAP protocols and
XMPP protocol,

463
00:22:29,995 --> 00:22:32,590
which has the NDN.

464
00:22:32,590 --> 00:22:34,915
And in 2020,

465
00:22:34,915 --> 00:22:37,900
Chavush in University
of Arizona,

466
00:22:37,900 --> 00:22:39,865
he builds this
iViSA which is

467
00:22:39,865 --> 00:22:42,460
on-demand video
streaming over

468
00:22:42,460 --> 00:22:44,410
NDN and he actually

469
00:22:44,410 --> 00:22:47,485
translates a DASH and NDN.

470
00:22:47,485 --> 00:22:50,860
Last year, we built
on top of his work,

471
00:22:50,860 --> 00:22:52,390
we move one step further,

472
00:22:52,390 --> 00:22:53,920
we just make
this on-demand

473
00:22:53,920 --> 00:22:56,755
video into live streaming

474
00:22:56,755 --> 00:23:00,805
and behind them
we translate

475
00:23:00,805 --> 00:23:05,500
HLS and NDN and also
LL-HLS and NDN,

476
00:23:05,500 --> 00:23:09,400
this refers to low
latency protocol.

477
00:23:09,400 --> 00:23:11,830
So what is this

478
00:23:11,830 --> 00:23:13,645
PCLive and NDNized

479
00:23:13,645 --> 00:23:16,465
Internets Live
streaming architecture?

480
00:23:16,465 --> 00:23:18,595
As you can see here,

481
00:23:18,595 --> 00:23:21,970
this is existing
livestreaming producer

482
00:23:21,970 --> 00:23:23,590
over IP and they

483
00:23:23,590 --> 00:23:26,440
publish video streaming to

484
00:23:26,440 --> 00:23:28,000
a server normally an

485
00:23:28,000 --> 00:23:31,280
existing protocol
called RTMP.

486
00:23:31,890 --> 00:23:34,690
And the video server

487
00:23:34,690 --> 00:23:36,640
has a transcoder
which will

488
00:23:36,640 --> 00:23:40,870
translate our RTMP
into HLS files,

489
00:23:40,870 --> 00:23:43,495
there could be
other protocols,

490
00:23:43,495 --> 00:23:45,070
so then the server

491
00:23:45,070 --> 00:23:46,735
will distribute
to the files,

492
00:23:46,735 --> 00:23:49,420
the videos, to the network

493
00:23:49,420 --> 00:23:51,580
and all work
stuff from here.

494
00:23:51,580 --> 00:23:54,400
We will translate
the HLS files

495
00:23:54,400 --> 00:23:56,920
into NDN format and

496
00:23:56,920 --> 00:23:58,600
published like
Ronnie thing or

497
00:23:58,600 --> 00:24:00,670
NDN producer and publishes

498
00:24:00,670 --> 00:24:02,515
it to an NDN network,

499
00:24:02,515 --> 00:24:05,500
so here we will have

500
00:24:05,500 --> 00:24:07,060
the Indian package and

501
00:24:07,060 --> 00:24:10,040
we'll publish it to
our NDN network.

502
00:24:10,560 --> 00:24:13,180
On the consumer side,

503
00:24:13,180 --> 00:24:16,330
there's the existing
video player and we use

504
00:24:16,330 --> 00:24:19,090
shocker player
that's Shaka was

505
00:24:19,090 --> 00:24:21,955
used as created
by Google and

506
00:24:21,955 --> 00:24:25,705
it will use HLS protocols
to retrieve data,

507
00:24:25,705 --> 00:24:27,760
which is HLS request and

508
00:24:27,760 --> 00:24:29,530
response and
basically it's

509
00:24:29,530 --> 00:24:32,080
just a HTTP GET and
there's a response.

510
00:24:32,080 --> 00:24:34,540
So the good
thing is when we

511
00:24:34,540 --> 00:24:36,850
translate this into
NDN is very simple,

512
00:24:36,850 --> 00:24:38,740
we just trusted
request response into

513
00:24:38,740 --> 00:24:41,605
the NDN's interests
data format.

514
00:24:41,605 --> 00:24:43,735
And to summarize it we can

515
00:24:43,735 --> 00:24:46,450
see on the producer side,

516
00:24:46,450 --> 00:24:48,295
there's data
translation what we

517
00:24:48,295 --> 00:24:51,820
summarized and on
the customer side

518
00:24:51,820 --> 00:24:53,305
there is communication
translation,

519
00:24:53,305 --> 00:24:55,780
there are some very
common designs.

520
00:24:55,780 --> 00:24:58,810
And also, as you can see,

521
00:24:58,810 --> 00:25:01,435
we reused many
existing modules,

522
00:25:01,435 --> 00:25:05,365
but we are able to run
it over NDN network,

523
00:25:05,365 --> 00:25:07,510
that's what we mean, only

524
00:25:07,510 --> 00:25:10,555
requires minor
development efforts.

525
00:25:10,555 --> 00:25:12,670
And for the
evaluation part,

526
00:25:12,670 --> 00:25:15,130
we actually have the
real-world deployment

527
00:25:15,130 --> 00:25:17,410
that experiment were

528
00:25:17,410 --> 00:25:19,645
built and little NDN

529
00:25:19,645 --> 00:25:22,600
over a testbed as the
NDN testbed does,

530
00:25:22,600 --> 00:25:25,210
we run NFDs over
Alibaba Cloud in

531
00:25:25,210 --> 00:25:27,310
seven different cities
with UDP tunnels

532
00:25:27,310 --> 00:25:30,010
connected and here's
the top project.

533
00:25:30,010 --> 00:25:32,950
We have the PC
live producer

534
00:25:32,950 --> 00:25:34,150
connected to the Shenzhen

535
00:25:34,150 --> 00:25:36,565
node to published
the video.

536
00:25:36,565 --> 00:25:38,350
And because it's very

537
00:25:38,350 --> 00:25:40,165
similar to the
IP architecture,

538
00:25:40,165 --> 00:25:41,590
we used many modules,

539
00:25:41,590 --> 00:25:45,745
we compare it with
IP live streaming.

540
00:25:45,745 --> 00:25:51,025
So in the IP architecture,

541
00:25:51,025 --> 00:25:54,010
we can support 21 clients

542
00:25:54,010 --> 00:25:57,760
because way the PCLive
outgoing bandwidth is

543
00:25:57,760 --> 00:26:02,680
roughly about 50 Mbps
and for NDN we have

544
00:26:02,680 --> 00:26:04,660
different clients connect
to different nodes

545
00:26:04,660 --> 00:26:07,840
and we can support
83 clients,

546
00:26:07,840 --> 00:26:09,010
this does not even reach

547
00:26:09,010 --> 00:26:11,980
the theoretical limit and

548
00:26:11,980 --> 00:26:13,915
we didn't even mention to

549
00:26:13,915 --> 00:26:16,390
test how fast or

550
00:26:16,390 --> 00:26:17,980
how many more
clients NDN can

551
00:26:17,980 --> 00:26:22,285
support but just to show,

552
00:26:22,285 --> 00:26:24,835
there's some benefits
like in every ocation,

553
00:26:24,835 --> 00:26:26,590
we didn't even mentioned
other benefits

554
00:26:26,590 --> 00:26:29,710
like affording
or security.

555
00:26:29,710 --> 00:26:32,230
So this is what we
meant we can gain

556
00:26:32,230 --> 00:26:34,300
some architectural
benefits by doing

557
00:26:34,300 --> 00:26:36,925
this, so what's next?

558
00:26:36,925 --> 00:26:41,260
We're also studied
low-latency HLS.

559
00:26:41,260 --> 00:26:44,470
>> And also we analyze

560
00:26:44,470 --> 00:26:45,370
a little bit why

561
00:26:45,370 --> 00:26:47,515
everything seems
very simple,

562
00:26:47,515 --> 00:26:50,200
but actually it is
a receiver driven

563
00:26:50,200 --> 00:26:51,370
protocol to achieve

564
00:26:51,370 --> 00:26:53,785
adaptive bitrate
video streaming.

565
00:26:53,785 --> 00:26:56,980
And how does it
actually work?

566
00:26:56,980 --> 00:26:58,630
So to summarize,

567
00:26:58,630 --> 00:27:00,280
step 1, they will

568
00:27:00,280 --> 00:27:02,620
periodically poll
the playlist.

569
00:27:02,620 --> 00:27:04,780
And step 2, if
the previous

570
00:27:04,780 --> 00:27:07,435
tell me there
are new items,

571
00:27:07,435 --> 00:27:10,300
it has their names, you
will retrieve them.

572
00:27:10,300 --> 00:27:13,570
This is the reason

573
00:27:13,570 --> 00:27:16,940
why this transformation
is very simple.

574
00:27:17,160 --> 00:27:19,540
And low latency was not

575
00:27:19,540 --> 00:27:21,805
the primary goal in
the first place.

576
00:27:21,805 --> 00:27:24,640
To re-throw the CAD file
extensions on top of

577
00:27:24,640 --> 00:27:27,400
HLS to make it
low latency.

578
00:27:27,400 --> 00:27:29,020
And that's what
we are interested

579
00:27:29,020 --> 00:27:32,990
in to see if we can
endianness them easily.

580
00:27:33,000 --> 00:27:35,800
To analyze it,

581
00:27:35,800 --> 00:27:38,695
so we summarize
the extensions

582
00:27:38,695 --> 00:27:41,335
into two different
categories.

583
00:27:41,335 --> 00:27:43,720
And the first one they're

584
00:27:43,720 --> 00:27:45,670
targeting is BLock
Playlist Reload,

585
00:27:45,670 --> 00:27:47,080
basically means they

586
00:27:47,080 --> 00:27:48,220
will hold on
the request for

587
00:27:48,220 --> 00:27:49,450
the prettiest article they

588
00:27:49,450 --> 00:27:51,280
expected previously
is generated,

589
00:27:51,280 --> 00:27:53,830
then you send back.

590
00:27:53,830 --> 00:27:58,210
And the second one
basically means that

591
00:27:58,210 --> 00:27:59,260
we will hold the
requests for

592
00:27:59,260 --> 00:28:00,940
the expected video chunks

593
00:28:00,940 --> 00:28:02,800
article they
are generated.

594
00:28:02,800 --> 00:28:04,600
And the third one is still

595
00:28:04,600 --> 00:28:06,715
provides the
Delta updates.

596
00:28:06,715 --> 00:28:10,390
To analyze them on
the consumer side,

597
00:28:10,390 --> 00:28:12,985
we just need to add
conditions to request.

598
00:28:12,985 --> 00:28:15,190
The field is called
interests parameters.

599
00:28:15,190 --> 00:28:19,180
We just say you don't
need to send back data,

600
00:28:19,180 --> 00:28:21,520
would drop them if
there's no data

601
00:28:21,520 --> 00:28:23,080
generated because
we expect

602
00:28:23,080 --> 00:28:25,210
them degenerative soon.

603
00:28:25,210 --> 00:28:26,920
On the producer side,

604
00:28:26,920 --> 00:28:29,260
they will hold other
requests and wait

605
00:28:29,260 --> 00:28:30,685
until the data
is generated

606
00:28:30,685 --> 00:28:32,755
and send back directory.

607
00:28:32,755 --> 00:28:35,020
So the key is
the word hold on

608
00:28:35,020 --> 00:28:37,000
the interest until the
data is generated,

609
00:28:37,000 --> 00:28:39,220
which actually saves
a time of pulling.

610
00:28:39,220 --> 00:28:40,840
And one constraints,

611
00:28:40,840 --> 00:28:42,295
this will leave
some states

612
00:28:42,295 --> 00:28:45,310
on the path in
the networking.

613
00:28:45,310 --> 00:28:47,065
But because this
is live streaming,

614
00:28:47,065 --> 00:28:50,170
so those states won't stay

615
00:28:50,170 --> 00:28:52,780
long so that's why

616
00:28:52,780 --> 00:28:55,585
we can actually
use this strategy.

617
00:28:55,585 --> 00:28:58,030
And there are two
other extensions.

618
00:28:58,030 --> 00:28:59,980
That's our
application specific.

619
00:28:59,980 --> 00:29:01,600
Why? Is they actually

620
00:29:01,600 --> 00:29:04,345
generates smaller
video chunks.

621
00:29:04,345 --> 00:29:05,740
And the other
one is they have

622
00:29:05,740 --> 00:29:07,825
provided the
orientation reports.

623
00:29:07,825 --> 00:29:10,450
And to internalize
them is very simple.

624
00:29:10,450 --> 00:29:11,920
We actually have smaller

625
00:29:11,920 --> 00:29:13,090
application layer unit

626
00:29:13,090 --> 00:29:14,495
with naming changes.

627
00:29:14,495 --> 00:29:16,215
And the second
one does not

628
00:29:16,215 --> 00:29:18,700
even need to
change anything.

629
00:29:18,870 --> 00:29:23,350
And for this, we also
do more evaluation.

630
00:29:23,350 --> 00:29:25,795
We have the
similar structure.

631
00:29:25,795 --> 00:29:27,685
And on the right side

632
00:29:27,685 --> 00:29:29,200
there is a publisher push

633
00:29:29,200 --> 00:29:32,860
the video using RTMP to
a video transporter,

634
00:29:32,860 --> 00:29:34,510
will use GPAC,

635
00:29:34,510 --> 00:29:37,525
this open source
framework,

636
00:29:37,525 --> 00:29:40,150
because it
supports LL HLS.

637
00:29:40,150 --> 00:29:43,120
And the changes
were made that way,

638
00:29:43,120 --> 00:29:45,460
didn't change all
of the extensions.

639
00:29:45,460 --> 00:29:47,965
Where only for
the extension to

640
00:29:47,965 --> 00:29:49,270
hold on the interest until

641
00:29:49,270 --> 00:29:50,980
upcoming data is ready.

642
00:29:50,980 --> 00:29:52,825
And for the video size,

643
00:29:52,825 --> 00:29:58,360
segment size from four
second to 0.56 second.

644
00:29:58,360 --> 00:29:59,830
That's essential four,

645
00:29:59,830 --> 00:30:01,300
and the proper size is set

646
00:30:01,300 --> 00:30:03,055
to three videos elements.

647
00:30:03,055 --> 00:30:06,340
And the result is
the point of capture

648
00:30:06,340 --> 00:30:09,490
to playback latency
decreases from 20,

649
00:30:09,490 --> 00:30:12,865
about 27 seconds
to 3.5 seconds.

650
00:30:12,865 --> 00:30:14,290
There are still rules if

651
00:30:14,290 --> 00:30:15,924
we tune the parameters.

652
00:30:15,924 --> 00:30:19,810
So that's about work.

653
00:30:19,810 --> 00:30:25,630
The last, this is
from Van's paper.

654
00:30:25,630 --> 00:30:27,655
He made the observation.

655
00:30:27,655 --> 00:30:31,195
I've read similar
arguments in other papers,

656
00:30:31,195 --> 00:30:33,640
basically seeing
applications,

657
00:30:33,640 --> 00:30:34,600
retrieved data,

658
00:30:34,600 --> 00:30:38,710
but today's network,
just create tunnels.

659
00:30:38,710 --> 00:30:41,230
There's gap. An NDN design

660
00:30:41,230 --> 00:30:43,060
should fill the gap.

661
00:30:43,060 --> 00:30:45,055
If this is true,

662
00:30:45,055 --> 00:30:46,405
actually many modern

663
00:30:46,405 --> 00:30:47,530
application
level protocols,

664
00:30:47,530 --> 00:30:49,810
they actually should
be easily translated

665
00:30:49,810 --> 00:30:52,435
or supported by NDN
because they retrieved,

666
00:30:52,435 --> 00:30:55,480
and NDN also does it.

667
00:30:55,480 --> 00:30:58,720
And also, isn't

668
00:30:58,720 --> 00:31:01,990
it our work a good
proof of this argument?

669
00:31:01,990 --> 00:31:04,180
So that's the end of

670
00:31:04,180 --> 00:31:07,010
my presentation.
Thank you.

671
00:31:09,630 --> 00:31:12,280
>> Thank you very much.

672
00:31:12,280 --> 00:31:15,970
There are a couple of
questions from Slack.

673
00:31:15,970 --> 00:31:17,935
One is, did you

674
00:31:17,935 --> 00:31:20,035
quantify the
computational cost of

675
00:31:20,035 --> 00:31:22,300
signing plus
verification and

676
00:31:22,300 --> 00:31:24,890
its effect on latency?

677
00:31:26,670 --> 00:31:31,645
>> Actually, we
didn't do that yet.

678
00:31:31,645 --> 00:31:32,800
We do have plans,

679
00:31:32,800 --> 00:31:36,370
but because one reason

680
00:31:36,370 --> 00:31:39,130
is that the
content right now,

681
00:31:39,130 --> 00:31:41,500
is not that's
very sensitive.

682
00:31:41,500 --> 00:31:44,125
We do not have anything
to protect that,

683
00:31:44,125 --> 00:31:46,045
at least for the
current stage.

684
00:31:46,045 --> 00:31:48,475
So we didn't evaluate the

685
00:31:48,475 --> 00:31:53,305
sign-in part for now.

686
00:31:53,305 --> 00:31:56,125
When we have a dummy key

687
00:31:56,125 --> 00:31:58,360
to do some fake signing,

688
00:31:58,360 --> 00:32:00,370
just the current state

689
00:32:00,370 --> 00:32:01,840
of the whole purpose is to

690
00:32:01,840 --> 00:32:04,510
demonstrate the thing is

691
00:32:04,510 --> 00:32:06,325
immunization
approach can work.

692
00:32:06,325 --> 00:32:09,400
In future work we did that

693
00:32:09,400 --> 00:32:12,010
for the signing as

694
00:32:12,010 --> 00:32:14,240
well as for the
encryption.

695
00:32:15,180 --> 00:32:19,720
>> Okay. I think by doing

696
00:32:19,720 --> 00:32:23,020
the ionization
versus rewriting

697
00:32:23,020 --> 00:32:25,930
the application
as an NDN Native,

698
00:32:25,930 --> 00:32:30,070
you're losing anything
from NDN advantages

699
00:32:30,070 --> 00:32:36,040
[OVERLAPPING] in terms of

700
00:32:36,040 --> 00:32:37,600
adaptive forwarding

701
00:32:37,600 --> 00:32:39,880
security performance-wise,

702
00:32:39,880 --> 00:32:43,540
do you lose anything by
doing the translation

703
00:32:43,540 --> 00:32:47,660
versus rewriting native
Indian application?

704
00:32:48,210 --> 00:32:51,220
>> Yeah, that's a
very good question.

705
00:32:51,220 --> 00:32:56,290
At least for the
live streaming,

706
00:32:56,290 --> 00:33:02,695
I haven't observed any
sacrifice too far.

707
00:33:02,695 --> 00:33:04,975
But maybe in other

708
00:33:04,975 --> 00:33:06,700
application programs
because one thing

709
00:33:06,700 --> 00:33:08,230
is we only did

710
00:33:08,230 --> 00:33:10,705
the translation for the
communication part,

711
00:33:10,705 --> 00:33:13,270
that means there are
some logics were still

712
00:33:13,270 --> 00:33:17,350
follow more than the
application logics.

713
00:33:17,350 --> 00:33:19,780
If they're
designed perfect,

714
00:33:19,780 --> 00:33:24,025
we don't sacrifice
anything.

715
00:33:24,025 --> 00:33:26,245
But if they are
not designed well,

716
00:33:26,245 --> 00:33:34,285
maybe there are
something we cannot get.

717
00:33:34,285 --> 00:33:37,135
But so far for this
specific case,

718
00:33:37,135 --> 00:33:39,440
I didn't find anything.

719
00:33:41,490 --> 00:33:45,100
>> Another question
from Slack.

720
00:33:45,100 --> 00:33:49,150
Why is NDN HTTP

721
00:33:49,150 --> 00:33:52,615
live streaming slower
than pure HLS?

722
00:33:52,615 --> 00:33:54,040
I don't know
whether that was

723
00:33:54,040 --> 00:33:55,990
in your presentation.

724
00:33:55,990 --> 00:34:00,025
Did you notice
that it's slower?

725
00:34:00,025 --> 00:34:02,575
>> Which one
is for, sorry?

726
00:34:02,575 --> 00:34:07,180
>> NDN HLS versus
non-NDN HLS?

727
00:34:07,180 --> 00:34:12,040
>> NDN HLS. Is
this slower?

728
00:34:12,040 --> 00:34:15,910
[OVERLAPPING]

729
00:34:15,910 --> 00:34:17,905
>> Maybe on Slack,

730
00:34:17,905 --> 00:34:20,860
why isn't the NHLS or
slower than pure HLS?

731
00:34:20,860 --> 00:34:25,270
I don't know whether
that was in your table.

732
00:34:25,270 --> 00:34:27,835
It was lower speed.

733
00:34:27,835 --> 00:34:32,750
>> You can mean the
throughput or which one?

734
00:34:33,870 --> 00:34:36,640
>> Yeah, throughput,
reading from

735
00:34:36,640 --> 00:34:40,930
the Slack channel
in your table.

736
00:34:40,930 --> 00:34:46,120
[OVERLAPPING]

737
00:34:46,120 --> 00:34:47,410
>> So for this one,

738
00:34:47,410 --> 00:34:49,360
maybe there's some I

739
00:34:49,360 --> 00:34:54,100
didn't experience
very accurately.

740
00:34:54,100 --> 00:34:55,915
This throughput
doesn't mean

741
00:34:55,915 --> 00:34:58,390
the whole throughput.

742
00:34:58,390 --> 00:35:01,120
This means the
bottlenecked throughput.

743
00:35:01,120 --> 00:35:03,535
For the IP, the
bottleneck is,

744
00:35:03,535 --> 00:35:05,035
happens at the server.

745
00:35:05,035 --> 00:35:07,015
So everyone retrieved
from the server.

746
00:35:07,015 --> 00:35:10,510
And the server called
choline throughput has

747
00:35:10,510 --> 00:35:14,320
only about 50 mbps limit.

748
00:35:14,320 --> 00:35:17,110
So we need to roughly
reach out that we

749
00:35:17,110 --> 00:35:18,940
cannot add new clients

750
00:35:18,940 --> 00:35:20,545
because it reaches
throughput.

751
00:35:20,545 --> 00:35:23,590
This throughput 33 mbps,

752
00:35:23,590 --> 00:35:26,050
it happens on
the Edge Node.

753
00:35:26,050 --> 00:35:27,760
Different clients
like each

754
00:35:27,760 --> 00:35:28,885
node we connect to

755
00:35:28,885 --> 00:35:31,780
about seven or eight
clients to each node

756
00:35:31,780 --> 00:35:38,200
and because of the
built-in multicast

757
00:35:38,200 --> 00:35:39,505
and an in-network
question,

758
00:35:39,505 --> 00:35:41,950
they will not aggregate
you that the server.

759
00:35:41,950 --> 00:35:43,315
So the server side,

760
00:35:43,315 --> 00:35:45,430
there's only one
string outgoing,

761
00:35:45,430 --> 00:35:47,465
there's no bottleneck.

762
00:35:47,465 --> 00:35:49,080
But on different nodes,

763
00:35:49,080 --> 00:35:54,060
there will be
the bottleneck.

764
00:35:54,060 --> 00:35:56,655
And what we'll observe
is their bottleneck,

765
00:35:56,655 --> 00:35:59,370
the maximum is 33
mb per [inaudible].

766
00:35:59,370 --> 00:36:07,605
So that actually
shows the NDN,

767
00:36:07,605 --> 00:36:11,320
we can achieve,
serve more kinds

768
00:36:11,320 --> 00:36:16,250
with smaller
bottlenecks, throughput.

769
00:36:17,160 --> 00:36:20,030
>> Okay, Thanks.

770
00:36:24,660 --> 00:36:28,270
>> Do you use NFD to

771
00:36:28,270 --> 00:36:32,500
support the video
or transfer?

772
00:36:32,500 --> 00:36:36,190
>> Yeah, right
now, we use NFD,

773
00:36:36,190 --> 00:36:38,395
we run NFD on
different nodes,

774
00:36:38,395 --> 00:36:42,385
we connected the
producer to the one NFD.

775
00:36:42,385 --> 00:36:46,480
>> So is the 33
megabits per

776
00:36:46,480 --> 00:36:50,260
second bottleneck due to

777
00:36:50,260 --> 00:36:53,245
NFDs performance
bottleneck

778
00:36:53,245 --> 00:36:55,910
or something else?

779
00:36:57,030 --> 00:37:00,920
>> I don't think this
is NFDs bottleneck.

780
00:37:02,840 --> 00:37:10,690
On the nodes, we
rinse the clouds,

781
00:37:10,690 --> 00:37:13,610
virtual machines
are clouds.

782
00:37:17,970 --> 00:37:20,890
This may not be
the bottleneck,

783
00:37:20,890 --> 00:37:24,250
we may add more clients
to support that,

784
00:37:24,250 --> 00:37:26,900
but we just
didn't do that.

785
00:37:30,720 --> 00:37:33,280
The bottleneck of NFD is

786
00:37:33,280 --> 00:37:36,370
just during one test,

787
00:37:36,370 --> 00:37:39,609
we add 83 clients

788
00:37:39,609 --> 00:37:41,170
and we observed
the maximum

789
00:37:41,170 --> 00:37:43,790
from one node is 33.

790
00:37:44,970 --> 00:37:48,774
>> So if you add
more clients,

791
00:37:48,774 --> 00:37:54,370
the edge node throughput

792
00:37:54,370 --> 00:37:57,980
will be higher than 33?

793
00:37:59,100 --> 00:38:03,160
>> For some reason, if
we add more clients,

794
00:38:03,160 --> 00:38:05,830
their video quality,

795
00:38:05,830 --> 00:38:09,460
some of them will
decrease very badly,

796
00:38:09,460 --> 00:38:10,675
we didn't find why,

797
00:38:10,675 --> 00:38:13,825
so to make a fair
comparison at this number,

798
00:38:13,825 --> 00:38:15,550
at every client, they have

799
00:38:15,550 --> 00:38:19,940
very good video quality
during the testing.

800
00:38:20,850 --> 00:38:24,010
If we add more the
quality decreases,

801
00:38:24,010 --> 00:38:25,600
but we didn't know why.

802
00:38:25,600 --> 00:38:27,310
Is it because of NFD?

803
00:38:27,310 --> 00:38:30,865
Or just because
some other reasons.

804
00:38:30,865 --> 00:38:32,680
I cannot conclude,

805
00:38:32,680 --> 00:38:36,860
it's because of
NFD, that's why.

806
00:38:37,170 --> 00:38:39,800
>> Thank you.

807
00:38:40,310 --> 00:38:42,435
>> Thank you Teng.

808
00:38:42,435 --> 00:38:44,880
There're a couple
of more on Slack,

809
00:38:44,880 --> 00:38:47,490
you can go and
answer those,

810
00:38:47,490 --> 00:38:50,010
and we move to
the next speaker,

811
00:38:50,010 --> 00:38:54,670
Mohammed Elbadry.
Thanks Teng.

812
00:38:54,670 --> 00:38:55,195
>> Thank you.

813
00:38:55,195 --> 00:38:58,150
>> Thank you very
much. Next speaker,

814
00:38:58,150 --> 00:38:59,710
Mohammed Elbadry, and

815
00:38:59,710 --> 00:39:03,170
you start sharing
your screen.

816
00:39:05,630 --> 00:39:09,100
The next talk on, towards

817
00:39:09,100 --> 00:39:10,360
first data centric medium

818
00:39:10,360 --> 00:39:12,865
access control,
multi-rate control.

819
00:39:12,865 --> 00:39:14,740
Mohammed is a fifth year

820
00:39:14,740 --> 00:39:16,765
PhD student in
Stony Brook,

821
00:39:16,765 --> 00:39:20,125
under a professor
Ye supervision,

822
00:39:20,125 --> 00:39:22,480
is main research
focus area is

823
00:39:22,480 --> 00:39:25,869
developing a wireless
MAC for ICN.

824
00:39:25,869 --> 00:39:28,570
He has developed systems
on edge devices like

825
00:39:28,570 --> 00:39:30,250
raspberry *** to be easily

826
00:39:30,250 --> 00:39:32,815
usable by the
research community.

827
00:39:32,815 --> 00:39:34,870
Mohammed are you ready?

828
00:39:34,870 --> 00:39:36,190
>> Yes, thank
you very much.

829
00:39:36,190 --> 00:39:37,285
Can you hear me okay?

830
00:39:37,285 --> 00:39:39,055
>> Yeah, go ahead, please.

831
00:39:39,055 --> 00:39:40,660
>> I'll start.
Hi everyone,

832
00:39:40,660 --> 00:39:42,700
thanks for letting me

833
00:39:42,700 --> 00:39:45,565
present the Indian
community today.

834
00:39:45,565 --> 00:39:47,770
So I'm about to introduce

835
00:39:47,770 --> 00:39:50,140
a multicast rate
control design,

836
00:39:50,140 --> 00:39:51,820
and this work is
ongoing right now,

837
00:39:51,820 --> 00:39:53,110
and I want to
introduce what we've

838
00:39:53,110 --> 00:39:55,330
done and what the
big picture is.

839
00:39:55,330 --> 00:39:58,300
So right now we're
trying to make ICN,

840
00:39:58,300 --> 00:40:00,190
we're trying to see
how ICN and can

841
00:40:00,190 --> 00:40:02,590
be more of an enabling
technology on edge.

842
00:40:02,590 --> 00:40:04,870
So imagine you have an
edge computing nodes

843
00:40:04,870 --> 00:40:08,680
that has wireless dongle,

844
00:40:08,680 --> 00:40:10,690
and that has
multiple sensors.

845
00:40:10,690 --> 00:40:12,430
So imagine a video camera,

846
00:40:12,430 --> 00:40:15,010
lidar, infrared camera,

847
00:40:15,010 --> 00:40:16,540
and a couple of
IMU sensors,

848
00:40:16,540 --> 00:40:18,175
accelerometer,
magnetometer

849
00:40:18,175 --> 00:40:19,375
and other sensors.

850
00:40:19,375 --> 00:40:21,565
And wants to
share that data,

851
00:40:21,565 --> 00:40:24,130
over wireless to
multiple nodes,

852
00:40:24,130 --> 00:40:26,800
so node 1,2,3,4 are
interested in the data.

853
00:40:26,800 --> 00:40:28,540
They're all interested
in video stream,

854
00:40:28,540 --> 00:40:29,830
for example, that could be

855
00:40:29,830 --> 00:40:32,350
live or just a video file.

856
00:40:32,350 --> 00:40:34,330
For the content
to be played

857
00:40:34,330 --> 00:40:36,070
real-time by nodes 1,2,3,

858
00:40:36,070 --> 00:40:38,545
and 4, week during
the transmission,

859
00:40:38,545 --> 00:40:39,760
we need the
following criteria.

860
00:40:39,760 --> 00:40:41,470
We need the loss
rate to be under

861
00:40:41,470 --> 00:40:43,240
20% and the goodput to be

862
00:40:43,240 --> 00:40:44,890
above 5 Mbps or

863
00:40:44,890 --> 00:40:45,910
else there's going to be

864
00:40:45,910 --> 00:40:47,305
a buffering duration,

865
00:40:47,305 --> 00:40:48,820
it's like you're
watching YouTube video,

866
00:40:48,820 --> 00:40:49,570
and it's just
going to keep

867
00:40:49,570 --> 00:40:51,640
buffering over
and over again.

868
00:40:51,640 --> 00:40:54,460
So the edge computing
node, for example,

869
00:40:54,460 --> 00:40:58,015
selects a random
data was 54 Mbps,

870
00:40:58,015 --> 00:40:59,590
and all nodes are happy,

871
00:40:59,590 --> 00:41:02,120
everyone is
receiving data,

872
00:41:02,120 --> 00:41:05,055
last rate is on 20 Mbps.

873
00:41:05,055 --> 00:41:06,840
And the goodput
is about 5 Mbps,

874
00:41:06,840 --> 00:41:08,025
so all nodes are happy.

875
00:41:08,025 --> 00:41:09,375
The medium changes,

876
00:41:09,375 --> 00:41:10,410
node 1 is unhappy

877
00:41:10,410 --> 00:41:11,760
because the loss
rate increases,

878
00:41:11,760 --> 00:41:13,995
let's say it goes
above to 35 Mbps.

879
00:41:13,995 --> 00:41:15,390
So the computing node to

880
00:41:15,390 --> 00:41:17,310
accommodate that
loss rate increase,

881
00:41:17,310 --> 00:41:21,410
will decrease its
data rate to 36 Mbps,

882
00:41:21,410 --> 00:41:22,990
and by decreasing
data rate,

883
00:41:22,990 --> 00:41:24,520
that increase wireless

884
00:41:24,520 --> 00:41:25,900
transmission resilience,

885
00:41:25,900 --> 00:41:28,350
so that basically node

886
00:41:28,350 --> 00:41:30,750
1 can receive the data,

887
00:41:30,750 --> 00:41:33,210
and everyone is
happy for now.

888
00:41:33,210 --> 00:41:34,980
But imagine
another scenario

889
00:41:34,980 --> 00:41:36,600
where basically
node 2 medium

890
00:41:36,600 --> 00:41:38,055
that's so much worse

891
00:41:38,055 --> 00:41:40,810
that for it to be
good on loss rate,

892
00:41:40,810 --> 00:41:44,440
so it can achieve
under 20% loss rate,

893
00:41:44,440 --> 00:41:47,270
it needs 3 Mbps data rate

894
00:41:47,270 --> 00:41:49,485
from edge computing nodes.

895
00:41:49,485 --> 00:41:51,450
Basically that's
not going to

896
00:41:51,450 --> 00:41:53,070
work too well
because essentially

897
00:41:53,070 --> 00:41:55,230
that can impact node 1,3

898
00:41:55,230 --> 00:41:57,480
and 4 because they
need minimum of

899
00:41:57,480 --> 00:41:59,435
goodput of 5 Mbps

900
00:41:59,435 --> 00:42:01,255
to be able to

901
00:42:01,255 --> 00:42:02,740
continue playing
the video live.

902
00:42:02,740 --> 00:42:04,540
So essentially what
should happen as

903
00:42:04,540 --> 00:42:05,740
the computing
node abandons

904
00:42:05,740 --> 00:42:07,360
node number 2 and say,

905
00:42:07,360 --> 00:42:09,805
you're basically
requirements to

906
00:42:09,805 --> 00:42:12,460
satisfy you while
satisfying everyone else,

907
00:42:12,460 --> 00:42:14,260
it's too much, and we're

908
00:42:14,260 --> 00:42:14,800
not going to be able to

909
00:42:14,800 --> 00:42:16,420
continue
transmitting to you.

910
00:42:16,420 --> 00:42:19,300
So what I just
explained is,

911
00:42:19,300 --> 00:42:21,010
that scenario is
a big picture

912
00:42:21,010 --> 00:42:22,375
of what we're
trying to do.

913
00:42:22,375 --> 00:42:23,830
Essentially multi cast

914
00:42:23,830 --> 00:42:25,510
rate control
communication,

915
00:42:25,510 --> 00:42:27,400
where you have multiple
nodes interested in

916
00:42:27,400 --> 00:42:29,245
the same data
over wireless,

917
00:42:29,245 --> 00:42:30,790
and each of them

918
00:42:30,790 --> 00:42:32,590
has different needs
and application has

919
00:42:32,590 --> 00:42:35,290
certain requirements
for loss rate

920
00:42:35,290 --> 00:42:38,140
and goodput to
perform properly.

921
00:42:38,140 --> 00:42:40,480
So how does

922
00:42:40,480 --> 00:42:42,235
existing wireless
technology do it,

923
00:42:42,235 --> 00:42:43,555
and what exists right now?

924
00:42:43,555 --> 00:42:44,980
Existing wireless
technology

925
00:42:44,980 --> 00:42:45,910
is only a unicast,

926
00:42:45,910 --> 00:42:47,860
meaning one receiver,
one transmitter.

927
00:42:47,860 --> 00:42:49,300
So as you can see
on the right side,

928
00:42:49,300 --> 00:42:50,815
there is node
1 and node 2.

929
00:42:50,815 --> 00:42:52,090
The way it works
is that the

930
00:42:52,090 --> 00:42:53,740
transmitter sends
a data frame,

931
00:42:53,740 --> 00:42:55,960
say at 54 Mbps,

932
00:42:55,960 --> 00:42:58,105
receiver sends an
acknowledgment

933
00:42:58,105 --> 00:42:59,320
and you keep doing,

934
00:42:59,320 --> 00:43:01,674
and if no ACK is received,

935
00:43:01,674 --> 00:43:03,310
essentially if you send
the data frame and

936
00:43:03,310 --> 00:43:05,215
doesn't get through
acknowledged,

937
00:43:05,215 --> 00:43:08,410
the node 1 sends the
thing data frame again,

938
00:43:08,410 --> 00:43:09,760
at lower data rate

939
00:43:09,760 --> 00:43:12,055
and see if it gets
acknowledged.

940
00:43:12,055 --> 00:43:14,050
And based on that,

941
00:43:14,050 --> 00:43:15,400
an algorithm
based on history

942
00:43:15,400 --> 00:43:16,600
decides if it
should stick to

943
00:43:16,600 --> 00:43:18,190
the data rate
or attempt to

944
00:43:18,190 --> 00:43:20,230
increase the data
rate or lower it.

945
00:43:20,230 --> 00:43:21,970
So if 24 Mbps

946
00:43:21,970 --> 00:43:23,650
is gaining knowledge
every time,

947
00:43:23,650 --> 00:43:25,180
that algorithm
could try to

948
00:43:25,180 --> 00:43:26,800
transmit at a
higher data rate,

949
00:43:26,800 --> 00:43:28,210
to see if we can
perform well as

950
00:43:28,210 --> 00:43:30,175
well, to increase
the goodput.

951
00:43:30,175 --> 00:43:32,230
Couple of notes
to note about

952
00:43:32,230 --> 00:43:34,135
the scenario and
how it works,

953
00:43:34,135 --> 00:43:36,565
there is an
exploratory phase,

954
00:43:36,565 --> 00:43:38,575
the costs multiple
initial packets,

955
00:43:38,575 --> 00:43:39,670
so basically this start,

956
00:43:39,670 --> 00:43:41,710
usually low
conservative and

957
00:43:41,710 --> 00:43:44,080
keep going up until
packets are getting

958
00:43:44,080 --> 00:43:45,460
lost and then they go down

959
00:43:45,460 --> 00:43:46,660
and go up again and

960
00:43:46,660 --> 00:43:49,765
so forth until good
data rate is reached.

961
00:43:49,765 --> 00:43:52,840
It's an address space
station structure,

962
00:43:52,840 --> 00:43:54,640
so basically for
this to happen,

963
00:43:54,640 --> 00:43:56,230
node 1 keeps station

964
00:43:56,230 --> 00:43:58,120
structure inside
the kernel,

965
00:43:58,120 --> 00:44:01,840
and MAC address
keeps success rate,

966
00:44:01,840 --> 00:44:03,640
the size of the packets,
or low information

967
00:44:03,640 --> 00:44:05,845
to adjust the data rate.

968
00:44:05,845 --> 00:44:08,200
And address-based
communication is

969
00:44:08,200 --> 00:44:09,415
established for long term,

970
00:44:09,415 --> 00:44:10,615
so what that means is that

971
00:44:10,615 --> 00:44:11,950
you know who
the station is,

972
00:44:11,950 --> 00:44:13,270
you know the MAC
address, and you

973
00:44:13,270 --> 00:44:14,680
communicate for
a long time,

974
00:44:14,680 --> 00:44:15,910
so imagine pretty much

975
00:44:15,910 --> 00:44:17,710
how it works with
your laptop or

976
00:44:17,710 --> 00:44:19,765
any edge device or

977
00:44:19,765 --> 00:44:21,985
anything connected
over Wi-Fi,

978
00:44:21,985 --> 00:44:23,710
you connect to an
access point and you

979
00:44:23,710 --> 00:44:25,525
mean for tens of
minutes to hours.

980
00:44:25,525 --> 00:44:26,800
So now the access point

981
00:44:26,800 --> 00:44:28,990
and your computer have

982
00:44:28,990 --> 00:44:31,720
pretty much
hours or minutes

983
00:44:31,720 --> 00:44:34,550
to figure out what the
optimal data rate is.

984
00:44:34,980 --> 00:44:37,000
If we would apply this

985
00:44:37,000 --> 00:44:38,140
instead of being
address-based to

986
00:44:38,140 --> 00:44:39,730
make content-based
really control,

987
00:44:39,730 --> 00:44:40,960
how would it work?

988
00:44:40,960 --> 00:44:42,760
Though the challenges
that we faced

989
00:44:42,760 --> 00:44:44,365
was content-based
rate control,

990
00:44:44,365 --> 00:44:46,660
are the following:
data packets are too

991
00:44:46,660 --> 00:44:49,225
short to adapt to
data rate based on,

992
00:44:49,225 --> 00:44:50,590
by the time the
optimal rate

993
00:44:50,590 --> 00:44:52,990
is found for a
data packet,

994
00:44:52,990 --> 00:44:55,420
the data packet
may be complete,

995
00:44:55,420 --> 00:44:56,830
so as we said earlier,

996
00:44:56,830 --> 00:44:58,000
it takes about ten to 15

997
00:44:58,000 --> 00:44:59,275
packets or could take

998
00:44:59,275 --> 00:45:02,380
even more than
20 data frames

999
00:45:02,380 --> 00:45:04,045
to find the
optimal data rate,

1000
00:45:04,045 --> 00:45:06,670
that's enough data
frame transmission

1001
00:45:06,670 --> 00:45:08,950
that a whole data
packet could be gone,

1002
00:45:08,950 --> 00:45:10,585
by the time you
find the optimal

1003
00:45:10,585 --> 00:45:12,470
data rate for that packet.

1004
00:45:12,470 --> 00:45:14,280
The other problem
is that we need

1005
00:45:14,280 --> 00:45:16,230
an alternative
feedback mechanism

1006
00:45:16,230 --> 00:45:18,120
because all the
existing mechanism

1007
00:45:18,120 --> 00:45:19,950
is only for unicast
one-to-one.

1008
00:45:19,950 --> 00:45:21,180
Meanwhile, ICN

1009
00:45:21,180 --> 00:45:23,760
supports multi cast,
which is one-to-many,

1010
00:45:23,760 --> 00:45:24,960
so we need an aggregate

1011
00:45:24,960 --> 00:45:26,370
mechanism that
allows consumer

1012
00:45:26,370 --> 00:45:27,600
with the most need and

1013
00:45:27,600 --> 00:45:29,520
can be saved, go first.

1014
00:45:29,520 --> 00:45:31,500
When I say be saved,

1015
00:45:31,500 --> 00:45:33,510
as in the first example

1016
00:45:33,510 --> 00:45:35,315
we just demonstrating
the first slide,

1017
00:45:35,315 --> 00:45:39,250
node 2, needed three Mbps,

1018
00:45:39,250 --> 00:45:40,120
but that will degrade

1019
00:45:40,120 --> 00:45:41,050
everyone's performance,

1020
00:45:41,050 --> 00:45:42,910
so we just
dropping node 2.

1021
00:45:42,910 --> 00:45:45,370
We have an existing system

1022
00:45:45,370 --> 00:45:46,900
that we developed
called vMac,

1023
00:45:46,900 --> 00:45:48,325
and part of it is a DACK,

1024
00:45:48,325 --> 00:45:50,260
a developed multi cast
feedback mechanism,

1025
00:45:50,260 --> 00:45:51,910
but the issue with
that system or

1026
00:45:51,910 --> 00:45:53,710
using that protocol as is,

1027
00:45:53,710 --> 00:45:54,520
it's basically

1028
00:45:54,520 --> 00:45:56,515
the worst-performing
consumer report.

1029
00:45:56,515 --> 00:45:57,910
That's not exactly what

1030
00:45:57,910 --> 00:45:58,780
we're trying to do here,

1031
00:45:58,780 --> 00:46:00,070
we're trying to do the

1032
00:46:00,070 --> 00:46:01,420
worst-performing consumer

1033
00:46:01,420 --> 00:46:02,800
that can be saved
through reports,

1034
00:46:02,800 --> 00:46:05,080
so we have to modify
that system as well.

1035
00:46:05,080 --> 00:46:07,705
And also we need a
faster conversion

1036
00:46:07,705 --> 00:46:09,640
to the optimal data rate,

1037
00:46:09,640 --> 00:46:10,780
given the edge needs

1038
00:46:10,780 --> 00:46:12,130
and loose communication,

1039
00:46:12,130 --> 00:46:14,110
by content-based
communication, adjusting

1040
00:46:14,110 --> 00:46:17,180
data rate needs to
operate much quicker.

1041
00:46:17,820 --> 00:46:21,145
>> So this is
where we introduce

1042
00:46:21,145 --> 00:46:22,870
our multicast
control design

1043
00:46:22,870 --> 00:46:24,190
to solve these problems.

1044
00:46:24,190 --> 00:46:25,390
We designed the
highest and maintain

1045
00:46:25,390 --> 00:46:26,650
current entry adjustments.

1046
00:46:26,650 --> 00:46:28,600
We call it a stream,
which is a group of

1047
00:46:28,600 --> 00:46:30,040
data packets or
cheer the set of

1048
00:46:30,040 --> 00:46:32,335
consumers locally
and temporarily.

1049
00:46:32,335 --> 00:46:34,420
And that can
be for example

1050
00:46:34,420 --> 00:46:36,235
a file that contain
multiple data packets.

1051
00:46:36,235 --> 00:46:37,690
So a string can
be the farming.

1052
00:46:37,690 --> 00:46:38,770
So imagine a video file

1053
00:46:38,770 --> 00:46:40,255
that's 100 megabytes,

1054
00:46:40,255 --> 00:46:41,770
that'll have multiple data

1055
00:46:41,770 --> 00:46:44,200
ICMP packets will
use this file name,

1056
00:46:44,200 --> 00:46:45,550
the stream name locally

1057
00:46:45,550 --> 00:46:46,960
and temporarily
to just transmit

1058
00:46:46,960 --> 00:46:48,820
the data and adjust
the data rate for

1059
00:46:48,820 --> 00:46:49,930
the whole string
instead of for

1060
00:46:49,930 --> 00:46:51,040
each data packet,

1061
00:46:51,040 --> 00:46:53,225
figure out the
optimal database.

1062
00:46:53,225 --> 00:46:55,140
The other thing
we tried to

1063
00:46:55,140 --> 00:46:56,490
do is basically
distributed,

1064
00:46:56,490 --> 00:46:58,515
loosely coordinated
backoff feedback.

1065
00:46:58,515 --> 00:46:59,990
We call it our dad.

1066
00:46:59,990 --> 00:47:01,540
We're basically
knows who's optimal

1067
00:47:01,540 --> 00:47:02,560
feedback information

1068
00:47:02,560 --> 00:47:03,730
representing all nodes,

1069
00:47:03,730 --> 00:47:06,010
report feedback on
behalf of all consumers.

1070
00:47:06,010 --> 00:47:08,020
Because if you
have 4-5 consumers

1071
00:47:08,020 --> 00:47:09,760
and every frame
transmitted,

1072
00:47:09,760 --> 00:47:10,990
you get five
acknowledgment that

1073
00:47:10,990 --> 00:47:13,360
was basically cost
too much overhead,

1074
00:47:13,360 --> 00:47:15,970
its transmission is not
going to work well.

1075
00:47:15,970 --> 00:47:17,980
And the last thing

1076
00:47:17,980 --> 00:47:19,390
that I want to talk
more about them

1077
00:47:19,390 --> 00:47:21,190
folks to talk about
introduced as

1078
00:47:21,190 --> 00:47:22,540
multi-dimensional
rate control

1079
00:47:22,540 --> 00:47:24,220
adjustment procedure.

1080
00:47:24,220 --> 00:47:26,410
We've done a lot of
empirical experiments

1081
00:47:26,410 --> 00:47:28,495
and extensive data
collection to

1082
00:47:28,495 --> 00:47:30,070
figure out how we
can actually get

1083
00:47:30,070 --> 00:47:33,055
the data rates selection
to work faster.

1084
00:47:33,055 --> 00:47:35,350
So that way we can
actually get there faster.

1085
00:47:35,350 --> 00:47:37,240
So we started looking at

1086
00:47:37,240 --> 00:47:39,220
how does transmission
rate change,

1087
00:47:39,220 --> 00:47:40,600
how does Wi-Fi
retrenchment

1088
00:47:40,600 --> 00:47:42,370
retransmission
change over time?

1089
00:47:42,370 --> 00:47:44,440
So there are a few
parameters that Wi-Fi

1090
00:47:44,440 --> 00:47:46,855
changes that we have
to choose from.

1091
00:47:46,855 --> 00:47:48,580
So there's a
digital modulation,

1092
00:47:48,580 --> 00:47:50,230
which are changes
in amplitude and

1093
00:47:50,230 --> 00:47:52,060
frequency to K
analog signals.

1094
00:47:52,060 --> 00:47:53,110
So the different kinds of

1095
00:47:53,110 --> 00:47:54,879
modulation we
have is BPSK,

1096
00:47:54,879 --> 00:47:59,005
QPSK, QAM16, 64 and 256.

1097
00:47:59,005 --> 00:48:01,120
The other option
is coding rate.

1098
00:48:01,120 --> 00:48:03,010
We're only a portion
of the best change

1099
00:48:03,010 --> 00:48:04,090
with every word slot.

1100
00:48:04,090 --> 00:48:07,255
There is hardcoding,
3/4, 5/6.

1101
00:48:07,255 --> 00:48:09,250
There's guard
interval and it's

1102
00:48:09,250 --> 00:48:12,070
intended to avoid signal
loss from multipath.

1103
00:48:12,070 --> 00:48:14,079
Essentially it's
400 nanoseconds

1104
00:48:14,079 --> 00:48:15,340
or 800 nanoseconds,

1105
00:48:15,340 --> 00:48:16,930
and that's the
space between

1106
00:48:16,930 --> 00:48:18,370
each sample and other end,

1107
00:48:18,370 --> 00:48:21,680
the Wi-Fi wireless
transmission.

1108
00:48:21,690 --> 00:48:23,770
Bandwidth, it's basically

1109
00:48:23,770 --> 00:48:24,940
the capacity of the link

1110
00:48:24,940 --> 00:48:26,035
to transmit over
the channel.

1111
00:48:26,035 --> 00:48:28,930
There is 20 mhz,
408-16-0480

1112
00:48:28,930 --> 00:48:31,315
plus 1800s of space
in between them.

1113
00:48:31,315 --> 00:48:33,085
And their spatial stream,

1114
00:48:33,085 --> 00:48:34,480
essentially
spatial stream as

1115
00:48:34,480 --> 00:48:35,680
the transmission
technique used in

1116
00:48:35,680 --> 00:48:37,150
MIMO wireless
communication

1117
00:48:37,150 --> 00:48:38,440
to transmit independent,

1118
00:48:38,440 --> 00:48:40,330
separately coded data
signals amagine,

1119
00:48:40,330 --> 00:48:41,950
essentially it's
where exactly it's

1120
00:48:41,950 --> 00:48:43,840
two different streams
at the same time.

1121
00:48:43,840 --> 00:48:46,045
There's one, two
spatial streams,

1122
00:48:46,045 --> 00:48:47,050
and as such, they're up

1123
00:48:47,050 --> 00:48:48,640
to three or four as well.

1124
00:48:48,640 --> 00:48:50,260
So what that corresponds

1125
00:48:50,260 --> 00:48:51,880
to is this big table.

1126
00:48:51,880 --> 00:48:54,190
I found it everywhere.

1127
00:48:54,190 --> 00:48:56,245
You can find it to 11 AC,

1128
00:48:56,245 --> 00:48:58,360
very high transmission
rate table.

1129
00:48:58,360 --> 00:48:59,950
And you can see basically

1130
00:48:59,950 --> 00:49:01,870
are five dimensions
of options.

1131
00:49:01,870 --> 00:49:03,160
We have the modulation.

1132
00:49:03,160 --> 00:49:06,400
So you can see over
here under the circle,

1133
00:49:06,400 --> 00:49:08,290
these are different
modulations.

1134
00:49:08,290 --> 00:49:09,790
You have coding grades.

1135
00:49:09,790 --> 00:49:11,275
These are also options.

1136
00:49:11,275 --> 00:49:13,060
You have the guard
interval for

1137
00:49:13,060 --> 00:49:15,040
100 and 800 nanoseconds.

1138
00:49:15,040 --> 00:49:16,510
You have the bandwidth,

1139
00:49:16,510 --> 00:49:17,935
any other spatial stream.

1140
00:49:17,935 --> 00:49:19,210
And that corresponds
to all of

1141
00:49:19,210 --> 00:49:21,550
these possible options
of the iterates to

1142
00:49:21,550 --> 00:49:23,260
choose from that
basically based on

1143
00:49:23,260 --> 00:49:24,220
the environment
and based on the

1144
00:49:24,220 --> 00:49:25,390
consumer's you're
sending through,

1145
00:49:25,390 --> 00:49:26,875
there's an optimal choice

1146
00:49:26,875 --> 00:49:28,810
among these choices that

1147
00:49:28,810 --> 00:49:30,610
corresponds to the
best performance

1148
00:49:30,610 --> 00:49:33,205
in terms of loss rate
aims throughputs.

1149
00:49:33,205 --> 00:49:36,760
So we end up with 212
options that we have

1150
00:49:36,760 --> 00:49:39,730
to select in pretty
much quarter of

1151
00:49:39,730 --> 00:49:41,380
a millisecond
because we're

1152
00:49:41,380 --> 00:49:42,700
transmitting a
lot of frames

1153
00:49:42,700 --> 00:49:43,990
back-to-back and
we have to decide

1154
00:49:43,990 --> 00:49:45,220
for each frame basis

1155
00:49:45,220 --> 00:49:49,975
how data-rich for that
train, pretty much.

1156
00:49:49,975 --> 00:49:52,780
So we started asking
these questions,

1157
00:49:52,780 --> 00:49:53,935
which is, how does

1158
00:49:53,935 --> 00:49:56,750
changing each parameter
affect loss rate?

1159
00:49:57,660 --> 00:50:01,330
And basically we started

1160
00:50:01,330 --> 00:50:02,485
just with that question

1161
00:50:02,485 --> 00:50:03,955
and we set up
an experiment,

1162
00:50:03,955 --> 00:50:06,685
set up Raspberry Pi's
is 802.11 ac dongles.

1163
00:50:06,685 --> 00:50:09,415
And we use the costume
mode V-max module,

1164
00:50:09,415 --> 00:50:12,085
clean slate kernel module

1165
00:50:12,085 --> 00:50:13,360
that we built that

1166
00:50:13,360 --> 00:50:14,710
has no beacon or
any transmission,

1167
00:50:14,710 --> 00:50:17,290
just the data frames.

1168
00:50:17,290 --> 00:50:18,970
And then we send
data frames

1169
00:50:18,970 --> 00:50:20,620
for each data rate
back-to-back.

1170
00:50:20,620 --> 00:50:22,105
So we basically
transmitted

1171
00:50:22,105 --> 00:50:23,830
all the possible
data rates

1172
00:50:23,830 --> 00:50:25,060
that you saw over here,

1173
00:50:25,060 --> 00:50:27,610
back-to-back, same
frame size in

1174
00:50:27,610 --> 00:50:28,900
the same environment
so we can see

1175
00:50:28,900 --> 00:50:30,850
how it performs over time.

1176
00:50:30,850 --> 00:50:32,410
And this is one of

1177
00:50:32,410 --> 00:50:34,090
the sample of
outcomes that we got.

1178
00:50:34,090 --> 00:50:36,640
We have a lot of data
extensively collected.

1179
00:50:36,640 --> 00:50:38,755
But you can see the
x-axis is data rate,

1180
00:50:38,755 --> 00:50:40,675
the y-axis is
the loss rate.

1181
00:50:40,675 --> 00:50:42,745
And as you can see,

1182
00:50:42,745 --> 00:50:44,470
dairy does not
correlate with

1183
00:50:44,470 --> 00:50:47,035
lawsuit as you go the
higher data rate,

1184
00:50:47,035 --> 00:50:48,130
it doesn't always
mean you're

1185
00:50:48,130 --> 00:50:50,050
going to have
higher loss rate.

1186
00:50:50,050 --> 00:50:52,570
As you can see,
around 100 Mbps

1187
00:50:52,570 --> 00:50:54,130
is higher data rate,

1188
00:50:54,130 --> 00:50:55,870
higher loss rate than 200

1189
00:50:55,870 --> 00:50:58,720
Mbps certain data
rate combination.

1190
00:50:58,720 --> 00:51:00,490
Well, we also
found is that

1191
00:51:00,490 --> 00:51:01,990
some high data rates have

1192
00:51:01,990 --> 00:51:03,940
lower loss rate than
other of low data rate.

1193
00:51:03,940 --> 00:51:06,969
And if you can see
that line highlighted,

1194
00:51:06,969 --> 00:51:08,560
we can actually see
that it's just a

1195
00:51:08,560 --> 00:51:09,925
very small subset of

1196
00:51:09,925 --> 00:51:12,010
all the choices are

1197
00:51:12,010 --> 00:51:13,990
usable in that
environment.

1198
00:51:13,990 --> 00:51:15,490
The rest of the data
rates are actually

1199
00:51:15,490 --> 00:51:17,410
not good for the
environment.

1200
00:51:17,410 --> 00:51:19,640
They're not
helping at all.

1201
00:51:20,460 --> 00:51:23,845
So we start asking
more questions.

1202
00:51:23,845 --> 00:51:24,820
If data rate does not

1203
00:51:24,820 --> 00:51:25,855
correlate the loss rate,

1204
00:51:25,855 --> 00:51:27,925
which parameter actually
impacts loss rate.

1205
00:51:27,925 --> 00:51:29,740
And we started doing
more analysis.

1206
00:51:29,740 --> 00:51:32,260
And what we have
found so far is that

1207
00:51:32,260 --> 00:51:33,805
the painless
and short guard

1208
00:51:33,805 --> 00:51:35,170
interval actually did not

1209
00:51:35,170 --> 00:51:36,025
impact loss rate to

1210
00:51:36,025 --> 00:51:38,695
any collective
environment.

1211
00:51:38,695 --> 00:51:41,350
Just FYI for
data collection,

1212
00:51:41,350 --> 00:51:42,430
we've done 10 locations

1213
00:51:42,430 --> 00:51:43,495
that have current date,

1214
00:51:43,495 --> 00:51:45,339
one transmitter
and four receivers

1215
00:51:45,339 --> 00:51:46,630
24 hours of experiments

1216
00:51:46,630 --> 00:51:47,860
to research labs five

1217
00:51:47,860 --> 00:51:49,825
homes and three
corporate officers.

1218
00:51:49,825 --> 00:51:50,980
And so we have these

1219
00:51:50,980 --> 00:51:52,060
two is the actual
apartments.

1220
00:51:52,060 --> 00:51:54,850
And we have roughly
about 100,000 packets

1221
00:51:54,850 --> 00:51:56,500
transmitted in each
of these environments

1222
00:51:56,500 --> 00:51:57,820
over the span of 24 hours.

1223
00:51:57,820 --> 00:52:01,010
A lot of traces that
we've collected.

1224
00:52:01,110 --> 00:52:03,280
So what we ended up doing

1225
00:52:03,280 --> 00:52:04,960
after doing some
analysis further

1226
00:52:04,960 --> 00:52:05,890
is that we found

1227
00:52:05,890 --> 00:52:08,275
the cross dimensional
candidate set.

1228
00:52:08,275 --> 00:52:10,120
So basically we
were able to rank

1229
00:52:10,120 --> 00:52:12,550
loss rate impact
from highs to lows.

1230
00:52:12,550 --> 00:52:13,779
And we found a modulation

1231
00:52:13,779 --> 00:52:15,550
has the highest
impact on loss rate

1232
00:52:15,550 --> 00:52:17,275
and then spatial
stream and then

1233
00:52:17,275 --> 00:52:19,390
coding on guard
interval and bandwidth.

1234
00:52:19,390 --> 00:52:20,890
So what that means is

1235
00:52:20,890 --> 00:52:22,660
that if you change
the guard interval to

1236
00:52:22,660 --> 00:52:24,160
be shorter and change
your coding to

1237
00:52:24,160 --> 00:52:25,945
be 5/6 instead of 1/2,

1238
00:52:25,945 --> 00:52:28,015
you're increasing
the data rate

1239
00:52:28,015 --> 00:52:30,820
without actually
increasing the loss rate.

1240
00:52:30,820 --> 00:52:32,500
You're getting
essentially free

1241
00:52:32,500 --> 00:52:34,270
data rates speed.

1242
00:52:34,270 --> 00:52:36,415
Changing the modulation
is very risky.

1243
00:52:36,415 --> 00:52:37,660
So essentially we ended up

1244
00:52:37,660 --> 00:52:38,950
from 200 something to

1245
00:52:38,950 --> 00:52:40,825
70 something data
rates we ended up with

1246
00:52:40,825 --> 00:52:42,190
20 only option that are

1247
00:52:42,190 --> 00:52:44,600
just the ladder
of up and down.

1248
00:52:44,610 --> 00:52:48,220
And that enabled us,
if we go further,

1249
00:52:48,220 --> 00:52:50,200
is that we basically
simple up and down

1250
00:52:50,200 --> 00:52:52,525
exploration process
quicker conversion

1251
00:52:52,525 --> 00:52:54,625
in optimal data
rate candidates.

1252
00:52:54,625 --> 00:52:56,050
And also we now

1253
00:52:56,050 --> 00:52:58,030
prevent getting stuck
in local maximum.

1254
00:52:58,030 --> 00:52:59,800
So if you can see if
you're testing up and

1255
00:52:59,800 --> 00:53:01,735
down and just all
the data results.

1256
00:53:01,735 --> 00:53:03,160
If you go up and
down and go to

1257
00:53:03,160 --> 00:53:05,005
the 100 Mbps options,

1258
00:53:05,005 --> 00:53:05,860
you're searching as

1259
00:53:05,860 --> 00:53:07,630
the data loss rate
is increasing,

1260
00:53:07,630 --> 00:53:09,040
let me now go higher
any data rate.

1261
00:53:09,040 --> 00:53:10,045
It should be worse.

1262
00:53:10,045 --> 00:53:11,605
Meanwhile, do not
really worse.

1263
00:53:11,605 --> 00:53:15,580
You just dropped
together. So based

1264
00:53:15,580 --> 00:53:17,230
on these results and
things we have tried,

1265
00:53:17,230 --> 00:53:18,850
we have tried different
frame sizes from

1266
00:53:18,850 --> 00:53:21,280
200 bytes to 6,000 bytes.

1267
00:53:21,280 --> 00:53:23,500
And usually a frame
size is 1,400 bytes.

1268
00:53:23,500 --> 00:53:25,900
That's usually data frame
by 802.11 standard,

1269
00:53:25,900 --> 00:53:27,910
we have tried different
distances up to

1270
00:53:27,910 --> 00:53:29,230
their maximum
limit line of

1271
00:53:29,230 --> 00:53:31,150
sight and not
line of sight.

1272
00:53:31,150 --> 00:53:33,520
We've also tried
multiple frames

1273
00:53:33,520 --> 00:53:34,555
back-to-back and

1274
00:53:34,555 --> 00:53:36,100
single frames
per data rate,

1275
00:53:36,100 --> 00:53:38,380
got similar
results, only 2%,

1276
00:53:38,380 --> 00:53:40,540
pretty much standard
deviation and loss rate.

1277
00:53:40,540 --> 00:53:41,545
We also have tried

1278
00:53:41,545 --> 00:53:43,090
different network
interface cards.

1279
00:53:43,090 --> 00:53:44,695
We experimented
with a 802.11

1280
00:53:44,695 --> 00:53:46,975
dongles 802.1 ac.

1281
00:53:46,975 --> 00:53:49,525
Very much the same
results again.

1282
00:53:49,525 --> 00:53:53,080
So right now part of
our ongoing work,

1283
00:53:53,080 --> 00:53:55,210
it's finalizing aggregate
feedback protocol

1284
00:53:55,210 --> 00:53:56,530
to enable the
consumer with

1285
00:53:56,530 --> 00:53:58,225
highest needs that
can be saved without

1286
00:53:58,225 --> 00:54:00,415
impacting other
consumers go first,

1287
00:54:00,415 --> 00:54:02,530
implemented new
clean slate system

1288
00:54:02,530 --> 00:54:03,970
on 802.11 ac.

1289
00:54:03,970 --> 00:54:05,590
We have a new
kernel module from

1290
00:54:05,590 --> 00:54:07,210
scratch that lemonades,

1291
00:54:07,210 --> 00:54:08,995
TCPIP stack,
all that stuff

1292
00:54:08,995 --> 00:54:10,960
and just uses on
content-base.

1293
00:54:10,960 --> 00:54:12,130
We have either integration

1294
00:54:12,130 --> 00:54:13,360
hugs for NFD as well,

1295
00:54:13,360 --> 00:54:15,355
that we're integrating
right now.

1296
00:54:15,355 --> 00:54:17,110
And we're originating
more results in

1297
00:54:17,110 --> 00:54:17,920
different environments and

1298
00:54:17,920 --> 00:54:20,200
cooperating system
with V-MAC.

1299
00:54:20,200 --> 00:54:22,510
So in conclusion,
we just covered

1300
00:54:22,510 --> 00:54:24,040
the multicast rate
control problem

1301
00:54:24,040 --> 00:54:25,210
in data centric paradigm.

1302
00:54:25,210 --> 00:54:27,250
We introduce a new
design that relies on

1303
00:54:27,250 --> 00:54:27,730
content or

1304
00:54:27,730 --> 00:54:29,680
just free control
leveraging stream.

1305
00:54:29,680 --> 00:54:31,810
And we showed our results

1306
00:54:31,810 --> 00:54:33,490
for in-depth analysis for

1307
00:54:33,490 --> 00:54:35,020
rotatory Panthers
impact on

1308
00:54:35,020 --> 00:54:39,250
loss rate. Thank you.

1309
00:54:39,250 --> 00:54:42,320
>> Thank you very much.

1310
00:54:42,540 --> 00:54:46,420
Any questions from
the audience?

1311
00:54:46,420 --> 00:54:49,030
Otherwise I

1312
00:54:49,030 --> 00:54:50,350
was going to ask
a quick question.

1313
00:54:50,350 --> 00:54:52,300
>> I just asked
you in person.

1314
00:54:52,300 --> 00:54:55,210
I don't feel there's
enough information

1315
00:54:55,210 --> 00:54:57,385
about your test set up.

1316
00:54:57,385 --> 00:54:59,785
You mentioned about
the frame size

1317
00:54:59,785 --> 00:55:01,955
doesn't make
much difference.

1318
00:55:01,955 --> 00:55:05,445
Is that it just
a one stream,

1319
00:55:05,445 --> 00:55:07,905
or it's actually multiple
competing streams,

1320
00:55:07,905 --> 00:55:09,360
because that's
going to have

1321
00:55:09,360 --> 00:55:12,855
interference and
other streams today.

1322
00:55:12,855 --> 00:55:15,510
>> So what we
actually did,

1323
00:55:15,510 --> 00:55:18,080
the transmitter
was one stream

1324
00:55:18,080 --> 00:55:19,600
transmitting frames
back-to-back,

1325
00:55:19,600 --> 00:55:20,980
but it was
environments that

1326
00:55:20,980 --> 00:55:22,630
had already ongoing
transmission.

1327
00:55:22,630 --> 00:55:23,875
So that's why we tested

1328
00:55:23,875 --> 00:55:25,540
in different environments.

1329
00:55:25,540 --> 00:55:28,270
We tested in
research labs,

1330
00:55:28,270 --> 00:55:30,790
homes and corporate
officers that are active.

1331
00:55:30,790 --> 00:55:32,830
So that way there
was interference,

1332
00:55:32,830 --> 00:55:35,125
there was a
multi-pass loss

1333
00:55:35,125 --> 00:55:36,940
and all of these cases,

1334
00:55:36,940 --> 00:55:38,320
but we did not
artificially

1335
00:55:38,320 --> 00:55:40,339
create interference.

1336
00:55:41,860 --> 00:55:44,510
>> And in different
frame sizes,

1337
00:55:44,510 --> 00:55:46,610
we tried different
frame sizes,

1338
00:55:46,610 --> 00:55:49,220
because different
frame sizes

1339
00:55:49,220 --> 00:55:51,200
have different
medium time.

1340
00:55:51,200 --> 00:55:52,340
So we wanted to see if it

1341
00:55:52,340 --> 00:55:53,630
will cause different loss.

1342
00:55:53,630 --> 00:55:54,995
If it takes longer, but

1343
00:55:54,995 --> 00:55:58,410
it didn't affect the
loss rate that much.

1344
00:55:59,350 --> 00:56:01,910
>> Mohammed, you
expect the loss

1345
00:56:01,910 --> 00:56:04,850
to increase with
the rate. Right?

1346
00:56:04,850 --> 00:56:05,930
>> That's correct.

1347
00:56:05,930 --> 00:56:11,885
>> In short, you're
saying the local maxima.

1348
00:56:11,885 --> 00:56:15,800
Did you see that from
experimentation?

1349
00:56:15,800 --> 00:56:17,210
What's your intuition if

1350
00:56:17,210 --> 00:56:19,410
it's not monotonically
increasing?

1351
00:56:19,410 --> 00:56:21,700
>> The reason behind

1352
00:56:21,700 --> 00:56:23,920
it is that when we
increase the data rate,

1353
00:56:23,920 --> 00:56:25,555
we're not increasing
one ladder,

1354
00:56:25,555 --> 00:56:28,030
is that it's actually
five dimensions.

1355
00:56:28,030 --> 00:56:31,010
And the intuition behind

1356
00:56:31,010 --> 00:56:32,120
is that I can't believe

1357
00:56:32,120 --> 00:56:33,470
that all of these
are linearly

1358
00:56:33,470 --> 00:56:35,540
increasing with data rate,

1359
00:56:35,540 --> 00:56:36,740
because each of
these impact

1360
00:56:36,740 --> 00:56:38,870
lost data rate
differently.

1361
00:56:38,870 --> 00:56:41,000
But we didn't know

1362
00:56:41,000 --> 00:56:42,260
if data rate correlates

1363
00:56:42,260 --> 00:56:43,190
linearly as loss rate.

1364
00:56:43,190 --> 00:56:44,570
So we started
actually testing each

1365
00:56:44,570 --> 00:56:47,120
of these parameter
individually.

1366
00:56:47,120 --> 00:56:49,100
So we found out which ones

1367
00:56:49,100 --> 00:56:50,300
actually impact loss rate,

1368
00:56:50,300 --> 00:56:52,460
and which ones don't
impact the loss rate.

1369
00:56:52,460 --> 00:56:54,830
And just to also
address this,

1370
00:56:54,830 --> 00:56:56,990
we only tested
this statically.

1371
00:56:56,990 --> 00:56:59,705
Then that affects the
channel coherence time.

1372
00:56:59,705 --> 00:57:01,370
When we test this
in mobility,

1373
00:57:01,370 --> 00:57:02,900
I believe that the results
will be different,

1374
00:57:02,900 --> 00:57:03,950
but right now
we're only tested

1375
00:57:03,950 --> 00:57:05,945
for static environment.

1376
00:57:05,945 --> 00:57:11,120
>> All right.
Thanks. We can

1377
00:57:11,120 --> 00:57:12,260
continue in Slack if there

1378
00:57:12,260 --> 00:57:13,490
are more questions.

1379
00:57:13,490 --> 00:57:14,495
>> Thank you.

1380
00:57:14,495 --> 00:57:16,205
>> Thank you very much.

1381
00:57:16,205 --> 00:57:21,770
And we are on time to
start the Panel 2,

1382
00:57:21,770 --> 00:57:24,110
on named data metaverse,

1383
00:57:24,110 --> 00:57:26,810
which will be chaired
by the Dirk Kutscher,

1384
00:57:26,810 --> 00:57:27,980
who's a professor at

1385
00:57:27,980 --> 00:57:28,940
Hong Kong University of

1386
00:57:28,940 --> 00:57:30,455
Science and Technology,

1387
00:57:30,455 --> 00:57:32,120
he is remote.

1388
00:57:32,120 --> 00:57:34,055
And four panelists.

1389
00:57:34,055 --> 00:57:37,355
Jeff Burke from UCLA
Remark, he's local.

1390
00:57:37,355 --> 00:57:40,955
And the three remote
panelists that

1391
00:57:40,955 --> 00:57:45,170
Dirk will introduce.
Dirk, are you ready?

1392
00:57:45,170 --> 00:57:46,970
>> Yes. Thank
you very much

1393
00:57:46,970 --> 00:57:48,395
Luffy. Can you
see my slides?

1394
00:57:48,395 --> 00:57:50,460
>> Yes, we do. Go ahead.

1395
00:57:50,460 --> 00:57:55,060
>> Right. Thank
you. Welcome to

1396
00:57:55,060 --> 00:57:59,100
the panel session
on data metaverse.

1397
00:57:59,100 --> 00:58:01,010
Unfortunately I
cannot be with

1398
00:58:01,010 --> 00:58:05,120
you in Rockwood today.

1399
00:58:05,120 --> 00:58:10,370
But anyway, great to be
discussing with you.

1400
00:58:10,370 --> 00:58:13,220
Thanks also to NIST

1401
00:58:13,220 --> 00:58:14,600
for organizing this event,

1402
00:58:14,600 --> 00:58:16,895
also for the very
good preparation and

1403
00:58:16,895 --> 00:58:20,670
hybrid infrastructure
works really well.

1404
00:58:21,130 --> 00:58:26,600
So named data metaverse.

1405
00:58:26,600 --> 00:58:31,400
So I'm actually currently

1406
00:58:31,400 --> 00:58:34,805
at this location here.

1407
00:58:34,805 --> 00:58:38,840
In this metaverse
and knock-up,

1408
00:58:38,840 --> 00:58:41,060
I have to say,
was my office,

1409
00:58:41,060 --> 00:58:42,650
it's a bit darker
at the moment.

1410
00:58:42,650 --> 00:58:44,130
It's midnight.

1411
00:58:46,990 --> 00:58:50,465
So metaverse is an
interesting topic,

1412
00:58:50,465 --> 00:58:52,430
and you can look

1413
00:58:52,430 --> 00:58:53,600
at it from different
perspectives.

1414
00:58:53,600 --> 00:58:55,550
And I think that's what

1415
00:58:55,550 --> 00:58:58,190
we're going to do today.

1416
00:58:58,190 --> 00:59:02,660
So there's was a
really nice blog

1417
00:59:02,660 --> 00:59:04,550
posting by Benedict Evans

1418
00:59:04,550 --> 00:59:07,085
on ways to think
about metaverse.

1419
00:59:07,085 --> 00:59:10,190
And so what he laid out

1420
00:59:10,190 --> 00:59:13,160
there was there're
two perspectives.

1421
00:59:13,160 --> 00:59:15,725
So one is the rather
broad perspective

1422
00:59:15,725 --> 00:59:17,090
on conceiving

1423
00:59:17,090 --> 00:59:20,720
metaverse as
data technology

1424
00:59:20,720 --> 00:59:22,235
that changes everything,

1425
00:59:22,235 --> 00:59:23,480
the way we work, the way

1426
00:59:23,480 --> 00:59:27,080
we consume media
and so on.

1427
00:59:27,080 --> 00:59:28,160
So may be similar to

1428
00:59:28,160 --> 00:59:29,480
the information
superhighway.

1429
00:59:29,480 --> 00:59:31,520
So vague idea,
with lots of

1430
00:59:31,520 --> 00:59:34,700
potential that will
change everything.

1431
00:59:34,700 --> 00:59:37,400
Of course, it's
quite inspiring.

1432
00:59:37,400 --> 00:59:39,080
The other way to
think about it

1433
00:59:39,080 --> 00:59:40,880
is maybe a bit narrower.

1434
00:59:40,880 --> 00:59:44,240
That's maybe what the
networking people

1435
00:59:44,240 --> 00:59:45,665
in the room would
normally use.

1436
00:59:45,665 --> 00:59:47,420
And we'd say, you

1437
00:59:47,420 --> 00:59:48,710
know there's a bunch
of technologies,

1438
00:59:48,710 --> 00:59:50,915
there is some
progress in hardware.

1439
00:59:50,915 --> 00:59:53,285
And if you combine this,

1440
00:59:53,285 --> 00:59:56,675
we have the next
evolutionary step

1441
00:59:56,675 --> 01:00:01,835
in the way we work with
the web, so to speak.

1442
01:00:01,835 --> 01:00:04,550
And metaverse would
be the evolution

1443
01:00:04,550 --> 01:00:08,760
of what we currently
consider as the web.

1444
01:00:08,760 --> 01:00:10,675
And there's probably

1445
01:00:10,675 --> 01:00:12,460
a healthy middle
ground here,

1446
01:00:12,460 --> 01:00:18,080
but you probably have
thought about this,

1447
01:00:18,080 --> 01:00:21,530
because it's a
very hyped term,

1448
01:00:21,530 --> 01:00:23,060
very broad, and
people understand

1449
01:00:23,060 --> 01:00:26,615
different things when
they use the term.

1450
01:00:26,615 --> 01:00:29,719
And in fact, when you
look at applications,

1451
01:00:29,719 --> 01:00:32,060
you could probably make

1452
01:00:32,060 --> 01:00:33,170
a nice taxonomy of

1453
01:00:33,170 --> 01:00:34,880
different types
of applications.

1454
01:00:34,880 --> 01:00:39,570
So like virtual
meeting systems,

1455
01:00:40,270 --> 01:00:43,590
this 3D avatars
or something.

1456
01:00:43,590 --> 01:00:47,965
Pokeman Go virtual
reality mobile games.

1457
01:00:47,965 --> 01:00:51,385
Maybe they say a
bit more ambitious.

1458
01:00:51,385 --> 01:00:55,920
Hyper-Reality vision
by Keiichi Matsuda

1459
01:00:55,920 --> 01:00:58,474
is a bit more futuristic.

1460
01:00:58,474 --> 01:01:01,850
But also all the
gaming aspect in

1461
01:01:01,850 --> 01:01:06,820
metaverse are
probably also

1462
01:01:06,820 --> 01:01:08,320
of relevance and also

1463
01:01:08,320 --> 01:01:10,225
interesting to consider
in this context.

1464
01:01:10,225 --> 01:01:11,920
And I didn't mention
other things

1465
01:01:11,920 --> 01:01:13,900
like digital
twins and so on

1466
01:01:13,900 --> 01:01:19,320
that also often
included in this.

1467
01:01:21,000 --> 01:01:23,615
In networking perspective,

1468
01:01:23,615 --> 01:01:25,580
so that's where most of

1469
01:01:25,580 --> 01:01:28,025
the people in the
room are coming from.

1470
01:01:28,025 --> 01:01:30,935
So there are some
interesting aspects.

1471
01:01:30,935 --> 01:01:35,000
So we are blending,
for example,

1472
01:01:35,000 --> 01:01:37,400
interactive real-time
with video-on-demand,

1473
01:01:37,400 --> 01:01:41,360
and was rather strict
latency requirements.

1474
01:01:41,360 --> 01:01:44,480
We're doing this
not only for 2D

1475
01:01:44,480 --> 01:01:47,670
but also for 3D content.

1476
01:01:47,680 --> 01:01:49,970
There could be

1477
01:01:49,970 --> 01:01:51,620
other ways how we
use the network,

1478
01:01:51,620 --> 01:01:53,105
so that could
be potentially

1479
01:01:53,105 --> 01:01:55,010
significantly more
upstream data

1480
01:01:55,010 --> 01:01:56,795
than downstream
data volume.

1481
01:01:56,795 --> 01:02:02,705
So if she consider new
video technologies.

1482
01:02:02,705 --> 01:02:06,770
And we have what
we always try to

1483
01:02:06,770 --> 01:02:10,940
achieve with IP
multicast in the past.

1484
01:02:10,940 --> 01:02:12,110
So we've
potentially larger

1485
01:02:12,110 --> 01:02:13,850
user groups with also

1486
01:02:13,850 --> 01:02:15,320
really diverse endpoint

1487
01:02:15,320 --> 01:02:18,230
and creativity
characteristics.

1488
01:02:18,230 --> 01:02:22,340
So this raises the
bar a little bit for

1489
01:02:22,340 --> 01:02:24,410
the technology stack that

1490
01:02:24,410 --> 01:02:27,230
we used to work with.

1491
01:02:27,230 --> 01:02:29,870
And that alone provides

1492
01:02:29,870 --> 01:02:31,760
interesting challenges

1493
01:02:31,760 --> 01:02:34,800
and also good potential
for innovation.

1494
01:02:36,550 --> 01:02:38,990
And then when
you're coming from

1495
01:02:38,990 --> 01:02:42,500
maybe ICN or
NDN background,

1496
01:02:42,500 --> 01:02:45,515
you could say, okay,

1497
01:02:45,515 --> 01:02:47,840
there's actually
really good potential

1498
01:02:47,840 --> 01:02:49,190
for our technology.

1499
01:02:49,190 --> 01:02:52,925
So we could now
for example employ

1500
01:02:52,925 --> 01:02:55,370
multi-pass forwarding
strategies

1501
01:02:55,370 --> 01:02:58,745
or implicit
multi-destination delivery,

1502
01:02:58,745 --> 01:03:02,000
maybe some better
replication strategies.

1503
01:03:02,000 --> 01:03:06,270
Caching, we could
optimize caching.

1504
01:03:07,090 --> 01:03:09,830
>> Some people
in our community

1505
01:03:09,830 --> 01:03:12,050
have been thinking
about how

1506
01:03:12,050 --> 01:03:17,090
to integrate computing
in NDN systems,

1507
01:03:17,090 --> 01:03:20,030
maybe leverage the vector

1508
01:03:20,030 --> 01:03:22,910
name data access approach

1509
01:03:22,910 --> 01:03:24,230
also for maybe

1510
01:03:24,230 --> 01:03:28,050
addressing functions
or services.

1511
01:03:28,870 --> 01:03:31,490
So I think many people

1512
01:03:31,490 --> 01:03:32,720
would agree that
there is also

1513
01:03:32,720 --> 01:03:35,255
really interesting
optimization potential

1514
01:03:35,255 --> 01:03:37,340
by the fact that you have

1515
01:03:37,340 --> 01:03:38,449
a bit more visibility,

1516
01:03:38,449 --> 01:03:42,125
bit more leverage on

1517
01:03:42,125 --> 01:03:44,660
how you use the
network resources.

1518
01:03:44,660 --> 01:03:47,060
And you can treat
these resources in

1519
01:03:47,060 --> 01:03:48,350
a bit more general way

1520
01:03:48,350 --> 01:03:50,360
include caching
and computing.

1521
01:03:50,360 --> 01:03:57,320
And so there's lots
of interesting things

1522
01:03:57,320 --> 01:03:59,885
that will be intuitively

1523
01:03:59,885 --> 01:04:02,930
could identify and could

1524
01:04:02,930 --> 01:04:04,850
probably also work on.

1525
01:04:04,850 --> 01:04:07,220
But then there are also

1526
01:04:07,220 --> 01:04:09,665
additional
potential elements.

1527
01:04:09,665 --> 01:04:12,680
So for example for

1528
01:04:12,680 --> 01:04:16,850
metaverse applications
often have

1529
01:04:16,850 --> 01:04:19,055
to also do it with
creating things.

1530
01:04:19,055 --> 01:04:21,620
Now if the
question is, who

1531
01:04:21,620 --> 01:04:23,385
owns these things?

1532
01:04:23,385 --> 01:04:27,010
How do you maybe
do transcoding or

1533
01:04:27,010 --> 01:04:30,865
transformation or
insertion in a secure way.

1534
01:04:30,865 --> 01:04:34,385
Maybe verifiability

1535
01:04:34,385 --> 01:04:37,530
and corresponding
trust infrastructures.

1536
01:04:37,570 --> 01:04:40,865
So when you talk
about assets

1537
01:04:40,865 --> 01:04:42,320
that people own,

1538
01:04:42,320 --> 01:04:43,640
would like to transfer or

1539
01:04:43,640 --> 01:04:45,740
things that
people could use.

1540
01:04:45,740 --> 01:04:47,720
So the question is, how do

1541
01:04:47,720 --> 01:04:50,840
you model this
transaction,

1542
01:04:50,840 --> 01:04:55,010
how do you financialize
these things?

1543
01:04:55,010 --> 01:04:58,490
And another
question is also,

1544
01:04:58,490 --> 01:05:00,470
if you would use data,

1545
01:05:00,470 --> 01:05:04,400
or produce content, and
you get compensated.

1546
01:05:04,400 --> 01:05:05,735
If you share,

1547
01:05:05,735 --> 01:05:10,310
produce efficient
infrastructure,

1548
01:05:10,310 --> 01:05:13,385
can you get
compensated for that?

1549
01:05:13,385 --> 01:05:23,585
So this decentralized
distributed

1550
01:05:23,585 --> 01:05:26,880
communication and
computing story.

1551
01:05:26,880 --> 01:05:32,290
And maybe depending on
where you come from,

1552
01:05:32,290 --> 01:05:33,805
you may have different
perspectives

1553
01:05:33,805 --> 01:05:35,470
on the technology stack.

1554
01:05:35,470 --> 01:05:39,800
So in terms of what
features should be in

1555
01:05:39,800 --> 01:05:42,260
this technology stack and

1556
01:05:42,260 --> 01:05:44,690
how would you actually
fluctuate it?

1557
01:05:44,690 --> 01:05:48,290
How would you
separate it into

1558
01:05:48,290 --> 01:05:53,540
different maybe stacks
or technology areas?

1559
01:05:53,540 --> 01:05:56,150
So what we are all
familiar with,

1560
01:05:56,150 --> 01:05:58,190
it's the current
overlay approach where

1561
01:05:58,190 --> 01:05:59,210
we can assume a

1562
01:05:59,210 --> 01:06:01,025
relatively simple
Internet forwarding.

1563
01:06:01,025 --> 01:06:04,550
So in order to
achieve many of

1564
01:06:04,550 --> 01:06:07,610
the features that we need

1565
01:06:07,610 --> 01:06:10,430
for continuous
evolution but

1566
01:06:10,430 --> 01:06:12,545
also for live
media streaming.

1567
01:06:12,545 --> 01:06:17,130
We need increasingly
extensive CDN networks.

1568
01:06:17,230 --> 01:06:20,120
We are seeing now

1569
01:06:20,120 --> 01:06:22,925
data related
concepts in the,

1570
01:06:22,925 --> 01:06:24,680
not overlap in the
overlay [LAUGHTER].

1571
01:06:24,680 --> 01:06:29,510
So things like media
over QUIC for example,

1572
01:06:29,510 --> 01:06:30,980
it's quite
interesting to see

1573
01:06:30,980 --> 01:06:34,050
what's going on there.

1574
01:06:34,270 --> 01:06:36,710
But we also know like from

1575
01:06:36,710 --> 01:06:38,360
an ICN and the
N perspective,

1576
01:06:38,360 --> 01:06:41,510
that these things cannot

1577
01:06:41,510 --> 01:06:45,035
say provide the
same level of,

1578
01:06:45,035 --> 01:06:46,760
say, network optimization

1579
01:06:46,760 --> 01:06:48,035
of foreboding optimization

1580
01:06:48,035 --> 01:06:52,230
than compared to a
packet level ICN system.

1581
01:06:52,300 --> 01:06:54,995
So in NDN we
would say, Okay,

1582
01:06:54,995 --> 01:06:56,300
we assume some underlay,

1583
01:06:56,300 --> 01:06:58,400
maybe at least underlay,
a two underlay.

1584
01:06:58,400 --> 01:07:01,880
But in general, we have

1585
01:07:01,880 --> 01:07:05,495
a more powerful
forwarding layer

1586
01:07:05,495 --> 01:07:08,300
that can do more
useful things,

1587
01:07:08,300 --> 01:07:11,075
date for forwarding
strategies,

1588
01:07:11,075 --> 01:07:13,280
hashing, and so on.

1589
01:07:13,280 --> 01:07:16,730
And so we build network on

1590
01:07:16,730 --> 01:07:19,310
the approach

1591
01:07:19,310 --> 01:07:22,100
of accessing named
data securely,

1592
01:07:22,100 --> 01:07:24,215
which is the core of

1593
01:07:24,215 --> 01:07:25,940
basically of all
these benefits

1594
01:07:25,940 --> 01:07:28,290
that we can achieve.

1595
01:07:32,640 --> 01:07:34,910
We had bit of

1596
01:07:34,910 --> 01:07:35,600
interesting discussion

1597
01:07:35,600 --> 01:07:37,670
yesterday in the
other panel.

1598
01:07:37,670 --> 01:07:40,400
And so I think one of

1599
01:07:40,400 --> 01:07:42,560
the interesting aspects is

1600
01:07:42,560 --> 01:07:44,120
really the fact that

1601
01:07:44,120 --> 01:07:47,870
you can work differently
with the network and

1602
01:07:47,870 --> 01:07:49,520
get better performance and

1603
01:07:49,520 --> 01:07:52,370
better scalability
for example,

1604
01:07:52,370 --> 01:07:54,335
mighty destination
distribution

1605
01:07:54,335 --> 01:07:55,610
and all of it.

1606
01:07:55,610 --> 01:07:58,680
We also sometimes discuss

1607
01:07:59,170 --> 01:08:01,790
application support,

1608
01:08:01,790 --> 01:08:03,770
like the fact that maybe

1609
01:08:03,770 --> 01:08:05,240
this named data approach

1610
01:08:05,240 --> 01:08:06,230
will also be nicer for

1611
01:08:06,230 --> 01:08:07,850
applications to use or

1612
01:08:07,850 --> 01:08:10,280
you can also
build nicer APIs

1613
01:08:10,280 --> 01:08:16,970
and application
oriented services.

1614
01:08:18,310 --> 01:08:22,865
And then there's the
other perspective.

1615
01:08:22,865 --> 01:08:25,310
So when you maybe
come from the time of

1616
01:08:25,310 --> 01:08:29,590
blockchain content
fabric perspective,

1617
01:08:29,590 --> 01:08:32,010
you would probably say,

1618
01:08:32,010 --> 01:08:35,840
Yeah, we assume some
Internet productivity.

1619
01:08:35,840 --> 01:08:37,595
And on top of that,

1620
01:08:37,595 --> 01:08:40,250
we design our

1621
01:08:40,250 --> 01:08:42,590
decentralized
infrastructure that

1622
01:08:42,590 --> 01:08:46,820
provides content
discovery,

1623
01:08:46,820 --> 01:08:48,515
access to content.

1624
01:08:48,515 --> 01:08:49,910
Interesting in some form

1625
01:08:49,910 --> 01:08:52,445
in the whole distribution,

1626
01:08:52,445 --> 01:08:53,855
but also things like

1627
01:08:53,855 --> 01:08:58,970
transactions and
asset management.

1628
01:08:58,970 --> 01:09:03,980
And so this is often
considered to be like

1629
01:09:03,980 --> 01:09:06,380
one system and then you

1630
01:09:06,380 --> 01:09:07,610
would be able to build

1631
01:09:07,610 --> 01:09:09,500
applications on
top of that.

1632
01:09:09,500 --> 01:09:13,160
I know this is a very
rough comparison

1633
01:09:13,160 --> 01:09:15,665
here and you can,

1634
01:09:15,665 --> 01:09:18,530
but it's also not
quite correct

1635
01:09:18,530 --> 01:09:21,965
because if you
dig a little bit,

1636
01:09:21,965 --> 01:09:24,680
you can also bisect

1637
01:09:24,680 --> 01:09:25,790
these texts in
different ways,

1638
01:09:25,790 --> 01:09:27,350
but I think
just to give us

1639
01:09:27,350 --> 01:09:29,000
some intuition it's all

1640
01:09:29,000 --> 01:09:33,570
about different ways
how to proceed.

1641
01:09:34,270 --> 01:09:37,550
So for the panel today,

1642
01:09:37,550 --> 01:09:39,800
so we thought it
would be nice to

1643
01:09:39,800 --> 01:09:42,590
discuss a little bit

1644
01:09:42,590 --> 01:09:44,930
what the different
types of

1645
01:09:44,930 --> 01:09:47,870
metaverse systems
actually need [NOISE].

1646
01:09:47,870 --> 01:09:49,010
So you can do

1647
01:09:49,010 --> 01:09:50,420
this in two ways
where you can look

1648
01:09:50,420 --> 01:09:53,600
at the existing
systems today.

1649
01:09:53,600 --> 01:09:55,460
But maybe we can also be a

1650
01:09:55,460 --> 01:09:56,810
bit more creative
and think.

1651
01:09:56,810 --> 01:09:59,645
So what, how could
distance look like?

1652
01:09:59,645 --> 01:10:02,120
So assuming maybe
knowing little

1653
01:10:02,120 --> 01:10:05,640
bit the technology that
we have at our hands.

1654
01:10:06,190 --> 01:10:10,085
Named data seems
to be useful.

1655
01:10:10,085 --> 01:10:11,960
So we see this in

1656
01:10:11,960 --> 01:10:17,135
even a legacy overlayer
systems today,

1657
01:10:17,135 --> 01:10:20,910
but question is
on which layer?

1658
01:10:22,480 --> 01:10:24,755
You don't have to

1659
01:10:24,755 --> 01:10:26,930
restrict yourself
to one layer.

1660
01:10:26,930 --> 01:10:28,970
But what are good ways

1661
01:10:28,970 --> 01:10:32,330
to structure the
functionalities?

1662
01:10:32,330 --> 01:10:34,760
Maybe there is
some relationship

1663
01:10:34,760 --> 01:10:38,000
between named data,

1664
01:10:38,000 --> 01:10:39,800
your data oriented
approaches in

1665
01:10:39,800 --> 01:10:42,980
the application, layer
application space.

1666
01:10:42,980 --> 01:10:45,920
And the named data
approach that we

1667
01:10:45,920 --> 01:10:50,970
typically use in
the network as NDN.

1668
01:10:51,070 --> 01:10:53,810
And the third maybe
high-level topic

1669
01:10:53,810 --> 01:10:55,460
is a little bit

1670
01:10:55,460 --> 01:10:56,810
maybe looking
into the future.

1671
01:10:56,810 --> 01:11:01,325
So I think the discussion
today will also

1672
01:11:01,325 --> 01:11:05,240
point to some
interesting needs

1673
01:11:05,240 --> 01:11:06,770
or interesting features.

1674
01:11:06,770 --> 01:11:08,900
And one question could be,

1675
01:11:08,900 --> 01:11:10,925
how can we support
applications better?

1676
01:11:10,925 --> 01:11:14,330
So is there something
the NDN could do,

1677
01:11:14,330 --> 01:11:16,550
or we should develop

1678
01:11:16,550 --> 01:11:18,860
maybe something that
NDN is missing,

1679
01:11:18,860 --> 01:11:21,635
or how we should
evolve it?

1680
01:11:21,635 --> 01:11:22,490
In general,

1681
01:11:22,490 --> 01:11:26,220
what are the research
opportunities?

1682
01:11:27,610 --> 01:11:30,710
So maybe more
specifically,

1683
01:11:30,710 --> 01:11:34,880
what we could get
out of this from

1684
01:11:34,880 --> 01:11:39,290
an NDN perspective is,

1685
01:11:39,290 --> 01:11:42,230
are there any
architectural

1686
01:11:42,230 --> 01:11:43,670
or security-related

1687
01:11:43,670 --> 01:11:45,390
or performance-related
issues

1688
01:11:45,390 --> 01:11:46,840
in Metaverse systems today

1689
01:11:46,840 --> 01:11:49,570
that need to be addressed?

1690
01:11:49,570 --> 01:11:51,310
Is there any communication

1691
01:11:51,310 --> 01:11:52,390
patterns that we can

1692
01:11:52,390 --> 01:11:55,695
identify that NDN
could support?

1693
01:11:55,695 --> 01:11:58,880
And so how can

1694
01:11:58,880 --> 01:12:00,965
the data-oriented
model and

1695
01:12:00,965 --> 01:12:04,280
decentralized trust be

1696
01:12:04,280 --> 01:12:08,015
helpful for better
metaverse systems and

1697
01:12:08,015 --> 01:12:10,460
which layer would actually

1698
01:12:10,460 --> 01:12:13,070
be able to support,
this was NDN?

1699
01:12:13,070 --> 01:12:14,810
And as I mentioned,

1700
01:12:14,810 --> 01:12:16,775
so what are the
gaps and challenges

1701
01:12:16,775 --> 01:12:19,850
and so on in NDN research?

1702
01:12:19,850 --> 01:12:23,990
And I'm super
happy that we have

1703
01:12:23,990 --> 01:12:28,280
a really nice composition

1704
01:12:28,280 --> 01:12:31,250
today from

1705
01:12:31,250 --> 01:12:33,305
people from really
different backgrounds

1706
01:12:33,305 --> 01:12:36,530
and what they've
experienced

1707
01:12:36,530 --> 01:12:39,545
in networking
distributed systems.

1708
01:12:39,545 --> 01:12:42,020
And contingency question.

1709
01:12:42,020 --> 01:12:46,175
So let me introduce
Paulo Mendes.

1710
01:12:46,175 --> 01:12:50,180
Paulo is currently
an expert in

1711
01:12:50,180 --> 01:12:51,800
Network Architectures
and Protocols

1712
01:12:51,800 --> 01:12:54,935
at AIRBUS research
in Munich,

1713
01:12:54,935 --> 01:13:00,170
and also an Associated
Researcher at Munich.

1714
01:13:00,170 --> 01:13:02,240
So he will talk
a bit more about

1715
01:13:02,240 --> 01:13:03,470
his background
in a second.

1716
01:13:03,470 --> 01:13:06,245
But the NDN
people probably

1717
01:13:06,245 --> 01:13:08,450
know Paulo from previous

1718
01:13:08,450 --> 01:13:10,730
ICN and the end work.

1719
01:13:10,730 --> 01:13:13,535
And I'm happy to have

1720
01:13:13,535 --> 01:13:16,055
Michelle Munson
and Todd Hodes

1721
01:13:16,055 --> 01:13:17,330
in independent today.

1722
01:13:17,330 --> 01:13:25,700
They are both from
Eluvio and has

1723
01:13:25,700 --> 01:13:29,780
previously founded
Aspera and

1724
01:13:29,780 --> 01:13:33,560
developed the
FASP bulk-data

1725
01:13:33,560 --> 01:13:35,825
or data transfer protocol.

1726
01:13:35,825 --> 01:13:37,895
And he's the Co-Creator

1727
01:13:37,895 --> 01:13:42,080
of Eluvio's Cotton
Fabric Particle.

1728
01:13:42,080 --> 01:13:45,140
And Todd is the
Principal Architect

1729
01:13:45,140 --> 01:13:46,850
at Eluvio and he

1730
01:13:46,850 --> 01:13:49,130
previously built
Location Labs

1731
01:13:49,130 --> 01:13:52,580
and has a background in
distributed systems.

1732
01:13:52,580 --> 01:13:54,965
And then finally we have

1733
01:13:54,965 --> 01:13:59,180
Jeff Burke from UCLA,

1734
01:13:59,180 --> 01:14:01,610
The School of Theater,
Film and Television,

1735
01:14:01,610 --> 01:14:03,950
where he is Professor
and Associate

1736
01:14:03,950 --> 01:14:06,530
Dean for Research
on the anthology.

1737
01:14:06,530 --> 01:14:10,070
And he's also the
Co-Director of

1738
01:14:10,070 --> 01:14:11,780
the UCLA Center
for Research and

1739
01:14:11,780 --> 01:14:13,909
Engineering, Media
and performance.

1740
01:14:13,909 --> 01:14:15,680
While those of you
who work with NDN for

1741
01:14:15,680 --> 01:14:17,510
some time surely
know Jeff,

1742
01:14:17,510 --> 01:14:20,150
he's been a long
time researcher

1743
01:14:20,150 --> 01:14:23,750
and contributor to
the technology.

1744
01:14:23,750 --> 01:14:26,750
And so next,

1745
01:14:26,750 --> 01:14:29,180
I would invite
our panelists

1746
01:14:29,180 --> 01:14:31,400
to tell us a little
bit more about

1747
01:14:31,400 --> 01:14:34,700
their background and
maybe their connection

1748
01:14:34,700 --> 01:14:38,540
to this metaverse
public in general.

1749
01:14:38,540 --> 01:14:41,610
And let's start
with Paulo.

1750
01:14:45,360 --> 01:14:47,800
>> Good afternoon. I hope

1751
01:14:47,800 --> 01:14:49,045
you can hear me well.

1752
01:14:49,045 --> 01:14:51,025
That's always the
first question to

1753
01:14:51,025 --> 01:14:55,105
ask in this
remote situation.

1754
01:14:55,105 --> 01:14:56,920
So as Duke already

1755
01:14:56,920 --> 01:14:59,155
presented a
little of myself,

1756
01:14:59,155 --> 01:15:00,460
so I'm at AIRBUS

1757
01:15:00,460 --> 01:15:01,930
central assertion
technology in

1758
01:15:01,930 --> 01:15:05,880
Munich since before
the pandemic, 2019.

1759
01:15:05,880 --> 01:15:07,965
Just arrived and
the pandemic also

1760
01:15:07,965 --> 01:15:10,520
arrived some
months later on.

1761
01:15:10,520 --> 01:15:14,005
Before that, I worked
in different places.

1762
01:15:14,005 --> 01:15:16,870
I created some research
centers in Portugal.

1763
01:15:16,870 --> 01:15:18,430
I was also professor
in University

1764
01:15:18,430 --> 01:15:20,725
in Portugal and also

1765
01:15:20,725 --> 01:15:23,110
long time ago or also in

1766
01:15:23,110 --> 01:15:24,430
the industry where I

1767
01:15:24,430 --> 01:15:26,980
was researcher assistant
at NTT Docomo,

1768
01:15:26,980 --> 01:15:29,695
the Japanese
Telecom operator.

1769
01:15:29,695 --> 01:15:31,540
At the time that
we were creating

1770
01:15:31,540 --> 01:15:35,140
former in Europe
for the 3G network.

1771
01:15:35,140 --> 01:15:38,965
So I know Duke,

1772
01:15:38,965 --> 01:15:42,100
Jeff and others from
the NDM community.

1773
01:15:42,100 --> 01:15:44,110
I'm very pleased
to be here in

1774
01:15:44,110 --> 01:15:47,560
the NDM com to contribute
to this topic.

1775
01:15:47,560 --> 01:15:50,200
And I may say a little

1776
01:15:50,200 --> 01:15:52,960
about what is my
correlation with

1777
01:15:52,960 --> 01:15:55,780
metaverse because
let's say

1778
01:15:55,780 --> 01:15:57,220
association with
this event is more

1779
01:15:57,220 --> 01:15:58,915
from the NDM side
at metaverse.

1780
01:15:58,915 --> 01:16:00,280
Metaverse is
something that

1781
01:16:00,280 --> 01:16:02,800
started one-and-a-half
years ago.

1782
01:16:02,800 --> 01:16:04,075
Within the context of

1783
01:16:04,075 --> 01:16:05,470
AIRBUS where we started,

1784
01:16:05,470 --> 01:16:07,420
I only did a study

1785
01:16:07,420 --> 01:16:09,775
about what does it
mean metaverse for us?

1786
01:16:09,775 --> 01:16:11,020
Like Duke said,
there are lots

1787
01:16:11,020 --> 01:16:12,370
of different
definitions and

1788
01:16:12,370 --> 01:16:15,295
people have different
ways to look at it.

1789
01:16:15,295 --> 01:16:16,930
What does it
mean for AIRBUS?

1790
01:16:16,930 --> 01:16:19,720
What can we
exploit from it?

1791
01:16:19,720 --> 01:16:22,000
And actually, how can
we contribute to it?

1792
01:16:22,000 --> 01:16:24,380
And that's more or less,

1793
01:16:24,990 --> 01:16:28,270
let's say my
motivation towards

1794
01:16:28,270 --> 01:16:29,500
the topic of metaverse

1795
01:16:29,500 --> 01:16:31,730
and actually to be here.

1796
01:16:33,960 --> 01:16:36,505
Not sure if I should

1797
01:16:36,505 --> 01:16:38,500
explain a little
what my opinion

1798
01:16:38,500 --> 01:16:39,640
about metaverse is and

1799
01:16:39,640 --> 01:16:42,565
provide some insights now?

1800
01:16:42,565 --> 01:16:43,900
Or just to go around

1801
01:16:43,900 --> 01:16:45,595
and allow the
others to present.

1802
01:16:45,595 --> 01:16:47,900
Duke how does it go?

1803
01:16:48,990 --> 01:16:51,010
>> So we have a more

1804
01:16:51,010 --> 01:16:55,040
technical presentation
option later.

1805
01:16:55,640 --> 01:16:57,975
Maybe you can say like

1806
01:16:57,975 --> 01:17:00,690
like one or two sentence,

1807
01:17:00,690 --> 01:17:01,770
what's the relationship of

1808
01:17:01,770 --> 01:17:03,305
your work to metaverse.

1809
01:17:03,305 --> 01:17:07,325
>> So like I said,

1810
01:17:07,325 --> 01:17:09,220
being within
the context of

1811
01:17:09,220 --> 01:17:11,230
AIRBUS doing some
work on the context

1812
01:17:11,230 --> 01:17:14,950
of NDM that was like
the main topic.

1813
01:17:14,950 --> 01:17:16,900
And that's why I also
liked the invitation

1814
01:17:16,900 --> 01:17:19,090
because it brings the
two topics together.

1815
01:17:19,090 --> 01:17:21,040
On the metaverse I'm

1816
01:17:21,040 --> 01:17:23,095
leading a studying
within AIRBUS.

1817
01:17:23,095 --> 01:17:25,390
And it's a
high-level study.

1818
01:17:25,390 --> 01:17:27,880
So it is not
technological jargon.

1819
01:17:27,880 --> 01:17:30,370
Is more related with
this first picture

1820
01:17:30,370 --> 01:17:31,705
that Duke presented.

1821
01:17:31,705 --> 01:17:33,145
The beautiful
future world.

1822
01:17:33,145 --> 01:17:34,780
What does it
mean? It's going

1823
01:17:34,780 --> 01:17:36,055
to be completely
different.

1824
01:17:36,055 --> 01:17:38,845
And we are trying to
answer some questions.

1825
01:17:38,845 --> 01:17:40,225
What does it mean?

1826
01:17:40,225 --> 01:17:42,340
For instance, we
got the conclusion

1827
01:17:42,340 --> 01:17:45,235
that the metaverse is
not the Web3 only.

1828
01:17:45,235 --> 01:17:47,485
That was very
good conclusion.

1829
01:17:47,485 --> 01:17:50,320
That is not only
NVIDIA Omniverse.

1830
01:17:50,320 --> 01:17:52,150
Also some of my
colleagues in

1831
01:17:52,150 --> 01:17:53,260
several business units are

1832
01:17:53,260 --> 01:17:55,180
using NVIDIA Omniverse to

1833
01:17:55,180 --> 01:17:57,895
create the 3D render

1834
01:17:57,895 --> 01:18:02,080
models for the
production lines, etc.

1835
01:18:02,080 --> 01:18:04,420
Is not only about
virtual reality and

1836
01:18:04,420 --> 01:18:06,370
augmented reality,
in my opinion.

1837
01:18:06,370 --> 01:18:08,410
And most
important, it will

1838
01:18:08,410 --> 01:18:11,155
not change or will not
replace real life.

1839
01:18:11,155 --> 01:18:12,730
That's something
that I try to

1840
01:18:12,730 --> 01:18:14,140
tell people not to be

1841
01:18:14,140 --> 01:18:15,385
afraid of the multiverse

1842
01:18:15,385 --> 01:18:17,170
because you're not
going to disappear.

1843
01:18:17,170 --> 01:18:20,170
It's not like the
matrix where you

1844
01:18:20,170 --> 01:18:22,465
disappear
completely and you

1845
01:18:22,465 --> 01:18:23,725
just live in
the metaverse.

1846
01:18:23,725 --> 01:18:25,675
That's not exactly
what happened.

1847
01:18:25,675 --> 01:18:27,490
And what I've tried to

1848
01:18:27,490 --> 01:18:29,410
do also in this
study to figure out,

1849
01:18:29,410 --> 01:18:31,630
and that's a
learning process,

1850
01:18:31,630 --> 01:18:34,060
is that the
metaverse for us is

1851
01:18:34,060 --> 01:18:38,530
not only a set
or one 3D space,

1852
01:18:38,530 --> 01:18:39,625
three-dimensional space,

1853
01:18:39,625 --> 01:18:41,995
or that's the
first challenge.

1854
01:18:41,995 --> 01:18:43,210
The interconnection
between

1855
01:18:43,210 --> 01:18:46,090
three different 3D spaces.

1856
01:18:46,090 --> 01:18:47,110
Is also the connection

1857
01:18:47,110 --> 01:18:48,265
with the physical world,

1858
01:18:48,265 --> 01:18:50,350
with real-world
in real-time.

1859
01:18:50,350 --> 01:18:52,435
By the connection of

1860
01:18:52,435 --> 01:18:54,820
virtual presence
like avatars with

1861
01:18:54,820 --> 01:18:56,990
the real systems like

1862
01:18:57,390 --> 01:18:59,500
cyber-physical systems or

1863
01:18:59,500 --> 01:19:01,180
robotic systems
for instance.

1864
01:19:01,180 --> 01:19:03,160
This is more or
less what we're

1865
01:19:03,160 --> 01:19:05,845
doing in this
high-level definition.

1866
01:19:05,845 --> 01:19:08,305
And maybe towards
the panel,

1867
01:19:08,305 --> 01:19:09,130
I can go into

1868
01:19:09,130 --> 01:19:10,930
more technical
issues because now

1869
01:19:10,930 --> 01:19:13,720
we're getting more
into what is our,

1870
01:19:13,720 --> 01:19:14,740
let's say, vision in

1871
01:19:14,740 --> 01:19:16,390
the short term
and long term.

1872
01:19:16,390 --> 01:19:17,679
And actually technically,

1873
01:19:17,679 --> 01:19:20,140
what good can we exploit
on the short-term?

1874
01:19:20,140 --> 01:19:22,615
Short-term means in
the next five years.

1875
01:19:22,615 --> 01:19:24,460
And long-term
what should be

1876
01:19:24,460 --> 01:19:26,965
our positioning
even technically.

1877
01:19:26,965 --> 01:19:29,860
I think that we

1878
01:19:29,860 --> 01:19:32,960
can take it during
the panel discussion.

1879
01:19:33,690 --> 01:19:37,135
>> Thanks Paulo.
By the way,

1880
01:19:37,135 --> 01:19:40,780
to those of us who
are joining remotely,

1881
01:19:40,780 --> 01:19:44,600
I invite you to turn on
your camera as well.

1882
01:19:48,270 --> 01:19:51,400
So let's move on. So Jeff

1883
01:19:51,400 --> 01:19:56,920
is actually onsite
[inaudible].

1884
01:19:56,920 --> 01:19:59,290
>> Hi. So Jeff
Burke from UCLA.

1885
01:19:59,290 --> 01:20:00,940
I'll just give a quick

1886
01:20:00,940 --> 01:20:02,755
introduction of
my background.

1887
01:20:02,755 --> 01:20:05,020
So I teach at UCLA and

1888
01:20:05,020 --> 01:20:07,795
my focus is on essentially

1889
01:20:07,795 --> 01:20:10,150
the impact of emerging
technologies on

1890
01:20:10,150 --> 01:20:13,270
storytelling and
also vice versa.

1891
01:20:13,270 --> 01:20:14,905
The impact of the needs

1892
01:20:14,905 --> 01:20:16,330
of the creative sector

1893
01:20:16,330 --> 01:20:17,380
and artists in

1894
01:20:17,380 --> 01:20:20,259
the long-term on
fundamental technologies.

1895
01:20:20,259 --> 01:20:23,605
What that has
involved has been

1896
01:20:23,605 --> 01:20:25,930
research in
different types

1897
01:20:25,930 --> 01:20:26,995
of fundamental
technologies.

1898
01:20:26,995 --> 01:20:27,970
So I've been involved in

1899
01:20:27,970 --> 01:20:29,995
the NBN research project

1900
01:20:29,995 --> 01:20:31,375
since 2010.

1901
01:20:31,375 --> 01:20:33,820
I guess since the
original proposal.

1902
01:20:33,820 --> 01:20:35,650
And then also at
the same time,

1903
01:20:35,650 --> 01:20:39,280
working on part of
experimental productions,

1904
01:20:39,280 --> 01:20:42,370
from performances to
recorded media to

1905
01:20:42,370 --> 01:20:44,770
interactive
projects that are

1906
01:20:44,770 --> 01:20:47,755
exploring a mix
of technology,

1907
01:20:47,755 --> 01:20:48,550
opportunity and

1908
01:20:48,550 --> 01:20:50,215
the storytelling
challenges that exist.

1909
01:20:50,215 --> 01:20:51,670
So it's integrated with

1910
01:20:51,670 --> 01:20:53,620
our training
programs at UCLA.

1911
01:20:53,620 --> 01:20:56,860
That includes
most recently

1912
01:20:56,860 --> 01:20:59,290
shared augmented
reality experiences

1913
01:20:59,290 --> 01:21:01,030
in the context of
live performance.

1914
01:21:01,030 --> 01:21:03,595
So last year we did

1915
01:21:03,595 --> 01:21:05,350
a live performance set

1916
01:21:05,350 --> 01:21:07,255
in the world of the
Amazon Studios series,

1917
01:21:07,255 --> 01:21:08,905
The Man in the High Castle

1918
01:21:08,905 --> 01:21:10,270
that was looking at

1919
01:21:10,270 --> 01:21:12,970
mobile AR based audience

1920
01:21:12,970 --> 01:21:15,130
experience of a
live performance.

1921
01:21:15,130 --> 01:21:17,560
And we've done other types

1922
01:21:17,560 --> 01:21:18,910
of experiments
like that that are

1923
01:21:18,910 --> 01:21:21,670
scaling up in
sophistication

1924
01:21:21,670 --> 01:21:24,595
in terms of their use
of extended reality.

1925
01:21:24,595 --> 01:21:26,980
Also very interested
in the relationship

1926
01:21:26,980 --> 01:21:29,500
between named data
networking and

1927
01:21:29,500 --> 01:21:31,615
alternative strategies
for networking

1928
01:21:31,615 --> 01:21:33,190
and the future of

1929
01:21:33,190 --> 01:21:34,870
content creation
and experience.

1930
01:21:34,870 --> 01:21:37,300
So I have just a
screenshot up here

1931
01:21:37,300 --> 01:21:39,790
of a project a few
years ago called

1932
01:21:39,790 --> 01:21:43,030
touch NDN that was
looking at taking

1933
01:21:43,030 --> 01:21:45,940
a hierarchical naming that

1934
01:21:45,940 --> 01:21:47,905
exists in real
time graphics.

1935
01:21:47,905 --> 01:21:50,260
So in this case,
a platform

1936
01:21:50,260 --> 01:21:51,430
called Touch
Designer that was

1937
01:21:51,430 --> 01:21:52,870
built by the
folks that did

1938
01:21:52,870 --> 01:21:56,005
the Houdini 3D
graphics platform.

1939
01:21:56,005 --> 01:21:57,310
And looking at how to

1940
01:21:57,310 --> 01:21:59,620
have NDN communication of

1941
01:21:59,620 --> 01:22:01,690
media integrated

1942
01:22:01,690 --> 01:22:03,250
into this real-time
platform.

1943
01:22:03,250 --> 01:22:03,730
And what some of

1944
01:22:03,730 --> 01:22:05,575
the benefits and
challenges were.

1945
01:22:05,575 --> 01:22:09,055
I think just to briefly

1946
01:22:09,055 --> 01:22:11,095
explain my interest in

1947
01:22:11,095 --> 01:22:12,160
the metaverse and how it

1948
01:22:12,160 --> 01:22:13,180
connects to this panel.

1949
01:22:13,180 --> 01:22:15,100
I think that sits in

1950
01:22:15,100 --> 01:22:16,270
two different
places that relates

1951
01:22:16,270 --> 01:22:18,840
very much to Paulos.

1952
01:22:18,840 --> 01:22:21,560
>> One is in the
relationship between

1953
01:22:21,560 --> 01:22:23,740
the physical
world and shared

1954
01:22:23,740 --> 01:22:25,930
extended reality
applications and

1955
01:22:25,930 --> 01:22:28,225
what some of the
technical challenges are.

1956
01:22:28,225 --> 01:22:30,670
I think the notion
of a digital twin

1957
01:22:30,670 --> 01:22:32,965
has been helpful
in reminding,

1958
01:22:32,965 --> 01:22:35,140
I think that each
of the applications

1959
01:22:35,140 --> 01:22:36,610
that were discussed
yesterday,

1960
01:22:36,610 --> 01:22:38,680
so whether it was
vehicular networking,

1961
01:22:38,680 --> 01:22:41,805
mobile health,
energy generation.

1962
01:22:41,805 --> 01:22:44,510
All of those
are very likely

1963
01:22:44,510 --> 01:22:47,120
from an end-user
perspective to have

1964
01:22:47,120 --> 01:22:49,490
representations in
3D shared worlds

1965
01:22:49,490 --> 01:22:51,725
in the near
future and have

1966
01:22:51,725 --> 01:22:52,880
maybe close coupling with

1967
01:22:52,880 --> 01:22:53,660
some of the data and

1968
01:22:53,660 --> 01:22:56,315
actuation that's
handled in

1969
01:22:56,315 --> 01:22:57,530
other parts of
those networks.

1970
01:22:57,530 --> 01:22:59,750
And so I think it's
a broad concern

1971
01:22:59,750 --> 01:23:02,465
for the community that

1972
01:23:02,465 --> 01:23:04,460
we're going to see
those types of systems

1973
01:23:04,460 --> 01:23:08,210
integrated with chaired
XR experiences soon.

1974
01:23:08,210 --> 01:23:10,490
And then, I guess the
second interest that

1975
01:23:10,490 --> 01:23:14,285
I have is really the
trajectory away from

1976
01:23:14,285 --> 01:23:15,740
traditional production and

1977
01:23:15,740 --> 01:23:17,270
post-production processes

1978
01:23:17,270 --> 01:23:20,420
that we're focused
on 2D video

1979
01:23:20,420 --> 01:23:22,234
captured optically

1980
01:23:22,234 --> 01:23:24,980
towards really
real-time 3D graphics

1981
01:23:24,980 --> 01:23:26,150
is a fundamental way

1982
01:23:26,150 --> 01:23:29,870
for processing
and presenting

1983
01:23:29,870 --> 01:23:32,030
future of entertainment
experiences.

1984
01:23:32,030 --> 01:23:33,440
And those connect
very closely,

1985
01:23:33,440 --> 01:23:35,150
I think to fundamental
technologies and

1986
01:23:35,150 --> 01:23:37,310
experiences that exist
in the metaverse.

1987
01:23:37,310 --> 01:23:39,245
So I'll leave it
at that and then

1988
01:23:39,245 --> 01:23:41,920
look forward to
the discussion.

1989
01:23:41,920 --> 01:23:46,510
>> Thank you,
Jeff. And I'm

1990
01:23:46,510 --> 01:23:48,490
really happy that
we have Michelle,

1991
01:23:48,490 --> 01:23:51,660
taught in the panel
today as well.

1992
01:23:51,660 --> 01:23:54,725
And I'd like to
invite them to

1993
01:23:54,725 --> 01:23:56,450
introduce themselves

1994
01:23:56,450 --> 01:24:00,170
and their work
at interview.

1995
01:24:00,170 --> 01:24:03,815
>> Hi Dirk, I'll
start. Michelle here.

1996
01:24:03,815 --> 01:24:05,120
Thank you-all very much

1997
01:24:05,120 --> 01:24:06,440
for including us in this.

1998
01:24:06,440 --> 01:24:08,180
I think first
and foremost,

1999
01:24:08,180 --> 01:24:10,535
this is a really
big topic area.

2000
01:24:10,535 --> 01:24:12,365
And as Paul has said,

2001
01:24:12,365 --> 01:24:15,980
it interconnects
everything about

2002
01:24:15,980 --> 01:24:18,620
the history of
TCPIP networks

2003
01:24:18,620 --> 01:24:20,060
and optimization now all

2004
01:24:20,060 --> 01:24:21,650
the way up through what

2005
01:24:21,650 --> 01:24:23,270
people are trying to do

2006
01:24:23,270 --> 01:24:25,099
in the modern
content industry.

2007
01:24:25,099 --> 01:24:27,350
And I thought maybe

2008
01:24:27,350 --> 01:24:28,760
I'll try to tell you
a little bit about

2009
01:24:28,760 --> 01:24:31,070
my own background and
how we arrived at

2010
01:24:31,070 --> 01:24:33,650
creating the content
fabric protocol,

2011
01:24:33,650 --> 01:24:37,610
which is the decentralised
blockchain and

2012
01:24:37,610 --> 01:24:40,970
content native
protocol approach

2013
01:24:40,970 --> 01:24:43,160
that Dirk referred to.

2014
01:24:43,160 --> 01:24:45,320
After grad school, I

2015
01:24:45,320 --> 01:24:48,620
was fortunate to
get exposed to

2016
01:24:48,620 --> 01:24:50,360
some of the application

2017
01:24:50,360 --> 01:24:51,830
layer networking problems

2018
01:24:51,830 --> 01:24:53,870
that were emerging
at that time.

2019
01:24:53,870 --> 01:24:56,320
And I ended up,

2020
01:24:56,320 --> 01:24:59,200
after working with some
folks at UC Berkeley,

2021
01:24:59,200 --> 01:25:01,630
that's how I met Todd,
couple of start-ups,

2022
01:25:01,630 --> 01:25:03,535
some getting involved in

2023
01:25:03,535 --> 01:25:07,100
the areas of transport
optimization.

2024
01:25:07,100 --> 01:25:09,290
And I started a company

2025
01:25:09,290 --> 01:25:11,420
ultimately and a protocol

2026
01:25:11,420 --> 01:25:12,845
called a spirit fast.

2027
01:25:12,845 --> 01:25:16,640
And this was years ago
for unicast based,

2028
01:25:16,640 --> 01:25:18,935
reliable bulk
data transport.

2029
01:25:18,935 --> 01:25:20,600
I'm sure Bon saw me when

2030
01:25:20,600 --> 01:25:23,300
I built that up into a

2031
01:25:23,300 --> 01:25:26,060
functioning both
protocol stack

2032
01:25:26,060 --> 01:25:28,670
and also application
layer set of tools.

2033
01:25:28,670 --> 01:25:30,950
And that grew
across media and

2034
01:25:30,950 --> 01:25:33,530
entertainment quite a
lot for many years.

2035
01:25:33,530 --> 01:25:37,040
And during that process,

2036
01:25:37,040 --> 01:25:39,410
we ended up being
exposed to a lot of

2037
01:25:39,410 --> 01:25:42,170
the overall contents
supply chain.

2038
01:25:42,170 --> 01:25:44,420
I don't know how
better to put it on

2039
01:25:44,420 --> 01:25:48,440
and toward the later
stages of that.

2040
01:25:48,440 --> 01:25:50,210
And it was
specifically being

2041
01:25:50,210 --> 01:25:53,000
integrated into content
delivery networks,

2042
01:25:53,000 --> 01:25:57,230
classic major CDNs
and has a tooling and

2043
01:25:57,230 --> 01:25:58,985
application stack to get

2044
01:25:58,985 --> 01:26:01,640
large data into
public Clouds

2045
01:26:01,640 --> 01:26:02,960
and around public Clouds.

2046
01:26:02,960 --> 01:26:05,420
And so the reason

2047
01:26:05,420 --> 01:26:06,470
I'm going into all this is

2048
01:26:06,470 --> 01:26:08,330
because in that process,

2049
01:26:08,330 --> 01:26:11,900
Chevron and I had this
consistent exposure

2050
01:26:11,900 --> 01:26:16,325
to what you would call
a web of problems.

2051
01:26:16,325 --> 01:26:18,845
And those problems were

2052
01:26:18,845 --> 01:26:20,630
both at the
application layer

2053
01:26:20,630 --> 01:26:22,640
and then I would
say also at

2054
01:26:22,640 --> 01:26:24,425
the interface
to the network

2055
01:26:24,425 --> 01:26:26,285
and also to the storage.

2056
01:26:26,285 --> 01:26:28,190
The kind of content
that Jeff's

2057
01:26:28,190 --> 01:26:29,750
talking about
that exists now,

2058
01:26:29,750 --> 01:26:31,370
it's not only very heavy,

2059
01:26:31,370 --> 01:26:33,545
but typically
it's composed.

2060
01:26:33,545 --> 01:26:35,240
And the same base

2061
01:26:35,240 --> 01:26:37,625
content is recomposed
in many ways.

2062
01:26:37,625 --> 01:26:39,890
And then the more
traditional way

2063
01:26:39,890 --> 01:26:41,900
of storing and

2064
01:26:41,900 --> 01:26:43,880
processing that and
then distributing it to

2065
01:26:43,880 --> 01:26:46,355
the consumer is
very multistage.

2066
01:26:46,355 --> 01:26:48,470
And then finally,
if you take

2067
01:26:48,470 --> 01:26:50,210
a really Indian level

2068
01:26:50,210 --> 01:26:51,380
approach to the problem,

2069
01:26:51,380 --> 01:26:53,870
there's a huge amount
of duplication in

2070
01:26:53,870 --> 01:26:55,100
the bytes that go through

2071
01:26:55,100 --> 01:26:57,245
those composed versions
over the Internet.

2072
01:26:57,245 --> 01:27:00,634
And all of this together,

2073
01:27:00,634 --> 01:27:03,665
we had this sense
that there might be

2074
01:27:03,665 --> 01:27:05,975
a more content
native approach

2075
01:27:05,975 --> 01:27:09,094
to create a
distribution protocol.

2076
01:27:09,094 --> 01:27:12,655
And the fabric
is just that,

2077
01:27:12,655 --> 01:27:15,270
it has many
properties that

2078
01:27:15,270 --> 01:27:17,360
are derived from some of

2079
01:27:17,360 --> 01:27:19,250
the philosophies you
all are talking about.

2080
01:27:19,250 --> 01:27:20,870
And I'll try to
get into that,

2081
01:27:20,870 --> 01:27:22,445
the more technical parts.

2082
01:27:22,445 --> 01:27:24,605
We started the protocol

2083
01:27:24,605 --> 01:27:26,915
implementation in 2018,

2084
01:27:26,915 --> 01:27:29,540
and it's taken us
a good 3-4 years

2085
01:27:29,540 --> 01:27:30,890
just to get it to a point

2086
01:27:30,890 --> 01:27:32,975
of functioning at scale.

2087
01:27:32,975 --> 01:27:36,020
We do now, since 2019,

2088
01:27:36,020 --> 01:27:38,000
have a pretty
large-scale network

2089
01:27:38,000 --> 01:27:39,410
that runs the protocol.

2090
01:27:39,410 --> 01:27:41,405
It's a full-stack
blockchain as well,

2091
01:27:41,405 --> 01:27:42,440
which I'll get into.

2092
01:27:42,440 --> 01:27:44,090
And I think

2093
01:27:44,090 --> 01:27:46,160
the most interesting
part about this to

2094
01:27:46,160 --> 01:27:51,455
today's panel is that
the fabric network is

2095
01:27:51,455 --> 01:27:54,200
both as a
blockchain and also

2096
01:27:54,200 --> 01:27:56,540
just as an application
layer network is now

2097
01:27:56,540 --> 01:27:58,205
being used to support

2098
01:27:58,205 --> 01:28:02,390
many Web 3 Metaverse
experiences.

2099
01:28:02,390 --> 01:28:05,720
One of the most interesting
recently has been

2100
01:28:05,720 --> 01:28:08,840
an interactive AR/VR model

2101
01:28:08,840 --> 01:28:10,235
for releasing movies,

2102
01:28:10,235 --> 01:28:11,390
which we've done with

2103
01:28:11,390 --> 01:28:12,935
Warner Brothers Studios.

2104
01:28:12,935 --> 01:28:16,700
And this is, as Jeff said,

2105
01:28:16,700 --> 01:28:20,225
I think the tip of
what's possible in terms

2106
01:28:20,225 --> 01:28:21,710
of bringing interactive

2107
01:28:21,710 --> 01:28:23,734
content to the consumer.

2108
01:28:23,734 --> 01:28:25,580
One of the things that I

2109
01:28:25,580 --> 01:28:27,470
want to talk about
as we get into this,

2110
01:28:27,470 --> 01:28:29,660
as you ask for the
motivations of

2111
01:28:29,660 --> 01:28:33,290
problem space is
what we can do as

2112
01:28:33,290 --> 01:28:35,300
a integrated
networking and

2113
01:28:35,300 --> 01:28:37,820
technology community
to really help to

2114
01:28:37,820 --> 01:28:39,965
advance the
architecture beyond

2115
01:28:39,965 --> 01:28:42,785
what's known as
so-called public Clouds.

2116
01:28:42,785 --> 01:28:46,595
One of the great
challenges to really

2117
01:28:46,595 --> 01:28:50,810
getting the deepest
adoption in this area,

2118
01:28:50,810 --> 01:28:52,820
is the fact that
the public clouds

2119
01:28:52,820 --> 01:28:54,395
have become so dominant.

2120
01:28:54,395 --> 01:28:56,510
And in terms of

2121
01:28:56,510 --> 01:29:00,005
content production as
well as distribution.

2122
01:29:00,005 --> 01:29:01,550
And as long as that's

2123
01:29:01,550 --> 01:29:03,920
the only paradigm
that people know and

2124
01:29:03,920 --> 01:29:07,820
understand it makes
it difficult to push

2125
01:29:07,820 --> 01:29:10,520
forward at really
large scale

2126
01:29:10,520 --> 01:29:12,815
and to unlock the
possibilities.

2127
01:29:12,815 --> 01:29:14,615
Fortunately, I
think there's

2128
01:29:14,615 --> 01:29:16,250
huge good timing in

2129
01:29:16,250 --> 01:29:18,245
terms of the interests
from the market.

2130
01:29:18,245 --> 01:29:21,170
But definitely the
large majority

2131
01:29:21,170 --> 01:29:24,350
of media workflows
that Jeff would be

2132
01:29:24,350 --> 01:29:25,595
talking about that we

2133
01:29:25,595 --> 01:29:26,810
would work on
would have more

2134
01:29:26,810 --> 01:29:30,380
traditionally
been locked into

2135
01:29:30,380 --> 01:29:31,490
what you think of as

2136
01:29:31,490 --> 01:29:34,040
a classic public
cloud storage and

2137
01:29:34,040 --> 01:29:36,740
distribution through
a more classic CDN.

2138
01:29:36,740 --> 01:29:38,180
So I want to

2139
01:29:38,180 --> 01:29:39,740
turn it over to my
colleague Todd,

2140
01:29:39,740 --> 01:29:44,120
who joined us at Alivio
here just in 2023,

2141
01:29:44,120 --> 01:29:46,520
taught as a PhD
from Cal Berkeley.

2142
01:29:46,520 --> 01:29:47,810
But most importantly, I've

2143
01:29:47,810 --> 01:29:49,370
known him for a
very long time.

2144
01:29:49,370 --> 01:29:50,600
He's quite an expert in

2145
01:29:50,600 --> 01:29:52,145
distributed systems and as

2146
01:29:52,145 --> 01:29:55,340
this platform has really
started to scale,

2147
01:29:55,340 --> 01:29:57,380
we have many
application layer needs

2148
01:29:57,380 --> 01:29:59,420
that Todd is leading out

2149
01:29:59,420 --> 01:30:00,590
and I think he'll be

2150
01:30:00,590 --> 01:30:01,820
a fantastic addition to

2151
01:30:01,820 --> 01:30:03,920
the conversation.
Turn it to you Todd.

2152
01:30:03,920 --> 01:30:05,600
>> Great thanks,
appreciate that.

2153
01:30:05,600 --> 01:30:07,295
Thanks for the
invitation to the panel.

2154
01:30:07,295 --> 01:30:10,565
It's a great opportunity
to talk to everyone.

2155
01:30:10,565 --> 01:30:12,140
There's two main things

2156
01:30:12,140 --> 01:30:13,460
that I've done in
my past that are

2157
01:30:13,460 --> 01:30:15,410
relevant here and one
is each relate to

2158
01:30:15,410 --> 01:30:17,930
the metaverse and to
name data networking.

2159
01:30:17,930 --> 01:30:20,540
So back in the
early 2000s,

2160
01:30:20,540 --> 01:30:21,860
we were starting to work

2161
01:30:21,860 --> 01:30:23,810
on content centric
networking,

2162
01:30:23,810 --> 01:30:29,120
which came more of
the named data space.

2163
01:30:29,120 --> 01:30:31,310
That was also
the environment

2164
01:30:31,310 --> 01:30:32,870
which has all the
papers quote,

2165
01:30:32,870 --> 01:30:34,670
was the multicast
environment

2166
01:30:34,670 --> 01:30:36,620
we talked about
protocols for

2167
01:30:36,620 --> 01:30:38,675
application level
framing and

2168
01:30:38,675 --> 01:30:43,250
soft-state and receiver
driven policies

2169
01:30:43,250 --> 01:30:44,360
and whatnot.

2170
01:30:44,360 --> 01:30:46,040
Two of the things we were

2171
01:30:46,040 --> 01:30:47,150
working on back then and

2172
01:30:47,150 --> 01:30:48,785
the papers at the
time called them

2173
01:30:48,785 --> 01:30:50,720
simply service
discovery protocols.

2174
01:30:50,720 --> 01:30:52,370
They were really
about naming

2175
01:30:52,370 --> 01:30:53,960
the data elements such

2176
01:30:53,960 --> 01:30:55,820
that they had two
interesting properties.

2177
01:30:55,820 --> 01:30:58,695
One was the local name

2178
01:30:58,695 --> 01:31:00,160
would resolve differently.

2179
01:31:00,160 --> 01:31:01,630
So the example would be

2180
01:31:01,630 --> 01:31:03,430
the light switch or
the video camera

2181
01:31:03,430 --> 01:31:04,570
in the room you're in.

2182
01:31:04,570 --> 01:31:05,920
You can name it as

2183
01:31:05,920 --> 01:31:07,930
a named data element
instead of a what?

2184
01:31:07,930 --> 01:31:10,570
An endpoint and IP
endpoint and find it.

2185
01:31:10,570 --> 01:31:12,460
So that's the
service discovery of

2186
01:31:12,460 --> 01:31:13,870
the named piece and then

2187
01:31:13,870 --> 01:31:15,550
extending that to
the wide area.

2188
01:31:15,550 --> 01:31:16,780
How do you actually allow

2189
01:31:16,780 --> 01:31:20,055
these names to
propagate wider?

2190
01:31:20,055 --> 01:31:23,220
And some papers that
were interesting.

2191
01:31:23,220 --> 01:31:26,120
Learning if it became
what is now routed

2192
01:31:26,120 --> 01:31:27,170
differently in

2193
01:31:27,170 --> 01:31:29,900
the name data
networking stack.

2194
01:31:29,900 --> 01:31:31,910
The way the protocols

2195
01:31:31,910 --> 01:31:33,530
have evolved is
different now,

2196
01:31:33,530 --> 01:31:35,180
but some of the same stuff

2197
01:31:35,180 --> 01:31:37,010
was coming up at

2198
01:31:37,010 --> 01:31:37,880
the time and then

2199
01:31:37,880 --> 01:31:39,050
the second piece
is interesting.

2200
01:31:39,050 --> 01:31:41,255
After doing that
work early,

2201
01:31:41,255 --> 01:31:43,520
I took a foray into
mobile computing,

2202
01:31:43,520 --> 01:31:45,680
which we're
building things,

2203
01:31:45,680 --> 01:31:48,755
such as local
social networks

2204
01:31:48,755 --> 01:31:51,155
for location-based
networking.

2205
01:31:51,155 --> 01:31:53,705
And so you get into the
Metaverse elements,

2206
01:31:53,705 --> 01:31:55,640
which is you're
inserting the user into

2207
01:31:55,640 --> 01:31:57,800
the application because
it's location-based.

2208
01:31:57,800 --> 01:32:00,830
And so various things

2209
01:32:00,830 --> 01:32:02,030
are built by location labs

2210
01:32:02,030 --> 01:32:04,610
before eventually
being carrier

2211
01:32:04,610 --> 01:32:07,370
focused applications.

2212
01:32:07,370 --> 01:32:10,010
From there then
joining Alivio,

2213
01:32:10,010 --> 01:32:12,975
where I'm working
on authorization

2214
01:32:12,975 --> 01:32:15,640
and application
services on

2215
01:32:15,640 --> 01:32:17,200
top of the content fabric.

2216
01:32:17,200 --> 01:32:18,610
So as introduction,

2217
01:32:18,610 --> 01:32:20,275
I'll just leave it
there and we can get

2218
01:32:20,275 --> 01:32:23,180
more into those
topics, thanks.

2219
01:32:23,280 --> 01:32:26,920
Great. Thanks very much,
Michelle and Todd.

2220
01:32:26,920 --> 01:32:30,770
It's really good to
have you on the panel.

2221
01:32:31,450 --> 01:32:34,265
So I could imagine
that there will be

2222
01:32:34,265 --> 01:32:37,699
quite some
interesting questions

2223
01:32:37,699 --> 01:32:41,090
in your content fabric
protocol and so on.

2224
01:32:41,090 --> 01:32:43,580
So we definitely have

2225
01:32:43,580 --> 01:32:47,240
time later to talk
more about this.

2226
01:32:47,240 --> 01:32:49,640
Certainly interesting, I

2227
01:32:49,640 --> 01:32:52,070
read the white paper today

2228
01:32:52,070 --> 01:32:54,020
and I found quite

2229
01:32:54,020 --> 01:32:56,435
interesting,
synergies overlap.

2230
01:32:56,435 --> 01:32:57,200
So I think it's

2231
01:32:57,200 --> 01:33:00,030
an actually quite
interesting setting.

2232
01:33:00,670 --> 01:33:04,745
So I'm also monitoring
the lecture.

2233
01:33:04,745 --> 01:33:08,330
And so don't hesitate

2234
01:33:08,330 --> 01:33:12,080
to post your
questions there.

2235
01:33:12,080 --> 01:33:15,175
I will try to [inaudible]
this a little bit,

2236
01:33:15,175 --> 01:33:16,705
and as we go,

2237
01:33:16,705 --> 01:33:18,730
I will then read

2238
01:33:18,730 --> 01:33:20,590
out a few questions
and then we can

2239
01:33:20,590 --> 01:33:28,970
discuss this more, great.

2240
01:33:28,970 --> 01:33:32,480
>> We initially prepared

2241
01:33:32,480 --> 01:33:33,980
a few topics that

2242
01:33:33,980 --> 01:33:36,260
we would like
to talk about.

2243
01:33:36,260 --> 01:33:39,560
This should not be
limiting the discussion.

2244
01:33:39,560 --> 01:33:41,120
So if there are

2245
01:33:41,120 --> 01:33:43,115
other aspects
that we identify,

2246
01:33:43,115 --> 01:33:45,380
I think I'm able to manage

2247
01:33:45,380 --> 01:33:47,555
it and we can also
talk about this.

2248
01:33:47,555 --> 01:33:51,560
So let's use this

2249
01:33:51,560 --> 01:33:56,220
as a starting point
and see how it goes.

2250
01:33:56,500 --> 01:33:59,735
We only heard a
little bit about

2251
01:33:59,735 --> 01:34:02,150
the different perspectives

2252
01:34:02,150 --> 01:34:04,130
and connections
to metaverse.

2253
01:34:04,130 --> 01:34:07,070
But let's talk
a little bit

2254
01:34:07,070 --> 01:34:08,810
more about what is so

2255
01:34:08,810 --> 01:34:11,330
interesting about it or

2256
01:34:11,330 --> 01:34:12,875
what are the
interesting aspects

2257
01:34:12,875 --> 01:34:14,540
from your perspective?

2258
01:34:14,540 --> 01:34:18,575
And let's see what
we can probably get.

2259
01:34:18,575 --> 01:34:21,425
Paulo, you started
a little bit,

2260
01:34:21,425 --> 01:34:23,810
but maybe talk more

2261
01:34:23,810 --> 01:34:25,820
about what's
interesting from

2262
01:34:25,820 --> 01:34:28,980
your and from
Airbus perspective.

2263
01:34:29,200 --> 01:34:36,290
>> Sure. During my
previous intervention,

2264
01:34:36,290 --> 01:34:37,970
I gave a little hint,

2265
01:34:37,970 --> 01:34:41,630
what will be for
the Metaverse.

2266
01:34:41,630 --> 01:34:44,180
This statement that is

2267
01:34:44,180 --> 01:34:45,470
there is not
Airbus statement,

2268
01:34:45,470 --> 01:34:47,750
just my [inaudible] idea

2269
01:34:47,750 --> 01:34:49,115
about what Metaverse is,

2270
01:34:49,115 --> 01:34:50,270
because internally
there are

2271
01:34:50,270 --> 01:34:52,790
still lots of
discussion about it.

2272
01:34:52,790 --> 01:34:57,020
Like I said, I like
to emphasize again,

2273
01:34:57,020 --> 01:34:59,300
I think what the
Metaverse is not.

2274
01:34:59,300 --> 01:35:01,625
First thing that
people look at,

2275
01:35:01,625 --> 01:35:03,185
at least my
colleagues when they

2276
01:35:03,185 --> 01:35:05,090
look at lots of things.

2277
01:35:05,090 --> 01:35:06,710
[inaudible] you're also
doing the same thing

2278
01:35:06,710 --> 01:35:08,330
or doing 3D modelling

2279
01:35:08,330 --> 01:35:10,100
of production
lines to help

2280
01:35:10,100 --> 01:35:12,140
the design of
aircraft, etc.

2281
01:35:12,140 --> 01:35:13,640
Where there is

2282
01:35:13,640 --> 01:35:16,595
a certain number of
people cooperating,

2283
01:35:16,595 --> 01:35:17,810
like a social network.

2284
01:35:17,810 --> 01:35:19,400
But for work like

2285
01:35:19,400 --> 01:35:21,740
LinkedIn where
people [inaudible]

2286
01:35:21,740 --> 01:35:23,750
writing a certain
specific task,

2287
01:35:23,750 --> 01:35:26,030
like looking at the engine

2288
01:35:26,030 --> 01:35:27,800
to see if it
works properly.

2289
01:35:27,800 --> 01:35:30,725
If it's been built

2290
01:35:30,725 --> 01:35:32,390
according to the plans and

2291
01:35:32,390 --> 01:35:34,640
if there's something
that is missing.

2292
01:35:34,640 --> 01:35:38,450
This is what people
are already doing not

2293
01:35:38,450 --> 01:35:39,995
exactly what I'm looking

2294
01:35:39,995 --> 01:35:42,935
at towards the
next ten years.

2295
01:35:42,935 --> 01:35:45,800
That for me is looking

2296
01:35:45,800 --> 01:35:46,850
more for the visual point

2297
01:35:46,850 --> 01:35:48,020
of view that we need

2298
01:35:48,020 --> 01:35:50,270
to start interacting
and bringing

2299
01:35:50,270 --> 01:35:52,760
all these 3D
worlds together.

2300
01:35:52,760 --> 01:35:54,460
But this is one of
the first things

2301
01:35:54,460 --> 01:35:56,050
that people are
complaining is

2302
01:35:56,050 --> 01:35:57,280
that when they
create their

2303
01:35:57,280 --> 01:35:59,635
3D modelling for a
specific purpose,

2304
01:35:59,635 --> 01:36:01,360
Metaverse application,

2305
01:36:01,360 --> 01:36:02,500
that application does not

2306
01:36:02,500 --> 01:36:04,170
talk with other
application.

2307
01:36:04,170 --> 01:36:08,000
You can use NDVI
Omniverse and to create

2308
01:36:08,000 --> 01:36:09,560
your 3D modelling
and to do

2309
01:36:09,560 --> 01:36:12,320
all your interactions
with all avatars.

2310
01:36:12,320 --> 01:36:14,600
But people, for instance,

2311
01:36:14,600 --> 01:36:15,695
in our production line,

2312
01:36:15,695 --> 01:36:17,810
people from the design
can use this tool,

2313
01:36:17,810 --> 01:36:19,595
but people from production

2314
01:36:19,595 --> 01:36:21,815
or testing use
another tool.

2315
01:36:21,815 --> 01:36:23,720
They don't talk to each
other. So there is

2316
01:36:23,720 --> 01:36:26,480
no way currently
to transfer,

2317
01:36:26,480 --> 01:36:29,540
transport
information back or

2318
01:36:29,540 --> 01:36:31,145
forward between
the design phase

2319
01:36:31,145 --> 01:36:32,720
and the testing and

2320
01:36:32,720 --> 01:36:34,820
production phase
because they

2321
01:36:34,820 --> 01:36:36,365
are not connected first.

2322
01:36:36,365 --> 01:36:38,585
Second, because if
they were connected,

2323
01:36:38,585 --> 01:36:39,620
we already discover there

2324
01:36:39,620 --> 01:36:42,110
are some data semantics

2325
01:36:42,110 --> 01:36:43,370
that actually needs to be

2326
01:36:43,370 --> 01:36:44,825
translated in real time.

2327
01:36:44,825 --> 01:36:49,340
Something that may need
some kind of a neat.

2328
01:36:49,340 --> 01:36:51,995
So this is more from what

2329
01:36:51,995 --> 01:36:55,500
we call the industrial
Metaverse purposes.

2330
01:36:55,690 --> 01:36:59,465
On the other hand,
there is also the,

2331
01:36:59,465 --> 01:37:02,045
let's say, the
customer experience.

2332
01:37:02,045 --> 01:37:04,340
For us the customer
are the airliners,

2333
01:37:04,340 --> 01:37:06,890
but we talk about
the B2B model,

2334
01:37:06,890 --> 01:37:08,075
the customer of
the customer,

2335
01:37:08,075 --> 01:37:09,485
that is the passengers.

2336
01:37:09,485 --> 01:37:11,420
What will be the impact of

2337
01:37:11,420 --> 01:37:13,730
the Metaverse for
these passengers?

2338
01:37:13,730 --> 01:37:15,500
The first application
that people

2339
01:37:15,500 --> 01:37:17,720
look or think about is

2340
01:37:17,720 --> 01:37:21,950
to make airline traveling

2341
01:37:21,950 --> 01:37:23,840
a little less boring.

2342
01:37:23,840 --> 01:37:25,820
Where you can embark

2343
01:37:25,820 --> 01:37:27,515
in a parallel
traveling while you're

2344
01:37:27,515 --> 01:37:31,040
traveling and then
you can get out of

2345
01:37:31,040 --> 01:37:33,380
this metallic tube
where you are in

2346
01:37:33,380 --> 01:37:36,275
for hours and have
a pleasant voyage.

2347
01:37:36,275 --> 01:37:37,850
That could be
[inaudible] We

2348
01:37:37,850 --> 01:37:38,944
did some experiments

2349
01:37:38,944 --> 01:37:42,155
with aerographical
environments, etc.

2350
01:37:42,155 --> 01:37:43,820
That's very good,
but you have

2351
01:37:43,820 --> 01:37:44,780
the problem of bandwidth

2352
01:37:44,780 --> 01:37:45,935
getting off the aircraft.

2353
01:37:45,935 --> 01:37:48,665
So that's the first
problem to look at.

2354
01:37:48,665 --> 01:37:51,515
The second one is
when we want to build

2355
01:37:51,515 --> 01:37:53,810
a 3D model is in real-time

2356
01:37:53,810 --> 01:37:56,370
because other
avatars are present.

2357
01:37:56,370 --> 01:37:58,675
These normally is
done on the Cloud,

2358
01:37:58,675 --> 01:38:00,790
and the Cloud is
really far away.

2359
01:38:00,790 --> 01:38:02,710
So this does not work

2360
01:38:02,710 --> 01:38:04,610
properly and

2361
01:38:04,610 --> 01:38:06,530
the handling delays,
for instance,

2362
01:38:06,530 --> 01:38:09,320
for handling headsets,

2363
01:38:09,320 --> 01:38:11,900
because of the head
movement and the delay,

2364
01:38:11,900 --> 01:38:13,445
actually that's
a big problem.

2365
01:38:13,445 --> 01:38:15,610
So there are lots
of constraints,

2366
01:38:15,610 --> 01:38:18,850
very simple constraints
that are endangering,

2367
01:38:18,850 --> 01:38:20,395
actually bringing
the Metaverse

2368
01:38:20,395 --> 01:38:21,894
inside the aircraft.

2369
01:38:21,894 --> 01:38:25,340
But for me, what

2370
01:38:25,340 --> 01:38:27,170
Metaverse is all
about that for me

2371
01:38:27,170 --> 01:38:28,880
is like the next
generation of Internet.

2372
01:38:28,880 --> 01:38:31,055
The Internet is a
network of networks.

2373
01:38:31,055 --> 01:38:33,200
Internetverse will
have a network of

2374
01:38:33,200 --> 01:38:35,330
three-dimensional spaces

2375
01:38:35,330 --> 01:38:37,175
connected to the
physical world.

2376
01:38:37,175 --> 01:38:39,605
So this is exactly what
we were looking at.

2377
01:38:39,605 --> 01:38:41,975
And from the data
point of view,

2378
01:38:41,975 --> 01:38:44,645
I think it will be
really interesting to

2379
01:38:44,645 --> 01:38:46,730
highlight that,
in my opinion,

2380
01:38:46,730 --> 01:38:48,200
on the Metaverse
will not handle

2381
01:38:48,200 --> 01:38:50,630
the only multimedia
data that

2382
01:38:50,630 --> 01:38:53,915
we normally use or
consume on the Internet,

2383
01:38:53,915 --> 01:38:55,610
audio, video, and text,

2384
01:38:55,610 --> 01:38:58,250
but other kind of
data is also needed,

2385
01:38:58,250 --> 01:39:00,290
like ampathic data,

2386
01:39:00,290 --> 01:39:01,910
temperature,
temperature came from

2387
01:39:01,910 --> 01:39:05,705
the internet of
things, of course.

2388
01:39:05,705 --> 01:39:07,850
But other things
like how do you

2389
01:39:07,850 --> 01:39:10,655
transfer of
digital assets.

2390
01:39:10,655 --> 01:39:12,305
Then we go to
discussion about

2391
01:39:12,305 --> 01:39:14,810
NFTs blockchain, etc.

2392
01:39:14,810 --> 01:39:16,580
But as other things,

2393
01:39:16,580 --> 01:39:18,920
let's say complex need

2394
01:39:18,920 --> 01:39:21,394
to be transferred
like emotions.

2395
01:39:21,394 --> 01:39:23,720
If you really want to

2396
01:39:23,720 --> 01:39:24,800
replicate in

2397
01:39:24,800 --> 01:39:27,155
a virtual world your
physical world,

2398
01:39:27,155 --> 01:39:28,580
it's very important that

2399
01:39:28,580 --> 01:39:30,215
you understand
the other person.

2400
01:39:30,215 --> 01:39:34,040
And there are some
aspects like the problem

2401
01:39:34,040 --> 01:39:36,320
of [inaudible]
People don't

2402
01:39:36,320 --> 01:39:38,150
like to talk with avatars,

2403
01:39:38,150 --> 01:39:40,310
psychological is
the impairment.

2404
01:39:40,310 --> 01:39:42,860
So we need
really to create

2405
01:39:42,860 --> 01:39:44,120
a virtual world that is as

2406
01:39:44,120 --> 01:39:45,485
realistic as possible,

2407
01:39:45,485 --> 01:39:47,150
including, for
instance, having delays

2408
01:39:47,150 --> 01:39:48,965
there not fake delays.

2409
01:39:48,965 --> 01:39:51,260
So all of these are very I

2410
01:39:51,260 --> 01:39:52,670
think might be a challenge

2411
01:39:52,670 --> 01:39:54,320
for the next 15 years.

2412
01:39:54,320 --> 01:39:56,090
I'm not going to
talk for now about

2413
01:39:56,090 --> 01:39:58,205
what Indian can
do about this.

2414
01:39:58,205 --> 01:40:00,665
But just from a
Airbus point of view,

2415
01:40:00,665 --> 01:40:01,970
what we are
looking currently,

2416
01:40:01,970 --> 01:40:05,675
it's like in a two-log
step progress.

2417
01:40:05,675 --> 01:40:07,340
One, like I said,
in the next

2418
01:40:07,340 --> 01:40:09,095
maybe five years
where you can

2419
01:40:09,095 --> 01:40:10,520
actually exploit

2420
01:40:10,520 --> 01:40:12,635
existing tools as
these applications.

2421
01:40:12,635 --> 01:40:13,790
I was not aware about

2422
01:40:13,790 --> 01:40:15,215
the contents
fabric protocol.

2423
01:40:15,215 --> 01:40:17,690
I will read the white
paper very carefully

2424
01:40:17,690 --> 01:40:21,095
over the weekend for sure.

2425
01:40:21,095 --> 01:40:23,180
But we are trying to
figure out how can we

2426
01:40:23,180 --> 01:40:24,320
improve the use of these

2427
01:40:24,320 --> 01:40:25,655
three-dimensional spaces,

2428
01:40:25,655 --> 01:40:27,965
like the sense
of immersion,

2429
01:40:27,965 --> 01:40:30,365
the real-time interactive

2430
01:40:30,365 --> 01:40:33,214
in this single
environment.

2431
01:40:33,214 --> 01:40:34,640
But on long term,

2432
01:40:34,640 --> 01:40:36,455
we need to understand
how, for instance,

2433
01:40:36,455 --> 01:40:38,525
someone in the virtual
environment can

2434
01:40:38,525 --> 01:40:41,975
control a physical
equipment like a robot.

2435
01:40:41,975 --> 01:40:43,400
Currently, we can do

2436
01:40:43,400 --> 01:40:45,620
remote control of robots
over the internet,

2437
01:40:45,620 --> 01:40:47,825
but it's not
very immersive.

2438
01:40:47,825 --> 01:40:49,700
We lack lots
of information

2439
01:40:49,700 --> 01:40:50,990
from what the robot is.

2440
01:40:50,990 --> 01:40:52,550
We have video,
we have sound,

2441
01:40:52,550 --> 01:40:54,950
but we don't have the
three-dimensional view

2442
01:40:54,950 --> 01:40:57,050
of what the robot is.

2443
01:40:57,050 --> 01:40:58,520
If the robot is outdoors,

2444
01:40:58,520 --> 01:40:59,570
we don't have the idea

2445
01:40:59,570 --> 01:41:00,770
of the wind, for instance,

2446
01:41:00,770 --> 01:41:02,735
that may be very
important if I

2447
01:41:02,735 --> 01:41:05,570
maneuvering a long
arm, robotic arm.

2448
01:41:05,570 --> 01:41:07,880
So all this kind of
information I'm missing,

2449
01:41:07,880 --> 01:41:09,185
and we need to include it

2450
01:41:09,185 --> 01:41:10,625
on the Metaverse since

2451
01:41:10,625 --> 01:41:14,090
they are not present
on the internet.

2452
01:41:14,090 --> 01:41:17,210
[inaudible] that

2453
01:41:17,210 --> 01:41:19,520
is the problem
of scalability.

2454
01:41:19,520 --> 01:41:23,555
We are playing with
single virtual worlds

2455
01:41:23,555 --> 01:41:25,400
in very simple
application.

2456
01:41:25,400 --> 01:41:26,990
In the future, we need to

2457
01:41:26,990 --> 01:41:30,395
interact thousands
of virtual worlds,

2458
01:41:30,395 --> 01:41:32,270
my family virtual world,

2459
01:41:32,270 --> 01:41:34,190
my work virtual world,

2460
01:41:34,190 --> 01:41:37,130
my friends, other
virtual worlds.

2461
01:41:37,130 --> 01:41:38,240
How can we do that,

2462
01:41:38,240 --> 01:41:40,430
if each virtual world

2463
01:41:40,430 --> 01:41:43,190
is like a completely
protocol stay?

2464
01:41:43,190 --> 01:41:47,315
So if we need to
standardize it.

2465
01:41:47,315 --> 01:41:49,475
There are lots
of needs for

2466
01:41:49,475 --> 01:41:51,035
standardizing how

2467
01:41:51,035 --> 01:41:52,550
disinformation
is transported.

2468
01:41:52,550 --> 01:41:53,885
What kind of information?

2469
01:41:53,885 --> 01:41:54,500
Like I said, there are

2470
01:41:54,500 --> 01:41:56,855
some pieces of
data that are

2471
01:41:56,855 --> 01:42:01,670
actually not, let's
say, captured.

2472
01:42:01,670 --> 01:42:03,290
We don't have
a way like we

2473
01:42:03,290 --> 01:42:04,745
do with voice to know

2474
01:42:04,745 --> 01:42:07,550
how to format voice
and to transport it.

2475
01:42:07,550 --> 01:42:08,840
We don't have that
for other kinds

2476
01:42:08,840 --> 01:42:10,860
of data that are needed.

2477
01:42:11,560 --> 01:42:14,030
That I think that's it

2478
01:42:14,030 --> 01:42:15,440
from Airbus point of view,

2479
01:42:15,440 --> 01:42:17,180
I can give you a hint
what we are already

2480
01:42:17,180 --> 01:42:19,370
doing and what we
are looking at.

2481
01:42:19,370 --> 01:42:21,140
Currently, we are
already looking

2482
01:42:21,140 --> 01:42:23,135
at what we call
industrial metaphors,

2483
01:42:23,135 --> 01:42:24,950
where we have
digital twins.

2484
01:42:24,950 --> 01:42:26,510
The famous Digital Twin,

2485
01:42:26,510 --> 01:42:28,655
for instance, of
aircraft construction.

2486
01:42:28,655 --> 01:42:30,140
If you see we have

2487
01:42:30,140 --> 01:42:35,000
the manufacturer
facility of the a350 is

2488
01:42:35,000 --> 01:42:37,670
already completely
modeled on

2489
01:42:37,670 --> 01:42:39,710
the virtual world that

2490
01:42:39,710 --> 01:42:41,405
is used for people
to interact,

2491
01:42:41,405 --> 01:42:42,755
to solve problems

2492
01:42:42,755 --> 01:42:44,870
related with the
construction.

2493
01:42:44,870 --> 01:42:47,280
We are also using the,

2494
01:42:47,280 --> 01:42:49,030
I'm not sure if
I should call

2495
01:42:49,030 --> 01:42:50,920
it currently the
Metaverse but

2496
01:42:50,920 --> 01:42:53,125
virtual reality

2497
01:42:53,125 --> 01:42:57,040
experience for people
to collaborate.

2498
01:42:57,040 --> 01:42:59,905
We are trying to
interact with

2499
01:42:59,905 --> 01:43:03,860
some physical devices and

2500
01:43:03,860 --> 01:43:05,240
we are a little worried

2501
01:43:05,240 --> 01:43:06,650
about scalability of this.

2502
01:43:06,650 --> 01:43:08,600
If we are looking more at

2503
01:43:08,600 --> 01:43:12,184
the business part of
handling customers.

2504
01:43:12,184 --> 01:43:15,230
That's a very
important issue.

2505
01:43:15,230 --> 01:43:18,140
>> Thanks Paulo.
We can talk

2506
01:43:18,140 --> 01:43:20,990
a bit more of the
challenges in a bit.

2507
01:43:20,990 --> 01:43:24,395
But what I heard
from you so far is

2508
01:43:24,395 --> 01:43:26,450
that so you're looking at

2509
01:43:26,450 --> 01:43:28,355
different use cases like

2510
01:43:28,355 --> 01:43:29,645
passenger entertainment,

2511
01:43:29,645 --> 01:43:32,929
but also production
due to twin distance

2512
01:43:32,929 --> 01:43:37,800
and basically
virtual meetings.

2513
01:43:38,980 --> 01:43:41,930
For the four-vector, the

2514
01:43:41,930 --> 01:43:44,855
in-flight entertainment,
let's say.

2515
01:43:44,855 --> 01:43:50,630
What I heard is that
you're interested in

2516
01:43:50,630 --> 01:43:55,180
these challenging
requirements regarding

2517
01:43:55,180 --> 01:43:57,940
bandwidth and low latency,

2518
01:43:57,940 --> 01:44:00,940
especially in an even more

2519
01:44:00,940 --> 01:44:02,650
challenged network
environment

2520
01:44:02,650 --> 01:44:03,820
where connectivity

2521
01:44:03,820 --> 01:44:05,990
is maybe not so easy

2522
01:44:05,990 --> 01:44:10,980
to achieve. That correct?

2523
01:44:11,020 --> 01:44:13,385
>> Yeah, that's correct.

2524
01:44:13,385 --> 01:44:16,325
That for us is
mainly impairment.

2525
01:44:16,325 --> 01:44:17,900
So for us Metaverse is

2526
01:44:17,900 --> 01:44:19,370
not just a flying
experience,

2527
01:44:19,370 --> 01:44:21,020
it's a door-to-door
experience

2528
01:44:21,020 --> 01:44:22,250
where flight design is

2529
01:44:22,250 --> 01:44:26,120
just a small
step in the way.

2530
01:44:26,120 --> 01:44:30,230
But yes. People start

2531
01:44:30,230 --> 01:44:31,625
to think about the mobile

2532
01:44:31,625 --> 01:44:33,830
Internet long time ago,

2533
01:44:33,830 --> 01:44:35,510
that people said,
we should have

2534
01:44:35,510 --> 01:44:37,610
the same experience
door-to-door,

2535
01:44:37,610 --> 01:44:40,385
even when we are inside
cars or outside cars,

2536
01:44:40,385 --> 01:44:42,395
for the Metaverse should
be the same thing.

2537
01:44:42,395 --> 01:44:44,510
And inside the aircraft is

2538
01:44:44,510 --> 01:44:46,490
difficult to access
Internet properly,

2539
01:44:46,490 --> 01:44:48,410
so the Metaverse
is like them,

2540
01:44:48,410 --> 01:44:50,555
will be ten
times difficult.

2541
01:44:50,555 --> 01:44:52,655
So that connectivity,

2542
01:44:52,655 --> 01:44:54,635
a very simple
connectivity problem

2543
01:44:54,635 --> 01:44:55,880
is one of

2544
01:44:55,880 --> 01:44:58,980
the first one that
needs to be solved.

2545
01:45:01,180 --> 01:45:03,570
>> Okay.

2546
01:45:04,480 --> 01:45:11,570
>> So let's have a
bit of a discussion.

2547
01:45:11,570 --> 01:45:17,450
So one perspective
from this it's

2548
01:45:17,450 --> 01:45:22,235
largely industrial
airplane production

2549
01:45:22,235 --> 01:45:24,810
but also consumer,
the end perspective.

2550
01:45:25,240 --> 01:45:28,025
What do other
people think?

2551
01:45:28,025 --> 01:45:31,055
What are
additional special

2552
01:45:31,055 --> 01:45:33,540
properties or
interesting properties?

2553
01:45:34,030 --> 01:45:36,605
>> I wrote down
a few points

2554
01:45:36,605 --> 01:45:38,210
as Paulo was talking,

2555
01:45:38,210 --> 01:45:42,990
which I think built on
what he was saying.

2556
01:45:42,990 --> 01:45:46,930
I think this whole
problem space of

2557
01:45:46,930 --> 01:45:49,525
interoperability and
availability everywhere

2558
01:45:49,525 --> 01:45:51,855
comes down to
content composition,

2559
01:45:51,855 --> 01:45:54,395
which implies many
other things.

2560
01:45:54,395 --> 01:45:57,005
But underneath that,

2561
01:45:57,005 --> 01:45:59,570
what I mean by content
composition is that it

2562
01:45:59,570 --> 01:46:01,040
becomes possible in

2563
01:46:01,040 --> 01:46:03,860
a scalable and large-scale

2564
01:46:03,860 --> 01:46:06,125
interoperable way
to be able to

2565
01:46:06,125 --> 01:46:10,475
create interactive
content derivatives

2566
01:46:10,475 --> 01:46:14,190
and to do that in the
network, basically.

2567
01:46:14,350 --> 01:46:18,260
This also implies in
the applications.

2568
01:46:18,260 --> 01:46:22,580
We are day-to-day
involved in a form of

2569
01:46:22,580 --> 01:46:24,560
what would be
considered Web 3 or

2570
01:46:24,560 --> 01:46:26,750
blockchain-based
metaverse all the time.

2571
01:46:26,750 --> 01:46:29,510
And one of the most
fundamental properties,

2572
01:46:29,510 --> 01:46:31,430
I think to get
this to really

2573
01:46:31,430 --> 01:46:34,190
scale for today's
Internet is ownership.

2574
01:46:34,190 --> 01:46:36,140
And what I mean
by ownership

2575
01:46:36,140 --> 01:46:38,720
is that the
composition, of course,

2576
01:46:38,720 --> 01:46:40,550
needs to relate to

2577
01:46:40,550 --> 01:46:43,700
the user or the owner
that's participating.

2578
01:46:43,700 --> 01:46:45,500
And one of the points
that Paulo made,

2579
01:46:45,500 --> 01:46:47,270
which is so true and

2580
01:46:47,270 --> 01:46:49,250
it's just so far
from the vision of

2581
01:46:49,250 --> 01:46:51,650
what's painted is that
so much of what's

2582
01:46:51,650 --> 01:46:55,280
been done with
metaverses and AR,

2583
01:46:55,280 --> 01:46:58,070
VR experiences is
completely siloed.

2584
01:46:58,070 --> 01:46:59,420
It's not only built on

2585
01:46:59,420 --> 01:47:00,680
a centralized
architecture,

2586
01:47:00,680 --> 01:47:03,635
it's an entirely
traditional stack,

2587
01:47:03,635 --> 01:47:07,490
and what is done in one
environment isn't in

2588
01:47:07,490 --> 01:47:12,290
any way orderbly
ownable or re-usable,

2589
01:47:12,290 --> 01:47:13,550
experienceable by

2590
01:47:13,550 --> 01:47:16,280
the owning user
anywhere else.

2591
01:47:16,280 --> 01:47:19,340
There are some
small attempts,

2592
01:47:19,340 --> 01:47:21,290
frankly, on the
commercial side,

2593
01:47:21,290 --> 01:47:22,625
from vendors to have

2594
01:47:22,625 --> 01:47:24,140
digital twins that
are portable,

2595
01:47:24,140 --> 01:47:26,690
but that's not built in
a way that you would

2596
01:47:26,690 --> 01:47:29,105
consider actually

2597
01:47:29,105 --> 01:47:31,550
something you could
architect upon.

2598
01:47:31,550 --> 01:47:34,190
So that brings me
to my third point,

2599
01:47:34,190 --> 01:47:35,690
which is latency
and performance.

2600
01:47:35,690 --> 01:47:37,475
Paulo said this too.

2601
01:47:37,475 --> 01:47:41,030
The way the content
has been handled in

2602
01:47:41,030 --> 01:47:43,010
more traditional
streaming in

2603
01:47:43,010 --> 01:47:44,930
the last 20 years
is just way

2604
01:47:44,930 --> 01:47:47,300
too unperforming for
what needs to happen.

2605
01:47:47,300 --> 01:47:49,460
And what I think for us,

2606
01:47:49,460 --> 01:47:51,900
we're a networking
community.

2607
01:47:52,030 --> 01:47:54,950
I got a little one
here. Thank you.

2608
01:47:54,950 --> 01:47:58,040
One of the missing
pieces and

2609
01:47:58,040 --> 01:47:59,690
the discussion is not

2610
01:47:59,690 --> 01:48:01,820
just the throughput
over the network,

2611
01:48:01,820 --> 01:48:03,080
the way we treat
the network,

2612
01:48:03,080 --> 01:48:05,120
but the interaction
with the IO.

2613
01:48:05,120 --> 01:48:08,480
And one of the
huge problems

2614
01:48:08,480 --> 01:48:09,770
of the way most of

2615
01:48:09,770 --> 01:48:12,095
the real-time
content flows work

2616
01:48:12,095 --> 01:48:15,725
in cloud CDN space,

2617
01:48:15,725 --> 01:48:17,120
if you want to
call it that,

2618
01:48:17,120 --> 01:48:21,140
is the stop off points
between file IO,

2619
01:48:21,140 --> 01:48:22,475
transport over
the network,

2620
01:48:22,475 --> 01:48:24,860
generation, transcoding
and output.

2621
01:48:24,860 --> 01:48:27,665
And then also the
nature of the IO.

2622
01:48:27,665 --> 01:48:29,150
If you really
get down to it,

2623
01:48:29,150 --> 01:48:30,500
maybe this is
because I spent

2624
01:48:30,500 --> 01:48:32,390
years with high-speed
file transfer.

2625
01:48:32,390 --> 01:48:33,920
The biggest problem of all

2626
01:48:33,920 --> 01:48:35,480
is the IO architecture

2627
01:48:35,480 --> 01:48:36,770
and especially as we get

2628
01:48:36,770 --> 01:48:38,735
into cloud-based
storage systems,

2629
01:48:38,735 --> 01:48:40,535
those are just
not conducive

2630
01:48:40,535 --> 01:48:44,450
to large forum content,

2631
01:48:44,450 --> 01:48:47,045
high-throughput IO
for many reasons

2632
01:48:47,045 --> 01:48:48,680
and that no matter how

2633
01:48:48,680 --> 01:48:50,420
good we get the
network portion,

2634
01:48:50,420 --> 01:48:51,680
without addressing that

2635
01:48:51,680 --> 01:48:53,390
directly into
the protocol,

2636
01:48:53,390 --> 01:48:54,410
you're stuck with

2637
01:48:54,410 --> 01:48:57,650
a certain latency
performance envelope.

2638
01:48:57,650 --> 01:48:59,600
The next point I
wrote down was

2639
01:48:59,600 --> 01:49:01,325
metadata and
Paulo said this,

2640
01:49:01,325 --> 01:49:02,570
this is spot on that

2641
01:49:02,570 --> 01:49:04,340
compositionality
needs to have

2642
01:49:04,340 --> 01:49:06,800
data along with it to be

2643
01:49:06,800 --> 01:49:09,290
able to, again,
manifest experience.

2644
01:49:09,290 --> 01:49:12,350
Because what
people think of as

2645
01:49:12,350 --> 01:49:14,330
metaverse application
goes straight

2646
01:49:14,330 --> 01:49:15,635
up to the end user.

2647
01:49:15,635 --> 01:49:19,820
And one of the core
principles that we

2648
01:49:19,820 --> 01:49:21,770
really believe
in and think

2649
01:49:21,770 --> 01:49:22,940
needs to be part of

2650
01:49:22,940 --> 01:49:24,230
the application protocol,

2651
01:49:24,230 --> 01:49:27,560
full stack is the
metadata about

2652
01:49:27,560 --> 01:49:31,475
the content is inherently
part of what it is.

2653
01:49:31,475 --> 01:49:34,070
And that metadata can then

2654
01:49:34,070 --> 01:49:36,965
be composed upon in
that first point.

2655
01:49:36,965 --> 01:49:39,260
Next is user experience.

2656
01:49:39,260 --> 01:49:40,280
And I want to stress this,

2657
01:49:40,280 --> 01:49:41,255
Paulo said it too.

2658
01:49:41,255 --> 01:49:42,380
I really want to speak to

2659
01:49:42,380 --> 01:49:44,270
this in the
overall context,

2660
01:49:44,270 --> 01:49:45,740
not just the
performance and

2661
01:49:45,740 --> 01:49:47,450
availability of
the environment,

2662
01:49:47,450 --> 01:49:48,440
but ownership.

2663
01:49:48,440 --> 01:49:50,120
One of the great downfalls

2664
01:49:50,120 --> 01:49:51,710
in crypto and blockchain

2665
01:49:51,710 --> 01:49:53,330
into this is
most traditional

2666
01:49:53,330 --> 01:49:55,415
blockchain is terrible
user experience,

2667
01:49:55,415 --> 01:49:57,650
meaning that, first

2668
01:49:57,650 --> 01:49:59,180
of all, it's
very immature.

2669
01:49:59,180 --> 01:50:00,530
We all know
what that means

2670
01:50:00,530 --> 01:50:01,670
in Internet systems,

2671
01:50:01,670 --> 01:50:03,080
it just takes
awhile for all the

2672
01:50:03,080 --> 01:50:04,820
pieces and parts to
work well enough.

2673
01:50:04,820 --> 01:50:06,770
But there's a bigger,

2674
01:50:06,770 --> 01:50:08,720
more fundamental
point which

2675
01:50:08,720 --> 01:50:13,100
is if you talk to the
blockchain community,

2676
01:50:13,100 --> 01:50:14,900
same group like this

2677
01:50:14,900 --> 01:50:16,160
but over in the
blockchain community,

2678
01:50:16,160 --> 01:50:18,665
there would be no
thought whatsoever to

2679
01:50:18,665 --> 01:50:21,590
the needs of the content.

2680
01:50:21,590 --> 01:50:24,605
The blockchain community
thinks exclusively

2681
01:50:24,605 --> 01:50:27,605
about codifying
ownership onto a chain,

2682
01:50:27,605 --> 01:50:29,120
having a way to sign for

2683
01:50:29,120 --> 01:50:31,430
that on behalf
of the user,

2684
01:50:31,430 --> 01:50:33,350
but there's no
native connection

2685
01:50:33,350 --> 01:50:34,880
back to the
content itself,

2686
01:50:34,880 --> 01:50:37,430
its provenance,
its version, etc.

2687
01:50:37,430 --> 01:50:40,280
And we feel those
two things are

2688
01:50:40,280 --> 01:50:42,380
inherently linked
in order to

2689
01:50:42,380 --> 01:50:44,660
build these new
experiences.

2690
01:50:44,660 --> 01:50:46,880
And then my last
point is cost.

2691
01:50:46,880 --> 01:50:49,940
The most limiting factor

2692
01:50:49,940 --> 01:50:52,685
of all the choices of
the last 20 years of

2693
01:50:52,685 --> 01:50:54,080
CDNs and clouds for

2694
01:50:54,080 --> 01:50:55,880
large firm interactive
content is

2695
01:50:55,880 --> 01:50:57,710
it is incredibly expensive

2696
01:50:57,710 --> 01:50:59,225
to invest in and produce.

2697
01:50:59,225 --> 01:51:01,280
I want to give
you all a fact

2698
01:51:01,280 --> 01:51:02,810
from just last week,

2699
01:51:02,810 --> 01:51:06,050
I spoke at the Hollywood
Post Alliance.

2700
01:51:06,050 --> 01:51:07,130
I guess they
changed their name

2701
01:51:07,130 --> 01:51:08,450
HPA Tech Retreat,

2702
01:51:08,450 --> 01:51:12,470
right after us and our
talk on this topic

2703
01:51:12,470 --> 01:51:14,810
was the Lord of

2704
01:51:14,810 --> 01:51:16,970
the Rings on Amazon
production panel.

2705
01:51:16,970 --> 01:51:19,250
And that panel
was all cloud,

2706
01:51:19,250 --> 01:51:22,835
all virtual
production utilizing

2707
01:51:22,835 --> 01:51:25,400
what is considered
the state of the art.

2708
01:51:25,400 --> 01:51:28,130
Of course, it's an
Amazon-created work

2709
01:51:28,130 --> 01:51:30,410
so it was able to

2710
01:51:30,410 --> 01:51:33,875
utilize all the
Amazon cloud in full.

2711
01:51:33,875 --> 01:51:35,900
But the end point of
the presentation,

2712
01:51:35,900 --> 01:51:38,300
someone asked, well,
how much did this cost?

2713
01:51:38,300 --> 01:51:40,220
And the person
leading this,

2714
01:51:40,220 --> 01:51:41,660
the executive director in

2715
01:51:41,660 --> 01:51:43,325
charge of all
the technology,

2716
01:51:43,325 --> 01:51:47,480
literally admitted
that the cost

2717
01:51:47,480 --> 01:51:52,170
was out of range for
anything practically.

2718
01:51:52,270 --> 01:51:55,250
So one last thing
I want to say

2719
01:51:55,250 --> 01:51:58,130
that goes back to
the roots of Indian.

2720
01:51:58,130 --> 01:52:01,220
Again, because I'm quite

2721
01:52:01,220 --> 01:52:02,690
commercially
minded these days.

2722
01:52:02,690 --> 01:52:05,570
I don't know how directly
relevant this is,

2723
01:52:05,570 --> 01:52:07,640
but the original papers on

2724
01:52:07,640 --> 01:52:10,565
content native
routing in design.

2725
01:52:10,565 --> 01:52:12,020
In the first
talk I heard on

2726
01:52:12,020 --> 01:52:14,000
this from Van Jacobson,

2727
01:52:14,000 --> 01:52:16,160
one of the most
important principles

2728
01:52:16,160 --> 01:52:17,720
was to suck the

2729
01:52:17,720 --> 01:52:21,050
redundant graphic off of

2730
01:52:21,050 --> 01:52:22,610
the back plane
of the Internet.

2731
01:52:22,610 --> 01:52:26,059
And if you do that
through the full stack,

2732
01:52:26,059 --> 01:52:29,210
it starts to
really pull in

2733
01:52:29,210 --> 01:52:33,260
the resource usage at a
truly scalable level,

2734
01:52:33,260 --> 01:52:34,910
not just over the network,

2735
01:52:34,910 --> 01:52:36,170
but in the storage and in

2736
01:52:36,170 --> 01:52:37,970
the compute it's
used and whatnot

2737
01:52:37,970 --> 01:52:39,140
and I think that's

2738
01:52:39,140 --> 01:52:41,840
a great opportunity
for sustainability in

2739
01:52:41,840 --> 01:52:43,250
this and to take

2740
01:52:43,250 --> 01:52:46,985
the cost way down.
My thoughts.

2741
01:52:46,985 --> 01:52:50,580
>> Thanks, [inaudible]
many good points.

2742
01:52:50,620 --> 01:52:52,730
Is there any
immediate reaction?

2743
01:52:52,730 --> 01:52:56,640
So let's make this more
into a discussion.

2744
01:53:00,040 --> 01:53:02,375
>> I'll make a
quick comment that

2745
01:53:02,375 --> 01:53:04,940
the WDV experienced
actually embeds

2746
01:53:04,940 --> 01:53:07,610
AR objects into the sale

2747
01:53:07,610 --> 01:53:09,440
of their Lord of the
Rings experience.

2748
01:53:09,440 --> 01:53:10,640
And what's wonderful about

2749
01:53:10,640 --> 01:53:11,600
that is first of all,

2750
01:53:11,600 --> 01:53:14,630
it's encrypted such that

2751
01:53:14,630 --> 01:53:16,865
you don't have
issues with people.

2752
01:53:16,865 --> 01:53:18,980
The ownership question
is handled again,

2753
01:53:18,980 --> 01:53:20,000
blockchain people
care a lot

2754
01:53:20,000 --> 01:53:20,960
about that and just

2755
01:53:20,960 --> 01:53:22,580
wonderful being
that networking

2756
01:53:22,580 --> 01:53:23,675
needs to deal
with that too,

2757
01:53:23,675 --> 01:53:25,295
your data needs to be

2758
01:53:25,295 --> 01:53:27,380
routable even if
it's encrypted.

2759
01:53:27,380 --> 01:53:29,120
The second piece that's
needed about that is,

2760
01:53:29,120 --> 01:53:30,920
is once you own
that content,

2761
01:53:30,920 --> 01:53:32,060
you can incorporate it

2762
01:53:32,060 --> 01:53:33,050
anywhere you
want if that's

2763
01:53:33,050 --> 01:53:37,235
an open AR standard object

2764
01:53:37,235 --> 01:53:38,870
you can just
get to use it.

2765
01:53:38,870 --> 01:53:40,490
So it's very
important that

2766
01:53:40,490 --> 01:53:41,870
these elements are getting

2767
01:53:41,870 --> 01:53:45,810
used not only the community
but commercially.

2768
01:53:48,520 --> 01:53:51,080
>> Maybe add to that also,

2769
01:53:51,080 --> 01:53:52,430
one of the things
Todd and I

2770
01:53:52,430 --> 01:53:54,290
deal with on a daily basis

2771
01:53:54,290 --> 01:53:57,860
is decentralized ownership
for real I mean,

2772
01:53:57,860 --> 01:54:00,620
right now we're
deep in involved in

2773
01:54:00,620 --> 01:54:02,930
on-chain contracts
that allow for

2774
01:54:02,930 --> 01:54:05,135
provenance, ownership
in payments,

2775
01:54:05,135 --> 01:54:07,460
splits between
parties that own in

2776
01:54:07,460 --> 01:54:10,100
compositional content
in these environments

2777
01:54:10,100 --> 01:54:11,825
and doing that well,

2778
01:54:11,825 --> 01:54:13,190
I really want to call

2779
01:54:13,190 --> 01:54:14,600
this to the
community because it

2780
01:54:14,600 --> 01:54:15,740
brings out the full

2781
01:54:15,740 --> 01:54:17,090
interdisciplinary nature

2782
01:54:17,090 --> 01:54:18,245
of this problem space.

2783
01:54:18,245 --> 01:54:20,420
Doing that well, in a way

2784
01:54:20,420 --> 01:54:24,140
that really the blockchain

2785
01:54:24,140 --> 01:54:25,190
world you would
say it's truly

2786
01:54:25,190 --> 01:54:26,840
on-chain and also

2787
01:54:26,840 --> 01:54:30,695
doesn't leave exposed
the opportunities for,

2788
01:54:30,695 --> 01:54:33,470
again, centralized
intermediaries to

2789
01:54:33,470 --> 01:54:35,570
control the
economics of that.

2790
01:54:35,570 --> 01:54:36,920
Doing that well is very

2791
01:54:36,920 --> 01:54:39,275
important and very
closely tied to this

2792
01:54:39,275 --> 01:54:40,880
and the reason I want to

2793
01:54:40,880 --> 01:54:42,245
call that out
as I think it's

2794
01:54:42,245 --> 01:54:44,000
fantastic that
this community

2795
01:54:44,000 --> 01:54:45,050
is taking this topic

2796
01:54:45,050 --> 01:54:46,520
on and we hope that those

2797
01:54:46,520 --> 01:54:49,100
of you who are experts in,

2798
01:54:49,100 --> 01:54:51,500
not just the
networking area,

2799
01:54:51,500 --> 01:54:53,390
but interested in
these related problems

2800
01:54:53,390 --> 01:54:55,550
will work on them
because there

2801
01:54:55,550 --> 01:54:57,485
needs to be more rigor

2802
01:54:57,485 --> 01:54:59,360
in the approaches for this

2803
01:54:59,360 --> 01:55:01,940
because there are huge
economic implications

2804
01:55:01,940 --> 01:55:03,725
to what Todd just said.

2805
01:55:03,725 --> 01:55:05,600
Jeff works with a lot of

2806
01:55:05,600 --> 01:55:09,710
the most creative IP,

2807
01:55:09,710 --> 01:55:12,230
and these will
be the new means

2808
01:55:12,230 --> 01:55:14,825
of ownership and
monetization.

2809
01:55:14,825 --> 01:55:16,700
And we have an
opportunity to

2810
01:55:16,700 --> 01:55:18,530
really make this much

2811
01:55:18,530 --> 01:55:20,465
better and much
more democratic

2812
01:55:20,465 --> 01:55:22,430
for the user and
the creator,

2813
01:55:22,430 --> 01:55:24,890
that in the best sense
of the internet.

2814
01:55:24,890 --> 01:55:26,420
But it's only going to

2815
01:55:26,420 --> 01:55:28,460
happen if those
approaches are really

2816
01:55:28,460 --> 01:55:31,820
rigorous and we don't
redo what we've been

2817
01:55:31,820 --> 01:55:34,340
doing with data ownership

2818
01:55:34,340 --> 01:55:36,420
for the last many years.

2819
01:55:37,000 --> 01:55:41,360
>> Let's see how we can
make this rigorous.

2820
01:55:41,360 --> 01:55:43,970
So we talked a little
bit already about

2821
01:55:43,970 --> 01:55:48,485
the second item here so
some requirements and

2822
01:55:48,485 --> 01:55:51,480
gaps and some ideas

2823
01:55:52,780 --> 01:55:55,460
so just let's see
whether there's

2824
01:55:55,460 --> 01:55:57,845
anything else that we
like to talk about.

2825
01:55:57,845 --> 01:56:02,330
As I took some notes and
good points that you

2826
01:56:02,330 --> 01:56:04,220
raised so far that I

2827
01:56:04,220 --> 01:56:07,790
hope to some of those
we can come back later.

2828
01:56:07,790 --> 01:56:11,300
So for now I would say,

2829
01:56:11,300 --> 01:56:13,730
let's move a
little bit forward

2830
01:56:13,730 --> 01:56:15,410
because I think we
touched on many

2831
01:56:15,410 --> 01:56:17,975
of these things already.

2832
01:56:17,975 --> 01:56:22,295
Let's talk a little bit
about the named data,

2833
01:56:22,295 --> 01:56:25,700
say aspect and potential

2834
01:56:25,700 --> 01:56:29,525
and we mentioned it

2835
01:56:29,525 --> 01:56:31,550
like superficially
here and there,

2836
01:56:31,550 --> 01:56:33,380
but I think I would like

2837
01:56:33,380 --> 01:56:36,425
to get more to the point.

2838
01:56:36,425 --> 01:56:38,750
So what role
does it actually

2839
01:56:38,750 --> 01:56:42,110
play in maybe
different layers of

2840
01:56:42,110 --> 01:56:44,390
the system and what is the

2841
01:56:44,390 --> 01:56:46,640
potential and to build

2842
01:56:46,640 --> 01:56:48,840
better systems
in the future.

2843
01:56:49,600 --> 01:56:52,520
So in the perspective of

2844
01:56:52,520 --> 01:56:55,370
the question also we have

2845
01:56:55,370 --> 01:57:00,425
this fundamental
interests data protocol

2846
01:57:00,425 --> 01:57:03,350
but what can we
actually do with it,

2847
01:57:03,350 --> 01:57:05,570
or what should we
be doing with it?

2848
01:57:05,570 --> 01:57:09,635
What type of interaction
maybe useful?

2849
01:57:09,635 --> 01:57:13,700
And maybe we can
come back to

2850
01:57:13,700 --> 01:57:17,600
this decentralized
control for

2851
01:57:17,600 --> 01:57:21,320
real requirement
or suggestion

2852
01:57:21,320 --> 01:57:23,700
that you brought
up earlier.

2853
01:57:24,820 --> 01:57:27,960
So Paulo do we have

2854
01:57:28,420 --> 01:57:32,240
additional ideas on
these questions,

2855
01:57:32,240 --> 01:57:34,920
on Named Data
and Metaverse?

2856
01:57:35,220 --> 01:57:39,350
>> Yeah maybe. I think

2857
01:57:39,350 --> 01:57:40,640
during the discussion to

2858
01:57:40,640 --> 01:57:41,870
know, like you said,

2859
01:57:41,870 --> 01:57:43,745
there was some
glimpse about

2860
01:57:43,745 --> 01:57:47,960
how something like names,

2861
01:57:47,960 --> 01:57:51,290
that system could help

2862
01:57:51,290 --> 01:57:54,275
and I think that the
painting is conceptual,

2863
01:57:54,275 --> 01:57:56,525
the metaverse is
not about host,

2864
01:57:56,525 --> 01:57:58,985
is not about servers,

2865
01:57:58,985 --> 01:58:01,655
is about data objects

2866
01:58:01,655 --> 01:58:05,615
or programs
computing elements.

2867
01:58:05,615 --> 01:58:08,105
So by itself,
conceptually,

2868
01:58:08,105 --> 01:58:10,550
metaverse is really
align with the

2869
01:58:10,550 --> 01:58:12,440
ICM general and named

2870
01:58:12,440 --> 01:58:13,895
data network
in particular.

2871
01:58:13,895 --> 01:58:16,130
From the conceptual
point of view,

2872
01:58:16,130 --> 01:58:18,080
the question is, like,

2873
01:58:18,080 --> 01:58:19,460
I think you mentioned

2874
01:58:19,460 --> 01:58:21,740
their case what
do we do with it?

2875
01:58:21,740 --> 01:58:24,380
We use a traditional way,

2876
01:58:24,380 --> 01:58:25,490
we have a protocol

2877
01:58:25,490 --> 01:58:27,230
stacks within
MDN somewhere

2878
01:58:27,230 --> 01:58:30,110
in layer 3 or above
the transport layer,

2879
01:58:30,110 --> 01:58:31,640
whatever you want to
do it and then we

2880
01:58:31,640 --> 01:58:34,025
have several sets of

2881
01:58:34,025 --> 01:58:36,650
metaverse
applications using

2882
01:58:36,650 --> 01:58:39,080
a traditional SOC

2883
01:58:39,080 --> 01:58:40,850
plays or API that

2884
01:58:40,850 --> 01:58:42,140
will be the
traditional way.

2885
01:58:42,140 --> 01:58:43,040
Not sure if that's

2886
01:58:43,040 --> 01:58:44,825
exactly what
we want to do.

2887
01:58:44,825 --> 01:58:46,280
I can just using

2888
01:58:46,280 --> 01:58:49,100
this picture tell you

2889
01:58:49,100 --> 01:58:51,395
a little what we
are looking at.

2890
01:58:51,395 --> 01:58:53,330
I give you two examples.

2891
01:58:53,330 --> 01:58:54,530
One, for instance,
could be

2892
01:58:54,530 --> 01:58:55,955
leveraging the MDN.

2893
01:58:55,955 --> 01:58:57,590
I think it's more
or less with

2894
01:58:57,590 --> 01:58:59,420
what Michelle
and Todd said,

2895
01:58:59,420 --> 01:59:01,115
maybe we find this
loop before is

2896
01:59:01,115 --> 01:59:02,210
leveraged in the MDN for

2897
01:59:02,210 --> 01:59:03,410
the distributed control of

2898
01:59:03,410 --> 01:59:04,880
the metaverse like to

2899
01:59:04,880 --> 01:59:07,520
support distribution
of ledgers and

2900
01:59:07,520 --> 01:59:09,260
because currently
this is very

2901
01:59:09,260 --> 01:59:11,330
poorly done so
blockchain as

2902
01:59:11,330 --> 01:59:13,430
discussive protocols
that don't

2903
01:59:13,430 --> 01:59:15,290
work very properly, etc.

2904
01:59:15,290 --> 01:59:17,510
Maybe you could
use the exploit,

2905
01:59:17,510 --> 01:59:21,020
the native
in-network catching

2906
01:59:21,020 --> 01:59:23,840
and multicast of the
MDN actually to do

2907
01:59:23,840 --> 01:59:27,335
a better service in

2908
01:59:27,335 --> 01:59:29,630
distributing
these ledgers and

2909
01:59:29,630 --> 01:59:31,025
to keep them updated.

2910
01:59:31,025 --> 01:59:32,330
And that's something that

2911
01:59:32,330 --> 01:59:33,950
the MDN was built for,

2912
01:59:33,950 --> 01:59:36,080
not for the ledgers
but for data objects

2913
01:59:36,080 --> 01:59:38,930
and that could be quite
interesting to have.

2914
01:59:38,930 --> 01:59:41,270
And that will be a
central piece for

2915
01:59:41,270 --> 01:59:42,350
the metaverse because we

2916
01:59:42,350 --> 01:59:43,655
need to control ownership,

2917
01:59:43,655 --> 01:59:45,185
we need control assets

2918
01:59:45,185 --> 01:59:47,149
that actually needs
to be transported

2919
01:59:47,149 --> 01:59:48,980
from three-dimensional
world to

2920
01:59:48,980 --> 01:59:51,215
another three-dimensional
world where

2921
01:59:51,215 --> 01:59:54,485
people want to move
and roam between them.

2922
01:59:54,485 --> 01:59:56,240
The other aspect
that is more

2923
01:59:56,240 --> 01:59:58,550
correlated with
the picture or

2924
01:59:58,550 --> 02:00:01,340
the slide is
something that I

2925
02:00:01,340 --> 02:00:05,130
mentioned before about
our Airbus scenario.

2926
02:00:06,310 --> 02:00:11,030
I think IT after some
RFCs that mission

2927
02:00:11,030 --> 02:00:15,620
they talked about
limited to it.

2928
02:00:15,620 --> 02:00:17,510
That's what Airbus
leads for we have

2929
02:00:17,510 --> 02:00:20,075
the aeronautics to mind,
the satellite one.

2930
02:00:20,075 --> 02:00:22,145
All of them are not

2931
02:00:22,145 --> 02:00:23,810
core networks
on the internet

2932
02:00:23,810 --> 02:00:26,510
and all of them specific

2933
02:00:26,510 --> 02:00:28,220
properties and problems.

2934
02:00:28,220 --> 02:00:32,270
And one of them is
constrained resources.

2935
02:00:32,270 --> 02:00:35,690
I can put a nice server
inside the aircraft.

2936
02:00:35,690 --> 02:00:36,800
No problem about that,

2937
02:00:36,800 --> 02:00:39,665
but the server will be
very fast connected.

2938
02:00:39,665 --> 02:00:41,420
I cannot put the same

2939
02:00:41,420 --> 02:00:42,725
server inside
the satellite,

2940
02:00:42,725 --> 02:00:44,360
will be much constraint

2941
02:00:44,360 --> 02:00:45,995
the power that will be

2942
02:00:45,995 --> 02:00:48,740
somehow nicely
connected if

2943
02:00:48,740 --> 02:00:49,940
we have free-space optical

2944
02:00:49,940 --> 02:00:51,635
links to the ground, etc.

2945
02:00:51,635 --> 02:00:53,660
So there is some
nitrogenase scenarios

2946
02:00:53,660 --> 02:00:55,565
that return figure
out what to use them.

2947
02:00:55,565 --> 02:00:57,680
And what the picture
tried to illustrate is

2948
02:00:57,680 --> 02:00:59,660
that what we're looking

2949
02:00:59,660 --> 02:01:01,730
at is a scenario that
is not homogeneous,

2950
02:01:01,730 --> 02:01:04,160
will not have a
metaverse application.

2951
02:01:04,160 --> 02:01:05,180
Let's say a
three-dimensional

2952
02:01:05,180 --> 02:01:06,230
world being processed on

2953
02:01:06,230 --> 02:01:08,315
the cloud with everything,

2954
02:01:08,315 --> 02:01:11,285
the rendering of the
3D world itself,

2955
02:01:11,285 --> 02:01:13,235
the creation
of the avatars

2956
02:01:13,235 --> 02:01:15,680
in real time or not,

2957
02:01:15,680 --> 02:01:17,960
the inclusion
of autonomous

2958
02:01:17,960 --> 02:01:19,685
avatars in the future.

2959
02:01:19,685 --> 02:01:22,025
All of these will not
happen in our opinion,

2960
02:01:22,025 --> 02:01:24,214
in a centralized
environment.

2961
02:01:24,214 --> 02:01:26,555
Actually because may occur

2962
02:01:26,555 --> 02:01:27,830
over what I have here,

2963
02:01:27,830 --> 02:01:29,945
these Cloud to
seem continue.

2964
02:01:29,945 --> 02:01:32,675
Because we may
have the Cloud,

2965
02:01:32,675 --> 02:01:35,390
the high capacity
Cloud to be used to

2966
02:01:35,390 --> 02:01:39,094
render three-dimensional
worlds of a factory,

2967
02:01:39,094 --> 02:01:41,465
of a party, of a company.

2968
02:01:41,465 --> 02:01:43,865
But then maybe
you towards more

2969
02:01:43,865 --> 02:01:47,630
to where the action
really happens.

2970
02:01:47,630 --> 02:01:48,470
If we look at

2971
02:01:48,470 --> 02:01:50,285
the interaction with
the physical world,

2972
02:01:50,285 --> 02:01:51,545
we may need to do

2973
02:01:51,545 --> 02:01:53,825
computational and
data gathering

2974
02:01:53,825 --> 02:01:55,490
in other places.

2975
02:01:55,490 --> 02:01:59,330
In the case of the
aircraft point of view,

2976
02:01:59,330 --> 02:02:01,520
maybe the passenger
inside the aircraft

2977
02:02:01,520 --> 02:02:03,980
will have access
to the metaverse,

2978
02:02:03,980 --> 02:02:07,100
while lots of processing
that needs to be

2979
02:02:07,100 --> 02:02:10,655
done in short
periods of time.

2980
02:02:10,655 --> 02:02:11,840
It may have
actually happened

2981
02:02:11,840 --> 02:02:13,325
inside the
aircraft itself.

2982
02:02:13,325 --> 02:02:14,780
While other processing may

2983
02:02:14,780 --> 02:02:16,055
happen in the Cloud,

2984
02:02:16,055 --> 02:02:17,780
like the adaptation

2985
02:02:17,780 --> 02:02:19,850
of the three-dimensional
space.

2986
02:02:19,850 --> 02:02:23,479
So how do I connect
all of these elements?

2987
02:02:23,479 --> 02:02:25,220
MDN chemically a role

2988
02:02:25,220 --> 02:02:27,215
diet or the
leveraging MDN.

2989
02:02:27,215 --> 02:02:29,990
What I imply
with this slide,

2990
02:02:29,990 --> 02:02:31,190
leveraging their MDN to

2991
02:02:31,190 --> 02:02:32,975
distribution of services.

2992
02:02:32,975 --> 02:02:35,705
Maybe I've talked
about microservices.

2993
02:02:35,705 --> 02:02:37,610
And just last
but not least,

2994
02:02:37,610 --> 02:02:40,160
Microsoft is very
well aligned with

2995
02:02:40,160 --> 02:02:42,320
blockchain
things like Lucy

2996
02:02:42,320 --> 02:02:43,985
talks about
smart contracts.

2997
02:02:43,985 --> 02:02:47,765
That's a very
nice alignment.

2998
02:02:47,765 --> 02:02:49,130
So there are lots
of things that

2999
02:02:49,130 --> 02:02:50,150
I think alignment,

3000
02:02:50,150 --> 02:02:52,430
we just need to figure
out where do we start

3001
02:02:52,430 --> 02:02:53,540
and maybe people in

3002
02:02:53,540 --> 02:02:55,205
the audience already
start to look at it.

3003
02:02:55,205 --> 02:02:56,690
Technically, I would like

3004
02:02:56,690 --> 02:02:58,980
to really do
hear about that.

3005
02:03:00,810 --> 02:03:03,205
>> Maybe let's hear

3006
02:03:03,205 --> 02:03:07,360
a bit more
application ideas

3007
02:03:07,360 --> 02:03:10,105
on name data for
the Metaverse,

3008
02:03:10,105 --> 02:03:13,630
and then we can
discuss this together.

3009
02:03:13,630 --> 02:03:17,095
So Jeff has some
ideas from it.

3010
02:03:17,095 --> 02:03:18,970
>> Yeah, it looks
like there's

3011
02:03:18,970 --> 02:03:20,125
a typo in this slide.

3012
02:03:20,125 --> 02:03:22,360
Can you go to
the next one?

3013
02:03:22,360 --> 02:03:24,745
It might make sense
to start with that.

3014
02:03:24,745 --> 02:03:27,850
So in thinking about

3015
02:03:27,850 --> 02:03:29,020
this a little bit and

3016
02:03:29,020 --> 02:03:30,775
listening to the
other panelists,

3017
02:03:30,775 --> 02:03:33,460
something that is
interesting from

3018
02:03:33,460 --> 02:03:36,070
the production
standpoint is

3019
02:03:36,070 --> 02:03:39,055
the idea of the
metaverses,

3020
02:03:39,055 --> 02:03:40,330
or let's say

3021
02:03:40,330 --> 02:03:42,670
just the feature
of environment for

3022
02:03:42,670 --> 02:03:44,935
content generation
as being

3023
02:03:44,935 --> 02:03:47,800
essentially a persistent
shared world.

3024
02:03:47,800 --> 02:03:49,120
But if you really

3025
02:03:49,120 --> 02:03:50,800
think about what
that means,

3026
02:03:50,800 --> 02:03:55,780
it's also a shift from
an environment of

3027
02:03:55,780 --> 02:03:58,195
content production
where most of

3028
02:03:58,195 --> 02:04:00,805
our content was offline.

3029
02:04:00,805 --> 02:04:02,755
So if you're
shooting a film,

3030
02:04:02,755 --> 02:04:04,990
you have a large
amount of footage,

3031
02:04:04,990 --> 02:04:06,340
you have all the
things that you've

3032
02:04:06,340 --> 02:04:07,930
done during the
production process,

3033
02:04:07,930 --> 02:04:09,355
all the assets and so on.

3034
02:04:09,355 --> 02:04:10,840
And then at some point,

3035
02:04:10,840 --> 02:04:12,250
you boil it down to
something that's

3036
02:04:12,250 --> 02:04:13,705
distributed and you never

3037
02:04:13,705 --> 02:04:15,070
see those original
assets again,

3038
02:04:15,070 --> 02:04:17,935
or at least not
in a traditional,

3039
02:04:17,935 --> 02:04:19,960
let's say, filmmaking
point of view.

3040
02:04:19,960 --> 02:04:22,000
And the same is true
to some extent in

3041
02:04:22,000 --> 02:04:24,175
3D graphics and other
things as well.

3042
02:04:24,175 --> 02:04:26,830
So we're shifting
from that type of

3043
02:04:26,830 --> 02:04:29,410
environment to a
world where yes,

3044
02:04:29,410 --> 02:04:30,850
maybe it's in
cheaper storage

3045
02:04:30,850 --> 02:04:31,810
or it's further away,

3046
02:04:31,810 --> 02:04:33,790
but you essentially
have the opportunity

3047
02:04:33,790 --> 02:04:36,220
to access and reuse

3048
02:04:36,220 --> 02:04:39,250
content and elements
from throughout

3049
02:04:39,250 --> 02:04:41,125
the production process

3050
02:04:41,125 --> 02:04:42,805
from other productions.

3051
02:04:42,805 --> 02:04:44,725
And I think for

3052
02:04:44,725 --> 02:04:47,395
larger content companies
that are looking at

3053
02:04:47,395 --> 02:04:50,890
the idea of content

3054
02:04:50,890 --> 02:04:52,900
emerging from a
consistent universe,

3055
02:04:52,900 --> 02:04:54,280
or consistent world,

3056
02:04:54,280 --> 02:04:56,980
they are able to draw
from assets, of course,

3057
02:04:56,980 --> 02:04:59,650
across that universe
and reuse them and

3058
02:04:59,650 --> 02:05:00,730
that has a really

3059
02:05:00,730 --> 02:05:03,115
interesting set
of analogies

3060
02:05:03,115 --> 02:05:06,985
in the idea of thinking
of making content

3061
02:05:06,985 --> 02:05:11,065
within a metaverse way of

3062
02:05:11,065 --> 02:05:15,010
thinking which is if I
can access any type of

3063
02:05:15,010 --> 02:05:16,990
named content if I have

3064
02:05:16,990 --> 02:05:20,620
an ability to verify
my ability to use it,

3065
02:05:20,620 --> 02:05:22,120
whether it's ownership or

3066
02:05:22,120 --> 02:05:23,440
license or contract,

3067
02:05:23,440 --> 02:05:24,640
however you want
to look at it,

3068
02:05:24,640 --> 02:05:26,200
I can access and reuse

3069
02:05:26,200 --> 02:05:28,000
those elements
at any point.

3070
02:05:28,000 --> 02:05:29,260
And this changes
the way that we

3071
02:05:29,260 --> 02:05:30,985
think about
production models.

3072
02:05:30,985 --> 02:05:33,055
So the idea of an
iterative production

3073
02:05:33,055 --> 02:05:34,240
of something like
an augmented

3074
02:05:34,240 --> 02:05:36,670
reality experience
looks a lot maybe like

3075
02:05:36,670 --> 02:05:37,930
software production
where we're

3076
02:05:37,930 --> 02:05:41,160
starting with
stand-in assets,

3077
02:05:41,160 --> 02:05:42,825
developing interactions,

3078
02:05:42,825 --> 02:05:44,940
changing out the names
that we're using

3079
02:05:44,940 --> 02:05:47,100
to access final assets

3080
02:05:47,100 --> 02:05:49,005
and plug those
things in and so on.

3081
02:05:49,005 --> 02:05:52,020
And so I think this idea
of content creation

3082
02:05:52,020 --> 02:05:54,220
within a network where

3083
02:05:54,220 --> 02:05:56,200
everything is named
and accessible,

3084
02:05:56,200 --> 02:06:00,625
takes on a very
different set of

3085
02:06:00,625 --> 02:06:03,250
authorial and creative
strategies that

3086
02:06:03,250 --> 02:06:04,420
you need first and

3087
02:06:04,420 --> 02:06:06,040
also has a lot of
interesting opportunities.

3088
02:06:06,040 --> 02:06:10,269
So this slide was
related to this idea

3089
02:06:10,269 --> 02:06:13,810
of what are the
opportunities

3090
02:06:13,810 --> 02:06:15,520
specifically for named
data networking and

3091
02:06:15,520 --> 02:06:17,965
thinking about
the metaverse,

3092
02:06:17,965 --> 02:06:21,805
not just as some shared
end-user experience,

3093
02:06:21,805 --> 02:06:24,580
but the environment
in which we

3094
02:06:24,580 --> 02:06:27,460
might be authoring
content and creating.

3095
02:06:27,460 --> 02:06:31,570
So one person's metaverse
behind the scenes

3096
02:06:31,570 --> 02:06:33,070
business application

3097
02:06:33,070 --> 02:06:36,250
is another person's
content experience

3098
02:06:36,250 --> 02:06:38,935
as an end-user with a
flip of the switch.

3099
02:06:38,935 --> 02:06:41,590
And most of the elements

3100
02:06:41,590 --> 02:06:44,230
that make up 3D graphics,

3101
02:06:44,230 --> 02:06:47,605
the analysis of 2D images,

3102
02:06:47,605 --> 02:06:50,770
the interoperable
content formats that

3103
02:06:50,770 --> 02:06:53,650
people are considering
for shared 3D worlds,

3104
02:06:53,650 --> 02:06:55,780
all use hierarchical
name data

3105
02:06:55,780 --> 02:06:57,070
in one form or another,

3106
02:06:57,070 --> 02:06:58,510
whether it's a
scene graph that

3107
02:06:58,510 --> 02:07:01,135
describes a 3D
environment.

3108
02:07:01,135 --> 02:07:03,115
We're seeing graph
that's generated by

3109
02:07:03,115 --> 02:07:06,370
analysis of a 2D
scene and then

3110
02:07:06,370 --> 02:07:09,070
using new machine learning

3111
02:07:09,070 --> 02:07:12,445
techniques to manipulate
those 2D images.

3112
02:07:12,445 --> 02:07:14,860
There's many opportunities

3113
02:07:14,860 --> 02:07:15,940
I think for us to look

3114
02:07:15,940 --> 02:07:17,830
at how content is

3115
02:07:17,830 --> 02:07:20,395
already named or
will be named soon,

3116
02:07:20,395 --> 02:07:22,030
and how that allows

3117
02:07:22,030 --> 02:07:23,710
a very granular way

3118
02:07:23,710 --> 02:07:25,390
of accessing and
manipulating

3119
02:07:25,390 --> 02:07:29,245
content and allows
the persistence

3120
02:07:29,245 --> 02:07:32,995
of elements from
previous versions,

3121
02:07:32,995 --> 02:07:34,510
and the intermixing
of versions.

3122
02:07:34,510 --> 02:07:36,040
I think this actually
comes up a little bit

3123
02:07:36,040 --> 02:07:38,005
in the Alivio white paper,

3124
02:07:38,005 --> 02:07:39,190
moving from Version 1 to

3125
02:07:39,190 --> 02:07:40,780
Version 2 or
creating updates,

3126
02:07:40,780 --> 02:07:42,295
but also the idea

3127
02:07:42,295 --> 02:07:45,100
that content
is composable,

3128
02:07:45,100 --> 02:07:46,510
and we are often

3129
02:07:46,510 --> 02:07:48,730
thinking of how to
compose that content

3130
02:07:48,730 --> 02:07:49,930
based on hierarchical

3131
02:07:49,930 --> 02:07:51,310
namespaces that map very

3132
02:07:51,310 --> 02:07:53,170
well into a named data way

3133
02:07:53,170 --> 02:07:55,315
of thinking about
these objects.

3134
02:07:55,315 --> 02:07:56,860
And I guess to make

3135
02:07:56,860 --> 02:07:57,655
one connection to

3136
02:07:57,655 --> 02:07:59,395
something that
Michelle said,

3137
02:07:59,395 --> 02:08:01,810
the removal of

3138
02:08:01,810 --> 02:08:04,990
the IO steps or
the simplification

3139
02:08:04,990 --> 02:08:07,900
of how content moves

3140
02:08:07,900 --> 02:08:09,535
from one stage of

3141
02:08:09,535 --> 02:08:11,575
a creative process
to another,

3142
02:08:11,575 --> 02:08:13,630
has an economic impact,

3143
02:08:13,630 --> 02:08:15,160
of course, but

3144
02:08:15,160 --> 02:08:16,825
it also has a
creative impact.

3145
02:08:16,825 --> 02:08:18,670
As soon as you are able to

3146
02:08:18,670 --> 02:08:21,370
name and access
individual elements

3147
02:08:21,370 --> 02:08:23,410
as a developer and

3148
02:08:23,410 --> 02:08:24,730
user creator of content

3149
02:08:24,730 --> 02:08:26,395
in a way that's
much more flexible,

3150
02:08:26,395 --> 02:08:27,040
I think you get

3151
02:08:27,040 --> 02:08:29,530
a completely different
strategy for

3152
02:08:29,530 --> 02:08:31,225
authoring and
creating experiences

3153
02:08:31,225 --> 02:08:32,710
than how we think
about it right now,

3154
02:08:32,710 --> 02:08:34,255
which is author the thing,

3155
02:08:34,255 --> 02:08:35,860
render it, store
it, retrieve

3156
02:08:35,860 --> 02:08:37,255
it, manipulate it,

3157
02:08:37,255 --> 02:08:39,610
and then lose the
manipulation or

3158
02:08:39,610 --> 02:08:41,110
access to it and
having to deal

3159
02:08:41,110 --> 02:08:42,790
with different systems
at each stage.

3160
02:08:42,790 --> 02:08:44,800
Do go back one slide
and I'll finish

3161
02:08:44,800 --> 02:08:48,590
up quickly just
with this thought.

3162
02:08:48,840 --> 02:08:51,280
Sorry for whatever
happened in

3163
02:08:51,280 --> 02:08:53,725
the transition of
the slides here.

3164
02:08:53,725 --> 02:08:57,190
But there were five
things down here at

3165
02:08:57,190 --> 02:09:00,520
the bottom summarizing
the types of

3166
02:09:00,520 --> 02:09:02,080
things that at
least for me and

3167
02:09:02,080 --> 02:09:04,705
thinking both
about NDN and

3168
02:09:04,705 --> 02:09:06,940
the ways that
it can support

3169
02:09:06,940 --> 02:09:10,945
future types of
creative experiences,

3170
02:09:10,945 --> 02:09:14,395
that we have to deal
with that are not

3171
02:09:14,395 --> 02:09:16,765
really too prominent in

3172
02:09:16,765 --> 02:09:18,385
the community right now,

3173
02:09:18,385 --> 02:09:19,810
are real-time interaction,

3174
02:09:19,810 --> 02:09:21,100
which I think
we alluded to

3175
02:09:21,100 --> 02:09:24,280
already in terms of the
end-user experience.

3176
02:09:24,280 --> 02:09:26,260
Spatial organization
of content is

3177
02:09:26,260 --> 02:09:28,030
a great research
opportunity

3178
02:09:28,030 --> 02:09:29,725
for figuring
out better ways

3179
02:09:29,725 --> 02:09:31,465
to think about
whether it's

3180
02:09:31,465 --> 02:09:34,090
spatial naming things in

3181
02:09:34,090 --> 02:09:36,010
the real world or
spatial naming

3182
02:09:36,010 --> 02:09:39,490
something that's in
a 3D virtual world.

3183
02:09:39,490 --> 02:09:41,950
Managing shared
views that are

3184
02:09:41,950 --> 02:09:44,260
different of individual
experiences.

3185
02:09:44,260 --> 02:09:45,400
Again, I think alluding to

3186
02:09:45,400 --> 02:09:47,110
some things that
other folks

3187
02:09:47,110 --> 02:09:49,090
said and then
ownership and

3188
02:09:49,090 --> 02:09:51,295
actually different
types of identity.

3189
02:09:51,295 --> 02:09:52,930
My identity within,

3190
02:09:52,930 --> 02:09:54,670
and my ability to access,

3191
02:09:54,670 --> 02:09:55,690
pay for, manipulate,

3192
02:09:55,690 --> 02:09:57,970
or use my ownership
of some object,

3193
02:09:57,970 --> 02:10:00,310
is not going to be one
singular identity.

3194
02:10:00,310 --> 02:10:01,390
Of course, it's
going to be built

3195
02:10:01,390 --> 02:10:02,470
on different types

3196
02:10:02,470 --> 02:10:03,475
of roles and identity

3197
02:10:03,475 --> 02:10:04,900
across different systems.

3198
02:10:04,900 --> 02:10:06,160
So these are all
things that I

3199
02:10:06,160 --> 02:10:08,290
think are really
interesting

3200
02:10:08,290 --> 02:10:09,310
research
opportunities from

3201
02:10:09,310 --> 02:10:10,435
a content creation

3202
02:10:10,435 --> 02:10:13,030
and named data
networking standpoint.

3203
02:10:13,030 --> 02:10:15,070
So sorry for the ramble,

3204
02:10:15,070 --> 02:10:16,915
but hopefully helpful.

3205
02:10:16,915 --> 02:10:19,900
>> Thanks, Jeff. And
sorry about the slides.

3206
02:10:19,900 --> 02:10:20,800
I'm not sure what happened

3207
02:10:20,800 --> 02:10:23,030
probably here
something on my side.

3208
02:10:25,380 --> 02:10:28,720
>> I want to challenge
you a little bit on

3209
02:10:28,720 --> 02:10:33,145
this hierarchical
naming idea.

3210
02:10:33,145 --> 02:10:35,050
Of course, many
people would agree

3211
02:10:35,050 --> 02:10:38,785
that from a patient
perspective,

3212
02:10:38,785 --> 02:10:42,700
it's how you structure
your maybe objects,

3213
02:10:42,700 --> 02:10:45,175
and many people do that.

3214
02:10:45,175 --> 02:10:47,170
And solution in the chat

3215
02:10:47,170 --> 02:10:50,845
also supports you and
I think that's a chat.

3216
02:10:50,845 --> 02:10:52,450
The metric namespace sets

3217
02:10:52,450 --> 02:10:55,520
the foundation to
realize that model.

3218
02:10:55,620 --> 02:11:00,790
On the other hand,
some people could ask,

3219
02:11:00,790 --> 02:11:03,970
we understand that
it's useful to have

3220
02:11:03,970 --> 02:11:07,900
this structured
namespace in

3221
02:11:07,900 --> 02:11:10,900
the application space
and maybe also think

3222
02:11:10,900 --> 02:11:13,600
about transformation

3223
02:11:13,600 --> 02:11:15,805
and probability and so on.

3224
02:11:15,805 --> 02:11:19,300
But what does it have
to do with the network?

3225
02:11:19,300 --> 02:11:23,750
What do you gain by

3226
02:11:24,180 --> 02:11:28,345
applying this directly to

3227
02:11:28,345 --> 02:11:31,360
the network layer
communication?

3228
02:11:31,360 --> 02:11:32,920
>> So Derrick, I wanted

3229
02:11:32,920 --> 02:11:34,285
to say something
about this.

3230
02:11:34,285 --> 02:11:37,000
And my answer, of course,

3231
02:11:37,000 --> 02:11:38,590
comes from the perspective

3232
02:11:38,590 --> 02:11:40,390
of the content
fabric protocol,

3233
02:11:40,390 --> 02:11:45,340
but to take it from
that point of view.

3234
02:11:45,340 --> 02:11:50,710
It was our sense
that content

3235
02:11:50,710 --> 02:11:52,840
native addressability for

3236
02:11:52,840 --> 02:11:56,800
composition was
intrinsically important.

3237
02:11:56,800 --> 02:12:00,370
And what I mean by
that is that given

3238
02:12:00,370 --> 02:12:04,255
a basic structure
that's able to,

3239
02:12:04,255 --> 02:12:05,920
let's say compose output,

3240
02:12:05,920 --> 02:12:07,390
which in our view is

3241
02:12:07,390 --> 02:12:09,535
both binary data as
well as metadata,

3242
02:12:09,535 --> 02:12:13,345
as well as self-operating
code, if you will.

3243
02:12:13,345 --> 02:12:14,920
Given that you ought to be

3244
02:12:14,920 --> 02:12:16,480
able to address that

3245
02:12:16,480 --> 02:12:19,630
in a generalizable
way in a network,

3246
02:12:19,630 --> 02:12:21,490
and that really inherits

3247
02:12:21,490 --> 02:12:22,690
directly from the idea

3248
02:12:22,690 --> 02:12:26,620
of content native
routing principles,

3249
02:12:26,620 --> 02:12:28,630
which I think are really

3250
02:12:28,630 --> 02:12:29,980
the progenitor of

3251
02:12:29,980 --> 02:12:32,155
data networking,
if you will.

3252
02:12:32,155 --> 02:12:34,345
Now, in that model though,

3253
02:12:34,345 --> 02:12:37,150
the addressability
really comes from

3254
02:12:37,150 --> 02:12:39,040
a more generic notion

3255
02:12:39,040 --> 02:12:42,820
of the bytes themselves,

3256
02:12:42,820 --> 02:12:44,365
the hash, if you will.

3257
02:12:44,365 --> 02:12:46,330
And the routeability layer

3258
02:12:46,330 --> 02:12:48,280
is based exclusively

3259
02:12:48,280 --> 02:12:53,259
upon a namespace derived

3260
02:12:53,259 --> 02:12:56,720
from the content hashes.

3261
02:12:57,450 --> 02:13:00,010
Where I'm going
with this is above

3262
02:13:00,010 --> 02:13:02,285
that at the application
layer, there is,

3263
02:13:02,285 --> 02:13:05,310
in practical
terms, is one of

3264
02:13:05,310 --> 02:13:07,050
the most fundamental
features

3265
02:13:07,050 --> 02:13:08,190
of the fabric protocol.

3266
02:13:08,190 --> 02:13:09,990
Above that is the need for

3267
02:13:09,990 --> 02:13:13,000
the application to
be able to create

3268
02:13:13,000 --> 02:13:15,850
its own graph
structures on

3269
02:13:15,850 --> 02:13:19,405
top of that lowest
layer of routing logic,

3270
02:13:19,405 --> 02:13:23,215
which it works off of
the hash at the parts.

3271
02:13:23,215 --> 02:13:26,410
And that graph structure
needs to, number 1,

3272
02:13:26,410 --> 02:13:28,330
to Jeff's point, be

3273
02:13:28,330 --> 02:13:31,615
independent of the
specific application.

3274
02:13:31,615 --> 02:13:33,880
So the specific namespace.

3275
02:13:33,880 --> 02:13:35,440
The second thing about it

3276
02:13:35,440 --> 02:13:37,030
is that graph structure

3277
02:13:37,030 --> 02:13:40,645
needs to be able
to, if you will,

3278
02:13:40,645 --> 02:13:42,910
overlay logically
on top of

3279
02:13:42,910 --> 02:13:45,010
the underlying
routing so that it's

3280
02:13:45,010 --> 02:13:48,190
possible for if you will,

3281
02:13:48,190 --> 02:13:51,700
application namespace,
or hierarchy to be

3282
02:13:51,700 --> 02:13:53,050
able to then be

3283
02:13:53,050 --> 02:13:55,630
resolved directly
to the parts.

3284
02:13:55,630 --> 02:13:58,990
And the content
fabric protocol takes

3285
02:13:58,990 --> 02:14:02,260
a specific approach
to this through

3286
02:14:02,260 --> 02:14:04,510
the management of metadata

3287
02:14:04,510 --> 02:14:07,210
and the ability
to create links

3288
02:14:07,210 --> 02:14:09,820
between content
objects based

3289
02:14:09,820 --> 02:14:13,810
on how that metadata
works in the protocol.

3290
02:14:13,810 --> 02:14:15,520
The reason I'm
saying all this

3291
02:14:15,520 --> 02:14:17,980
because I think it's
a design primitive.

3292
02:14:17,980 --> 02:14:20,755
The design primitive
ought to be that.

3293
02:14:20,755 --> 02:14:22,510
Number 1, there is a

3294
02:14:22,510 --> 02:14:24,850
requirement,
like Jeff said,

3295
02:14:24,850 --> 02:14:26,380
that applications be able

3296
02:14:26,380 --> 02:14:29,154
to address content through

3297
02:14:29,154 --> 02:14:33,850
a naming structure that is

3298
02:14:33,850 --> 02:14:36,025
under the control
of the application

3299
02:14:36,025 --> 02:14:38,500
and is directly addressable
to the content.

3300
02:14:38,500 --> 02:14:39,700
And at the same time,

3301
02:14:39,700 --> 02:14:41,860
the lower routing
layer is able

3302
02:14:41,860 --> 02:14:45,040
to distribute
and also route

3303
02:14:45,040 --> 02:14:50,230
and locate content
in a means that is

3304
02:14:50,230 --> 02:14:54,100
independent of that
particular namespace.

3305
02:14:54,100 --> 02:14:57,070
The details of this,
I'm sure guys want to

3306
02:14:57,070 --> 02:15:00,135
know what am I really
talking about.

3307
02:15:00,135 --> 02:15:02,115
If you have a
moment, please take

3308
02:15:02,115 --> 02:15:04,725
a look at our protocol
white paper button.

3309
02:15:04,725 --> 02:15:07,110
But I think
those are really

3310
02:15:07,110 --> 02:15:10,005
the important design
paradigms here to

3311
02:15:10,005 --> 02:15:12,390
both make this
highly scalable

3312
02:15:12,390 --> 02:15:13,560
and generalizable.

3313
02:15:13,560 --> 02:15:16,030
And at the same
time support

3314
02:15:16,030 --> 02:15:20,500
the application
needs that are so

3315
02:15:20,500 --> 02:15:21,970
wide ranging and need

3316
02:15:21,970 --> 02:15:23,455
an architecture
that allows

3317
02:15:23,455 --> 02:15:26,170
the applications
to in fact

3318
02:15:26,170 --> 02:15:30,155
reuse the content
just as Jeff said.

3319
02:15:30,155 --> 02:15:34,690
>> And if I could
maybe add one thing.

3320
02:15:36,500 --> 02:15:40,140
Michelle said, I think
something important,

3321
02:15:40,140 --> 02:15:42,880
which is that I

3322
02:15:42,880 --> 02:15:44,710
don't know that you
have to necessarily

3323
02:15:44,710 --> 02:15:47,140
represent all of
that detail of

3324
02:15:47,140 --> 02:15:49,960
the namespace in the name

3325
02:15:49,960 --> 02:15:51,700
that's on the network.

3326
02:15:51,700 --> 02:15:53,440
There's some
decisions about what

3327
02:15:53,440 --> 02:15:56,150
gets presented to
the application.

3328
02:15:56,400 --> 02:15:58,420
What is interesting to

3329
02:15:58,420 --> 02:16:02,230
me in NDN is

3330
02:16:02,230 --> 02:16:03,820
the ability to
tie elements

3331
02:16:03,820 --> 02:16:06,100
of the name, to
trust relationships.

3332
02:16:06,100 --> 02:16:09,924
And to also imagine

3333
02:16:09,924 --> 02:16:11,350
inner operating
with something

3334
02:16:11,350 --> 02:16:13,600
like an IoT environment.

3335
02:16:13,600 --> 02:16:15,820
Maybe not directly,
but using some of

3336
02:16:15,820 --> 02:16:17,125
those same
principles where

3337
02:16:17,125 --> 02:16:18,445
in an IoT environment,

3338
02:16:18,445 --> 02:16:19,900
maybe you are deciding to

3339
02:16:19,900 --> 02:16:22,360
have a hierarchy
that is very much

3340
02:16:22,360 --> 02:16:24,580
used for local
communication

3341
02:16:24,580 --> 02:16:26,245
and maybe some forwarding

3342
02:16:26,245 --> 02:16:28,720
within a smaller
environment

3343
02:16:28,720 --> 02:16:32,050
and uses essentially
the same structure,

3344
02:16:32,050 --> 02:16:36,430
but with different
decisions about which

3345
02:16:36,430 --> 02:16:38,350
named components are
used for forwarding at

3346
02:16:38,350 --> 02:16:39,460
the network level
than you might

3347
02:16:39,460 --> 02:16:41,170
with content,

3348
02:16:41,170 --> 02:16:42,280
but at least
it's consistent

3349
02:16:42,280 --> 02:16:47,800
across this sphere
of applications.

3350
02:16:47,800 --> 02:16:50,470
And so I think that I

3351
02:16:50,470 --> 02:16:51,550
didn't mean to
suggest that

3352
02:16:51,550 --> 02:16:52,780
interoperability
necessarily

3353
02:16:52,780 --> 02:16:54,460
means that every name

3354
02:16:54,460 --> 02:16:56,230
in some application
level hierarchy

3355
02:16:56,230 --> 02:16:58,075
is represented or
used on the network.

3356
02:16:58,075 --> 02:17:00,085
But there is a
design space

3357
02:17:00,085 --> 02:17:01,930
that remains to
be explored about

3358
02:17:01,930 --> 02:17:04,210
which components
are exposed and

3359
02:17:04,210 --> 02:17:05,545
which components are left

3360
02:17:05,545 --> 02:17:07,405
at the application layer.

3361
02:17:07,405 --> 02:17:09,190
I think the
exciting thing from

3362
02:17:09,190 --> 02:17:11,800
an application point
of view is the more

3363
02:17:11,800 --> 02:17:14,200
the semantic
names are used

3364
02:17:14,200 --> 02:17:17,965
to access
decomposed content,

3365
02:17:17,965 --> 02:17:19,375
you can be more granular

3366
02:17:19,375 --> 02:17:21,040
about how you
access and use

3367
02:17:21,040 --> 02:17:22,810
components and think more

3368
02:17:22,810 --> 02:17:25,000
creative in how
they're fetched,

3369
02:17:25,000 --> 02:17:27,170
presented, and so on.

3370
02:17:29,640 --> 02:17:34,000
>> Good discussion.
Jeff, I'm not

3371
02:17:34,000 --> 02:17:35,710
sure if you have seen

3372
02:17:35,710 --> 02:17:38,425
Dave's question in
the Slack channel.

3373
02:17:38,425 --> 02:17:40,660
>> No, I don't
have it here.

3374
02:17:40,660 --> 02:17:44,635
>> So Dave was asking.
So it seems that the

3375
02:17:44,635 --> 02:17:46,465
remixing for
production should

3376
02:17:46,465 --> 02:17:49,300
be bi-directional
or invertible.

3377
02:17:49,300 --> 02:17:51,850
That means go forward
to the final mix or

3378
02:17:51,850 --> 02:17:53,590
backwards to
have the links

3379
02:17:53,590 --> 02:17:55,135
back to the raw footage,

3380
02:17:55,135 --> 02:17:56,650
which brings in a pretty

3381
02:17:56,650 --> 02:17:58,330
strong requirement or

3382
02:17:58,330 --> 02:18:00,984
opportunity for
explicit creation

3383
02:18:00,984 --> 02:18:03,950
and storage of
provenance data.

3384
02:18:05,430 --> 02:18:07,930
In ICN-NDN, we
don't seem to

3385
02:18:07,930 --> 02:18:10,480
have much research
or experience

3386
02:18:10,480 --> 02:18:12,820
was provenance
tracking pro

3387
02:18:12,820 --> 02:18:15,535
for NDNs dynamic content.

3388
02:18:15,535 --> 02:18:18,250
Michelle talked about
this earlier as well,

3389
02:18:18,250 --> 02:18:19,480
so Dave was asking

3390
02:18:19,480 --> 02:18:21,800
whether we have any
thoughts on this.

3391
02:18:22,680 --> 02:18:26,110
>> And just a couple
of notes and I'm

3392
02:18:26,110 --> 02:18:28,975
curious to hear the
communities opinion.

3393
02:18:28,975 --> 02:18:30,625
We did make the

3394
02:18:30,625 --> 02:18:32,920
content fabric
protocol natively

3395
02:18:32,920 --> 02:18:35,320
consider content
provenance both

3396
02:18:35,320 --> 02:18:36,370
in the encryption model

3397
02:18:36,370 --> 02:18:37,780
and the authorization.

3398
02:18:37,780 --> 02:18:39,430
And I mentioned
briefly that

3399
02:18:39,430 --> 02:18:41,935
the protocol is,
it's bipartite.

3400
02:18:41,935 --> 02:18:44,050
It is both the
content protocol

3401
02:18:44,050 --> 02:18:45,490
which will be
very, I think,

3402
02:18:45,490 --> 02:18:49,090
familiar and graspable
to this community.

3403
02:18:49,090 --> 02:18:51,640
And it is also a
blockchain protocol.

3404
02:18:51,640 --> 02:18:54,430
At the same time
implemented in

3405
02:18:54,430 --> 02:18:56,050
today's main network as

3406
02:18:56,050 --> 02:18:58,660
a for stack Ethereum
base blockchain.

3407
02:18:58,660 --> 02:19:00,280
But the main part of

3408
02:19:00,280 --> 02:19:03,580
that second aspect
is that the idea is

3409
02:19:03,580 --> 02:19:06,970
that to achieve the target

3410
02:19:06,970 --> 02:19:08,965
ends that we've all
been talking about,

3411
02:19:08,965 --> 02:19:10,795
you need to have
native provenance

3412
02:19:10,795 --> 02:19:13,310
in the content that

3413
02:19:14,670 --> 02:19:17,380
allows for
explicit transfer

3414
02:19:17,380 --> 02:19:18,850
of ownership when

3415
02:19:18,850 --> 02:19:21,010
a derivative of
core content

3416
02:19:21,010 --> 02:19:23,200
is created for someone
to experience,

3417
02:19:23,200 --> 02:19:25,105
to access, to view.

3418
02:19:25,105 --> 02:19:29,875
A couple of key
points about that is,

3419
02:19:29,875 --> 02:19:31,360
it's interesting, again,
it's worth reading

3420
02:19:31,360 --> 02:19:33,490
that paper to get all
the nuances to this.

3421
02:19:33,490 --> 02:19:34,870
But what that means is

3422
02:19:34,870 --> 02:19:36,970
that no content
exists that

3423
02:19:36,970 --> 02:19:38,050
isn't effectively

3424
02:19:38,050 --> 02:19:40,674
encrypted based
on ownership.

3425
02:19:40,674 --> 02:19:42,430
That's been
codified through

3426
02:19:42,430 --> 02:19:45,400
blockchain identity in
blockchain consensus,

3427
02:19:45,400 --> 02:19:47,695
and also no versions

3428
02:19:47,695 --> 02:19:50,185
of content evolve without

3429
02:19:50,185 --> 02:19:53,140
recording version
hashes in

3430
02:19:53,140 --> 02:19:57,055
a scalable way to the
protocol blockchain.

3431
02:19:57,055 --> 02:19:59,635
And then on the
other side of that,

3432
02:19:59,635 --> 02:20:02,800
no reading access to
content or derivatives

3433
02:20:02,800 --> 02:20:07,990
happens without
blockchain authorization.

3434
02:20:07,990 --> 02:20:10,510
When you get into
practical terms that

3435
02:20:10,510 --> 02:20:13,360
authorization can
also go into data,

3436
02:20:13,360 --> 02:20:16,165
which can be also part of

3437
02:20:16,165 --> 02:20:17,695
the content
objects in this

3438
02:20:17,695 --> 02:20:19,360
attested to on chain way.

3439
02:20:19,360 --> 02:20:22,090
So the policy itself
becomes tamper-proof.

3440
02:20:22,090 --> 02:20:23,560
So you start to

3441
02:20:23,560 --> 02:20:25,615
create this pipeline,
if you will,

3442
02:20:25,615 --> 02:20:29,305
of true ownership and
versioning control

3443
02:20:29,305 --> 02:20:31,480
that is intrinsically

3444
02:20:31,480 --> 02:20:33,850
backed by blockchain
semantics.

3445
02:20:33,850 --> 02:20:35,260
This is, I think,

3446
02:20:35,260 --> 02:20:37,390
a really important
idea because,

3447
02:20:37,390 --> 02:20:38,980
to what Jeff said,

3448
02:20:38,980 --> 02:20:41,590
the applications of
this are really around

3449
02:20:41,590 --> 02:20:44,625
digital IP, digital
intellectual property.

3450
02:20:44,625 --> 02:20:47,970
And going back to my
original comments,

3451
02:20:47,970 --> 02:20:49,770
if the ultimate goal of

3452
02:20:49,770 --> 02:20:52,440
this better the
Internet economy

3453
02:20:52,440 --> 02:20:54,780
and users of the internet,

3454
02:20:54,780 --> 02:21:01,270
the real driver here
is to have a means of

3455
02:21:01,270 --> 02:21:03,765
harnessing a

3456
02:21:03,765 --> 02:21:06,000
decentralized
approach that's more

3457
02:21:06,000 --> 02:21:08,775
efficient and that's owner

3458
02:21:08,775 --> 02:21:10,350
controlled, right guys.

3459
02:21:10,350 --> 02:21:12,090
And I don't want

3460
02:21:12,090 --> 02:21:13,860
to get too deep into
the blockchain side.

3461
02:21:13,860 --> 02:21:14,940
I realized that's not

3462
02:21:14,940 --> 02:21:16,170
these communities focus,

3463
02:21:16,170 --> 02:21:19,724
but I think it's a
very important partner

3464
02:21:19,724 --> 02:21:22,140
in this whole conversation

3465
02:21:22,140 --> 02:21:23,340
to really get to where

3466
02:21:23,340 --> 02:21:25,005
everybody is trying to go.

3467
02:21:25,005 --> 02:21:26,850
It's also interesting for

3468
02:21:26,850 --> 02:21:27,990
the computer
scientists here,

3469
02:21:27,990 --> 02:21:29,430
it's a whole
another dimension,

3470
02:21:29,430 --> 02:21:32,310
the security
aspects of this are

3471
02:21:32,310 --> 02:21:35,640
very well tied to the
name data principles.

3472
02:21:35,640 --> 02:21:37,679
And I think many people
and researchers,

3473
02:21:37,679 --> 02:21:39,270
grad students in this
conference would

3474
02:21:39,270 --> 02:21:42,040
enjoy getting into
that space as well.

3475
02:21:42,040 --> 02:21:44,200
But that's the way
we think about it.

3476
02:21:44,200 --> 02:21:45,970
That's how the fabric
protocol works.

3477
02:21:45,970 --> 02:21:47,845
It's also the
commercial drive.

3478
02:21:47,845 --> 02:21:49,840
As Todd said, everything
we're doing every

3479
02:21:49,840 --> 02:21:52,615
day is about somebody's
creative IP.

3480
02:21:52,615 --> 02:21:54,670
Some of it very big,
some of it independent,

3481
02:21:54,670 --> 02:21:56,185
that is going to
get distributed and

3482
02:21:56,185 --> 02:21:58,850
owned by somebody
else on his new way.

3483
02:22:00,570 --> 02:22:02,835
>> That's great. Thanks.

3484
02:22:02,835 --> 02:22:04,910
>> So I would like
to use the rest of

3485
02:22:04,910 --> 02:22:07,070
the time to give
people a chance

3486
02:22:07,070 --> 02:22:11,855
to understand your
system better, Michelle.

3487
02:22:11,855 --> 02:22:13,940
So there are a
couple of questions

3488
02:22:13,940 --> 02:22:16,970
in this lecture already.

3489
02:22:16,970 --> 02:22:19,790
Maybe to start this off.

3490
02:22:19,790 --> 02:22:24,230
So it says something like

3491
02:22:24,230 --> 02:22:29,570
a one-minute summary
that you could give

3492
02:22:29,570 --> 02:22:32,810
to describe the
key properties

3493
02:22:32,810 --> 02:22:35,555
so that we're all
on the same page,

3494
02:22:35,555 --> 02:22:38,120
maybe differentiated
against other systems.

3495
02:22:38,120 --> 02:22:39,260
So that's like
one question.

3496
02:22:39,260 --> 02:22:43,785
What's the difference
to life or to IPFS?

3497
02:22:43,785 --> 02:22:46,205
Something that makes
some people know.

3498
02:22:46,205 --> 02:22:48,515
And then I like to
call some questions,

3499
02:22:48,515 --> 02:22:51,060
and then we'll
discuss this further.

3500
02:22:52,120 --> 02:22:55,910
>> Since I'm the
oldest person

3501
02:22:55,910 --> 02:22:57,590
in the mix between
Todd and I in this,

3502
02:22:57,590 --> 02:22:59,225
I'll give very short.

3503
02:22:59,225 --> 02:23:00,410
And I do think it's

3504
02:23:00,410 --> 02:23:01,790
worth a read of the paper.

3505
02:23:01,790 --> 02:23:04,220
The biggest difference
from everything else,

3506
02:23:04,220 --> 02:23:05,750
biting off pieces of this,

3507
02:23:05,750 --> 02:23:07,430
is the fabric
protocol does

3508
02:23:07,430 --> 02:23:10,085
attempt to take on
the whole problem,

3509
02:23:10,085 --> 02:23:11,930
and by the whole problem,

3510
02:23:11,930 --> 02:23:14,360
I mean what we've been
talking about here,

3511
02:23:14,360 --> 02:23:17,050
the idea that
you would create

3512
02:23:17,050 --> 02:23:19,810
an application layer
protocol intended

3513
02:23:19,810 --> 02:23:23,500
to run on top of not
just IP, but TCPIP.

3514
02:23:23,500 --> 02:23:27,875
That would be natively

3515
02:23:27,875 --> 02:23:31,250
suited for
compositional content,

3516
02:23:31,250 --> 02:23:34,370
storage, and self

3517
02:23:34,370 --> 02:23:39,095
serving in a
net-scale network.

3518
02:23:39,095 --> 02:23:42,050
That implies also
decentralized in

3519
02:23:42,050 --> 02:23:44,615
native ownership through

3520
02:23:44,615 --> 02:23:46,430
the content's life cycle.

3521
02:23:46,430 --> 02:23:47,870
And then the protocols

3522
02:23:47,870 --> 02:23:49,925
number one
design principle

3523
02:23:49,925 --> 02:23:51,290
comes from this space,

3524
02:23:51,290 --> 02:23:52,745
which is that you would

3525
02:23:52,745 --> 02:23:54,200
design the protocol to

3526
02:23:54,200 --> 02:23:56,330
be based on

3527
02:23:56,330 --> 02:24:00,000
content-native routing,
and addressability.

3528
02:24:00,040 --> 02:24:03,350
Then, as far as the most,

3529
02:24:03,350 --> 02:24:06,920
I think visual metaphor

3530
02:24:06,920 --> 02:24:08,360
for folks is to think of

3531
02:24:08,360 --> 02:24:12,274
a pipeline for all output

3532
02:24:12,274 --> 02:24:14,285
in a decentralized network

3533
02:24:14,285 --> 02:24:17,210
that serves rich content.

3534
02:24:17,210 --> 02:24:20,600
That pipeline is
compositional in the sense

3535
02:24:20,600 --> 02:24:24,680
that both the raw
bytes as well as

3536
02:24:24,680 --> 02:24:27,380
the data metadata that

3537
02:24:27,380 --> 02:24:29,000
would then be under
the control of

3538
02:24:29,000 --> 02:24:31,400
software also stored in

3539
02:24:31,400 --> 02:24:33,830
the network
operate together

3540
02:24:33,830 --> 02:24:35,735
to generate the output,

3541
02:24:35,735 --> 02:24:38,090
whether it's streaming
or static data.

3542
02:24:38,090 --> 02:24:40,325
And as you all know,

3543
02:24:40,325 --> 02:24:44,360
there's doing that
as a pipeline in

3544
02:24:44,360 --> 02:24:48,410
a infinitely scalable
Internet environment

3545
02:24:48,410 --> 02:24:52,220
with predictable latency
implies many things,

3546
02:24:52,220 --> 02:24:55,010
but the protocols
architecture then is

3547
02:24:55,010 --> 02:24:59,930
built for really
those n states.

3548
02:24:59,930 --> 02:25:03,380
The lowest layer for
content routing and how

3549
02:25:03,380 --> 02:25:05,360
these parts exist
in a network

3550
02:25:05,360 --> 02:25:07,370
and are found which
will be the most,

3551
02:25:07,370 --> 02:25:08,660
I think, native to

3552
02:25:08,660 --> 02:25:10,565
what everyone here
thinks about.

3553
02:25:10,565 --> 02:25:12,230
The content
object structure,

3554
02:25:12,230 --> 02:25:13,340
which is the referential

3555
02:25:13,340 --> 02:25:15,095
structure that
guides that.

3556
02:25:15,095 --> 02:25:17,840
And then there is an

3557
02:25:17,840 --> 02:25:22,010
interesting in
network design and

3558
02:25:22,010 --> 02:25:24,050
implementation that uses

3559
02:25:24,050 --> 02:25:29,790
LOVM as operating on.

3560
02:25:30,040 --> 02:25:32,420
The best way to
put it so that

3561
02:25:32,420 --> 02:25:33,740
objects can operate on

3562
02:25:33,740 --> 02:25:36,020
themselves through
the protocol stack

3563
02:25:36,020 --> 02:25:38,224
to do things like
real-time transcoding.

3564
02:25:38,224 --> 02:25:39,440
So that's extensible.

3565
02:25:39,440 --> 02:25:41,120
And then, to
just point the,

3566
02:25:41,120 --> 02:25:42,980
I suppose the top layer

3567
02:25:42,980 --> 02:25:45,260
of if you think of
the protocol stack,

3568
02:25:45,260 --> 02:25:47,510
is the way that
those functions are

3569
02:25:47,510 --> 02:25:51,365
addressable, their
URL addressable.

3570
02:25:51,365 --> 02:25:54,650
And the fabric protocol
knows how to resolve

3571
02:25:54,650 --> 02:25:58,265
those URL names to

3572
02:25:58,265 --> 02:25:59,900
this pipeline functioning

3573
02:25:59,900 --> 02:26:01,880
in a decentralized way.

3574
02:26:01,880 --> 02:26:04,520
Now, of course, there
are many questions

3575
02:26:04,520 --> 02:26:06,395
about how do you
get that to work,

3576
02:26:06,395 --> 02:26:09,230
that ever-growing
scale, ever number,

3577
02:26:09,230 --> 02:26:10,985
larger number of objects.

3578
02:26:10,985 --> 02:26:12,500
How do you guarantee that

3579
02:26:12,500 --> 02:26:14,135
the latency and
performance

3580
02:26:14,135 --> 02:26:16,070
is going to be consistent?

3581
02:26:16,070 --> 02:26:19,040
How do you make
sure that the way

3582
02:26:19,040 --> 02:26:20,870
the metadata interacts as

3583
02:26:20,870 --> 02:26:23,060
part of the
objects is truly,

3584
02:26:23,060 --> 02:26:25,670
fully extensible
without limit?

3585
02:26:25,670 --> 02:26:27,560
Then, on the
ownership side,

3586
02:26:27,560 --> 02:26:29,930
how do you ensure that

3587
02:26:29,930 --> 02:26:32,000
the authorization

3588
02:26:32,000 --> 02:26:34,280
and the encryption
of content,

3589
02:26:34,280 --> 02:26:37,160
and the blockchain
control,

3590
02:26:37,160 --> 02:26:40,175
is generalizable
and scalable?

3591
02:26:40,175 --> 02:26:43,115
Those are all the
hard problems

3592
02:26:43,115 --> 02:26:45,245
the fabric attempts
to address.

3593
02:26:45,245 --> 02:26:47,975
So I hope that's helpful.

3594
02:26:47,975 --> 02:26:49,900
I would say first step,

3595
02:26:49,900 --> 02:26:51,040
read the paper,
and then please

3596
02:26:51,040 --> 02:26:52,720
feel free to
interact with us.

3597
02:26:52,720 --> 02:26:56,290
We would love to
collaborate on applications

3598
02:26:56,290 --> 02:26:58,570
and can answer more
and tell you some of

3599
02:26:58,570 --> 02:27:00,085
the things that are
unsolved problems

3600
02:27:00,085 --> 02:27:01,980
that we're still
working on.

3601
02:27:01,980 --> 02:27:03,980
>> Let's take my
view at least one

3602
02:27:03,980 --> 02:27:05,570
question from [inaudible]
because there

3603
02:27:05,570 --> 02:27:07,580
are some good ones just

3604
02:27:07,580 --> 02:27:09,500
on the transcoding
that you mentioned.

3605
02:27:09,500 --> 02:27:11,660
So a question
by Dave about

3606
02:27:11,660 --> 02:27:14,689
the just-in-time
transcoding.

3607
02:27:14,689 --> 02:27:18,170
The question is, the proxy

3608
02:27:18,170 --> 02:27:21,050
re-encryption
capability is quite

3609
02:27:21,050 --> 02:27:23,990
cool but what leads

3610
02:27:23,990 --> 02:27:25,100
the content owners to

3611
02:27:25,100 --> 02:27:27,195
trust you are
transcoding code?

3612
02:27:27,195 --> 02:27:29,380
And it was on.

3613
02:27:29,380 --> 02:27:33,860
[OVERLAPPING] Any
on-demand transcoding

3614
02:27:33,860 --> 02:27:36,350
since they don't
trust anybody.

3615
02:27:36,350 --> 02:27:38,750
>> It's all supposed
to be trustless.

3616
02:27:38,750 --> 02:27:40,400
It's a great question
and that all

3617
02:27:40,400 --> 02:27:42,155
gets into the trust model.

3618
02:27:42,155 --> 02:27:44,960
The nodes themselves,
which run

3619
02:27:44,960 --> 02:27:46,250
the whole stack or

3620
02:27:46,250 --> 02:27:48,409
active participants
in the blockchain.

3621
02:27:48,409 --> 02:27:51,920
And that principle
is fundamental to

3622
02:27:51,920 --> 02:27:53,900
the trust model
and also to

3623
02:27:53,900 --> 02:27:55,400
the data provenance and to

3624
02:27:55,400 --> 02:27:57,455
the economics of it all.

3625
02:27:57,455 --> 02:28:00,560
And to be specific each of

3626
02:28:00,560 --> 02:28:03,845
the nodes has a
blockchain address,

3627
02:28:03,845 --> 02:28:06,395
and conducts its
trusted operations

3628
02:28:06,395 --> 02:28:09,395
authorized based on

3629
02:28:09,395 --> 02:28:12,155
its blockchain
address and contracts

3630
02:28:12,155 --> 02:28:16,325
for what the nodes
are permitted to do.

3631
02:28:16,325 --> 02:28:18,545
So your point is correct.

3632
02:28:18,545 --> 02:28:20,300
The nodes are trusted in

3633
02:28:20,300 --> 02:28:22,010
those operations
and they do

3634
02:28:22,010 --> 02:28:23,900
that trust under
the authentication

3635
02:28:23,900 --> 02:28:25,805
of their Blockchain
identity.

3636
02:28:25,805 --> 02:28:28,160
And then the
operations that they

3637
02:28:28,160 --> 02:28:30,560
do are authorized based

3638
02:28:30,560 --> 02:28:32,465
on the contracts that

3639
02:28:32,465 --> 02:28:35,720
the base contracts that
support the content.

3640
02:28:35,720 --> 02:28:38,060
Finally, those of you

3641
02:28:38,060 --> 02:28:39,560
who are into blockchain
know there are

3642
02:28:39,560 --> 02:28:42,200
really complicated
questions about

3643
02:28:42,200 --> 02:28:43,820
true decentralization
in this.

3644
02:28:43,820 --> 02:28:44,660
And I can tell you

3645
02:28:44,660 --> 02:28:46,370
from a practical
standpoint,

3646
02:28:46,370 --> 02:28:49,010
you have to launch
these things in

3647
02:28:49,010 --> 02:28:51,620
a centralized manner as

3648
02:28:51,620 --> 02:28:53,810
in centralized naught
and architecture,

3649
02:28:53,810 --> 02:28:55,895
but no ownership
to get them going.

3650
02:28:55,895 --> 02:28:58,775
And it's a real
practical thing

3651
02:28:58,775 --> 02:29:01,190
to grow the node,

3652
02:29:01,190 --> 02:29:02,750
providing ecosystem to be

3653
02:29:02,750 --> 02:29:04,625
sufficiently decentralized

3654
02:29:04,625 --> 02:29:06,590
and governance to back

3655
02:29:06,590 --> 02:29:08,975
the architectural
assumptions.

3656
02:29:08,975 --> 02:29:10,400
This is a real thing.

3657
02:29:10,400 --> 02:29:13,024
That's why I said in
my opening comments.

3658
02:29:13,024 --> 02:29:15,500
If you really want
to dig in on this,

3659
02:29:15,500 --> 02:29:18,335
we need to have lots
of participation.

3660
02:29:18,335 --> 02:29:19,910
Otherwise, we're going
to be stuck with

3661
02:29:19,910 --> 02:29:22,640
the clouds that we've
had for 20 years.

3662
02:29:22,640 --> 02:29:26,570
>> This is a really
good discussion.

3663
02:29:26,570 --> 02:29:29,390
I think we could go on
for quite some time.

3664
02:29:29,390 --> 02:29:33,200
Unfortunately, we have
to take a break now.

3665
02:29:33,200 --> 02:29:36,290
So you have some
additional questions

3666
02:29:36,290 --> 02:29:37,850
on this lecture
if you have time,

3667
02:29:37,850 --> 02:29:39,500
it'll be great
if you can have

3668
02:29:39,500 --> 02:29:42,665
a look and answer them.

3669
02:29:42,665 --> 02:29:46,610
For now, let me compute
this a little bit.

3670
02:29:46,610 --> 02:29:48,350
So I think that
was a really

3671
02:29:48,350 --> 02:29:50,495
cool pennant,
really interesting.

3672
02:29:50,495 --> 02:29:56,330
And I think we barely
scratched the surface

3673
02:29:56,330 --> 02:30:01,280
about like in
deeper problems

3674
02:30:01,280 --> 02:30:03,620
or some interesting
challenges.

3675
02:30:03,620 --> 02:30:07,010
I think we got some
really good ideas

3676
02:30:07,010 --> 02:30:09,740
and also quite
good understanding

3677
02:30:09,740 --> 02:30:15,650
what DFP system tries

3678
02:30:15,650 --> 02:30:17,570
to do is quite

3679
02:30:17,570 --> 02:30:19,400
interesting for the
Indian community,

3680
02:30:19,400 --> 02:30:23,000
I think to see
what is all needed

3681
02:30:23,000 --> 02:30:24,590
from a commercial content

3682
02:30:24,590 --> 02:30:26,915
distribution perspective,

3683
02:30:26,915 --> 02:30:28,370
that was really cool.

3684
02:30:28,370 --> 02:30:31,340
And I think there

3685
02:30:31,340 --> 02:30:34,130
are also some good
connections between,

3686
02:30:34,130 --> 02:30:37,595
like the thoughts
that we heard from

3687
02:30:37,595 --> 02:30:39,665
Jeff and Paolo

3688
02:30:39,665 --> 02:30:43,145
about interesting
opportunities.

3689
02:30:43,145 --> 02:30:46,370
So the way that
we could also

3690
02:30:46,370 --> 02:30:49,955
conceive certain systems
in a different way.

3691
02:30:49,955 --> 02:30:54,080
And I wanted to
thank you very

3692
02:30:54,080 --> 02:30:56,750
much for this very

3693
02:30:56,750 --> 02:30:59,285
dense but super
interesting.

3694
02:30:59,285 --> 02:31:01,460
I hope people find it

3695
02:31:01,460 --> 02:31:04,850
useful and enjoy
your break.

3696
02:31:04,850 --> 02:31:07,800
And hope to see
you again soon.