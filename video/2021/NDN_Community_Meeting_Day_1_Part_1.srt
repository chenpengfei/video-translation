1
00:00:00,650 --> 00:00:04,830
>> Hello everyone
and welcome to

2
00:00:04,830 --> 00:00:07,020
the 2021 edition of

3
00:00:07,020 --> 00:00:08,940
the Named Data Networking

4
00:00:08,940 --> 00:00:11,220
Community meeting that we

5
00:00:11,220 --> 00:00:13,140
hope will be a
good opportunity

6
00:00:13,140 --> 00:00:16,350
to load report on
the communities

7
00:00:16,350 --> 00:00:19,530
work over the past
year and identify

8
00:00:19,530 --> 00:00:21,060
new work needed to move

9
00:00:21,060 --> 00:00:24,550
the NDA development
and deployment tool.

10
00:00:25,160 --> 00:00:29,190
We have a full
two-day agenda

11
00:00:29,190 --> 00:00:31,650
with three panels

12
00:00:31,650 --> 00:00:34,255
and six presentation
sessions.

13
00:00:34,255 --> 00:00:36,650
We have compiled
the abstracts

14
00:00:36,650 --> 00:00:38,810
of all talks and panels

15
00:00:38,810 --> 00:00:40,820
and they are
available under

16
00:00:40,820 --> 00:00:43,490
the Agenda tab on
the event page,

17
00:00:43,490 --> 00:00:47,160
as you can see from
the screen capture.

18
00:00:48,740 --> 00:00:52,700
The theme for this year
as you can tell from

19
00:00:52,700 --> 00:00:54,800
the panel names is

20
00:00:54,800 --> 00:00:58,610
Making NDN More Accessible
and More Usable.

21
00:00:58,610 --> 00:01:02,390
Usability in terms of
making life easier for

22
00:01:02,390 --> 00:01:04,940
NDN application
developers by

23
00:01:04,940 --> 00:01:08,485
having a good set of
libraries and APIs,

24
00:01:08,485 --> 00:01:10,500
and the accessibility
in terms of

25
00:01:10,500 --> 00:01:12,410
making the NDN
codebase more

26
00:01:12,410 --> 00:01:14,540
accessible to
everyone who wants

27
00:01:14,540 --> 00:01:17,700
to experiment with NDN.

28
00:01:18,830 --> 00:01:21,490
In the presentation
sessions,

29
00:01:21,490 --> 00:01:25,210
we have a total of
26 with a mix of

30
00:01:25,210 --> 00:01:28,420
both regular 20-minute
presentations

31
00:01:28,420 --> 00:01:31,445
and short 10-minute
presentations.

32
00:01:31,445 --> 00:01:33,850
We have a wide spectrum

33
00:01:33,850 --> 00:01:35,440
of presenters that cover

34
00:01:35,440 --> 00:01:38,110
academic and
government research

35
00:01:38,110 --> 00:01:39,730
as well as industry with

36
00:01:39,730 --> 00:01:41,440
presentations from Dell,

37
00:01:41,440 --> 00:01:43,810
Intel, Intelligent Fusion,

38
00:01:43,810 --> 00:01:46,070
Pollere, and Siemens.

39
00:01:46,890 --> 00:01:50,575
As a community
meeting, ideally,

40
00:01:50,575 --> 00:01:53,320
in addition to
sharing progress

41
00:01:53,320 --> 00:01:55,675
and identifying
open issues,

42
00:01:55,675 --> 00:01:57,820
we want to also identify

43
00:01:57,820 --> 00:02:00,030
what the community
needs to focus on.

44
00:02:00,030 --> 00:02:02,840
In particular, along
the line of the theme

45
00:02:02,840 --> 00:02:03,860
of usability and

46
00:02:03,860 --> 00:02:06,130
accessibility I
just mentioned.

47
00:02:06,130 --> 00:02:09,150
This year, we have
as Co-Chairs,

48
00:02:09,150 --> 00:02:10,900
Marie-Jose Montpetit

49
00:02:10,900 --> 00:02:12,995
from Concordia University,

50
00:02:12,995 --> 00:02:14,870
and Susmit Shannigrahi

51
00:02:14,870 --> 00:02:17,665
from Tennessee
Tech University.

52
00:02:17,665 --> 00:02:20,750
Marie-Jose, I don't
know if you're on,

53
00:02:20,750 --> 00:02:22,855
if you want to say a word.

54
00:02:22,855 --> 00:02:25,190
>> Yes, I'm on. I can even

55
00:02:25,190 --> 00:02:27,215
turn my camera for
a few seconds.

56
00:02:27,215 --> 00:02:28,185
>> Okay.

57
00:02:28,185 --> 00:02:30,295
>> Hello. Yeah,

58
00:02:30,295 --> 00:02:31,730
thank you very much for

59
00:02:31,730 --> 00:02:33,110
allowing me to do this.

60
00:02:33,110 --> 00:02:36,305
It's a pleasure and an
honor for me to do it.

61
00:02:36,305 --> 00:02:39,230
Like you said, and

62
00:02:39,230 --> 00:02:41,870
Susmit will probably
add to this,

63
00:02:41,870 --> 00:02:43,460
we wanted to make
sure that we

64
00:02:43,460 --> 00:02:46,345
were having a true
community meeting.

65
00:02:46,345 --> 00:02:47,975
I think we would like

66
00:02:47,975 --> 00:02:50,690
everybody to know when
you're presenting,

67
00:02:50,690 --> 00:02:53,240
I think it's not
just a presentation,

68
00:02:53,240 --> 00:02:54,980
it's the start
of a dialogue

69
00:02:54,980 --> 00:02:57,365
and I think we
made an effort in

70
00:02:57,365 --> 00:03:00,080
the panel preparations to

71
00:03:00,080 --> 00:03:02,015
make sure that we would
have a conversation

72
00:03:02,015 --> 00:03:04,280
between the panelists
and between

73
00:03:04,280 --> 00:03:07,375
the panelists and the
community members.

74
00:03:07,375 --> 00:03:10,900
Lofti you mentioned
that the theme

75
00:03:10,900 --> 00:03:14,240
is to expand the NDN
reachability but

76
00:03:14,240 --> 00:03:15,560
also to get new people

77
00:03:15,560 --> 00:03:17,570
involved and I
think you will see

78
00:03:17,570 --> 00:03:19,190
that there are people in

79
00:03:19,190 --> 00:03:23,035
the meeting who
are new to this.

80
00:03:23,035 --> 00:03:25,310
I've had a few
people saying, Well,

81
00:03:25,310 --> 00:03:28,025
we don't know
anything about NDN,

82
00:03:28,025 --> 00:03:30,080
but we know a lot
about data than

83
00:03:30,080 --> 00:03:33,970
data-driven applications
and Eve Schuller

84
00:03:33,970 --> 00:03:38,360
from mental told me
a few months ago

85
00:03:38,360 --> 00:03:40,610
that data is
now the fuel of

86
00:03:40,610 --> 00:03:41,945
the 21st century so

87
00:03:41,945 --> 00:03:43,715
everything is data-driven.

88
00:03:43,715 --> 00:03:45,740
We have a large
community in NDN

89
00:03:45,740 --> 00:03:47,000
that probably
has been aware

90
00:03:47,000 --> 00:03:48,220
of this for quite
a long time,

91
00:03:48,220 --> 00:03:50,195
so maybe to connect

92
00:03:50,195 --> 00:03:54,990
all the data-driven
people together,

93
00:03:54,990 --> 00:03:57,550
both inside NDN
and outside NDN,

94
00:03:57,550 --> 00:03:58,820
we'll just make
the community

95
00:03:58,820 --> 00:04:01,205
larger and I think
we'll profit both.

96
00:04:01,205 --> 00:04:03,630
Susmit, you want
to add something?

97
00:04:07,030 --> 00:04:09,760
>> Yes, very briefly.

98
00:04:09,760 --> 00:04:12,015
>> Welcome everyone.

99
00:04:12,015 --> 00:04:21,240
I think I'm going

100
00:04:21,240 --> 00:04:24,165
to repeat what Lofti
and Marie-Jose said.

101
00:04:24,165 --> 00:04:26,405
We want this to be
a community meeting

102
00:04:26,405 --> 00:04:29,720
conference so it's more of

103
00:04:29,720 --> 00:04:33,455
presenting or
lesser presenting

104
00:04:33,455 --> 00:04:34,880
what we're doing and more

105
00:04:34,880 --> 00:04:37,640
of communicating
with the community,

106
00:04:37,640 --> 00:04:42,000
what they need and where
do you go from here?

107
00:04:43,310 --> 00:04:47,890
>> Thanks, Marie-Jose
and Susmit.

108
00:04:47,960 --> 00:04:52,785
Finally, for Q&A
and discussions,

109
00:04:52,785 --> 00:04:55,450
let's use the
channels primarily,

110
00:04:55,450 --> 00:04:57,725
we have one for each
presentation or

111
00:04:57,725 --> 00:05:00,635
panel as you can
see on this list.

112
00:05:00,635 --> 00:05:03,650
You can also unmute
your mic and speak

113
00:05:03,650 --> 00:05:08,550
preferably by using the
raise hand feature.

114
00:05:10,030 --> 00:05:12,500
With that, I
think we are on

115
00:05:12,500 --> 00:05:14,719
time to start the
first session,

116
00:05:14,719 --> 00:05:18,170
which is on NDN past to

117
00:05:18,170 --> 00:05:19,280
present and would be

118
00:05:19,280 --> 00:05:21,904
chaired by
Patrick Crowley.

119
00:05:21,904 --> 00:05:23,690
Patrick is a Professor of

120
00:05:23,690 --> 00:05:25,760
Computer Science
and Engineering at

121
00:05:25,760 --> 00:05:27,680
the Washington
University in St.

122
00:05:27,680 --> 00:05:29,810
Louis and Director of

123
00:05:29,810 --> 00:05:31,250
the Applied Research Lab,

124
00:05:31,250 --> 00:05:33,260
which operates
multiple testbeds,

125
00:05:33,260 --> 00:05:37,855
including the ONL and
the Global NDN testbed.

126
00:05:37,855 --> 00:05:40,880
He was one of the
goopy eyes of

127
00:05:40,880 --> 00:05:44,480
the NSF funded
NDN program.

128
00:05:44,480 --> 00:05:46,370
With that, Patrick,

129
00:05:46,370 --> 00:05:48,750
you want to go
ahead, please?

130
00:05:50,420 --> 00:05:53,650
>> Thank you, Lofti.

131
00:05:53,990 --> 00:05:56,900
It's wonderful to be

132
00:05:56,900 --> 00:05:59,915
here with you all and
I look forward to

133
00:05:59,915 --> 00:06:02,840
seeing each of you
serially as you turn on

134
00:06:02,840 --> 00:06:04,610
your cameras to share

135
00:06:04,610 --> 00:06:06,560
with the rest of
the NDN community.

136
00:06:06,560 --> 00:06:08,555
As Lofti said,

137
00:06:08,555 --> 00:06:11,660
my name is Patrick
Crowley from Washington.

138
00:06:11,660 --> 00:06:13,420
I'd like to welcome you to

139
00:06:13,420 --> 00:06:15,820
the first session of

140
00:06:15,820 --> 00:06:19,150
this year's NDN
community meeting.

141
00:06:19,150 --> 00:06:25,095
Our first session
topic for this year is

142
00:06:25,095 --> 00:06:29,110
NDN past to present
and the way that

143
00:06:29,110 --> 00:06:31,420
we'll proceed is we

144
00:06:31,420 --> 00:06:33,460
have three speakers
in the session,

145
00:06:33,460 --> 00:06:35,405
as you know, I'll

146
00:06:35,405 --> 00:06:38,260
introduce each of them
before their comments.

147
00:06:38,260 --> 00:06:41,590
They'll speak for 15
or 16 minutes and then

148
00:06:41,590 --> 00:06:43,420
we'll have run
four minutes

149
00:06:43,420 --> 00:06:45,010
for questions afterwards.

150
00:06:45,010 --> 00:06:48,535
So in good community
communication,

151
00:06:48,535 --> 00:06:49,900
as always,

152
00:06:49,900 --> 00:06:51,100
we will do our best to get

153
00:06:51,100 --> 00:06:52,360
everybody's questions in,

154
00:06:52,360 --> 00:06:55,070
but time is, of course,

155
00:06:55,070 --> 00:06:58,295
a constraint that we
all must reconcile.

156
00:06:58,295 --> 00:07:00,650
I will keep my eyes on

157
00:07:00,650 --> 00:07:03,380
both the Slack channel and

158
00:07:03,380 --> 00:07:04,670
also those of you

159
00:07:04,670 --> 00:07:06,625
who don't have
access to Slack.

160
00:07:06,625 --> 00:07:09,155
You're welcome,
as Lofti said,

161
00:07:09,155 --> 00:07:12,140
to make use of the raise
hand feature within

162
00:07:12,140 --> 00:07:13,880
this video conferencing
software and you

163
00:07:13,880 --> 00:07:15,665
can ask your own
question that way.

164
00:07:15,665 --> 00:07:18,005
Otherwise, I will read
the questions that

165
00:07:18,005 --> 00:07:21,780
come up in the
Slack channel.

166
00:07:21,890 --> 00:07:24,330
Without further ado,

167
00:07:24,330 --> 00:07:27,135
it's my great pleasure to

168
00:07:27,135 --> 00:07:31,100
introduce our
first speaker.

169
00:07:31,100 --> 00:07:34,160
Professor Lixia Zhang from

170
00:07:34,160 --> 00:07:37,045
the Department of
Computer Science in UCLA.

171
00:07:37,045 --> 00:07:40,620
Lixia was the lead PI for

172
00:07:40,620 --> 00:07:42,980
the NDN project and

173
00:07:42,980 --> 00:07:44,900
a tremendous leader and

174
00:07:44,900 --> 00:07:47,195
visionary for
our community.

175
00:07:47,195 --> 00:07:49,070
She's going to
share with us

176
00:07:49,070 --> 00:07:52,990
today lessons learned
over the last years.

177
00:07:52,990 --> 00:07:55,300
Lixia, please
take it away.

178
00:07:55,300 --> 00:07:58,215
>> Thank you, Patrick.

179
00:07:58,215 --> 00:08:00,365
Let me share my screen.

180
00:08:00,365 --> 00:08:02,850
I hope people
can see it now.

181
00:08:04,530 --> 00:08:05,950
.

182
00:08:05,950 --> 00:08:08,720
>> I got the task
to give a summary.

183
00:08:08,720 --> 00:08:10,570
It's a really
overview summary of

184
00:08:10,570 --> 00:08:13,175
last year's panel NDN

185
00:08:13,175 --> 00:08:17,660
reaching 10-year
milestone,

186
00:08:17,660 --> 00:08:20,795
and what we have learned
about this 10 years.

187
00:08:20,795 --> 00:08:23,345
I have to say that
the year is really

188
00:08:23,345 --> 00:08:25,580
flying by when
you're having fun.

189
00:08:25,580 --> 00:08:26,620
I think the first 10 years

190
00:08:26,620 --> 00:08:28,495
has passed in no time.

191
00:08:28,495 --> 00:08:30,590
Last year we had
the great panel

192
00:08:30,590 --> 00:08:33,470
chaired by
Christian Tschudin.

193
00:08:33,960 --> 00:08:36,420
Here we should
do a summary.

194
00:08:36,420 --> 00:08:39,910
We should have did
rather after the panel,

195
00:08:39,910 --> 00:08:43,000
but it's never
late though,

196
00:08:43,000 --> 00:08:44,465
let's make it up.

197
00:08:44,465 --> 00:08:46,805
For people who
missed the panel,

198
00:08:46,805 --> 00:08:50,050
we can see what we
talked to them.

199
00:08:50,220 --> 00:08:57,185
The panel chair gave
us three great topics;

200
00:08:57,185 --> 00:09:00,375
what are the highlights
of the past 10 years?

201
00:09:00,375 --> 00:09:02,255
Where things can be

202
00:09:02,255 --> 00:09:04,500
improved or in other way,

203
00:09:04,500 --> 00:09:06,660
what are the
lessons learned,

204
00:09:06,660 --> 00:09:08,370
and where we are now?

205
00:09:08,370 --> 00:09:10,355
That's also lead to

206
00:09:10,355 --> 00:09:13,165
where we should
be heading to.

207
00:09:13,165 --> 00:09:16,505
Let me just start
to talk about,

208
00:09:16,505 --> 00:09:19,730
where the whole
thing started?

209
00:09:21,050 --> 00:09:24,910
We all know that Van
Jacobson gave this talk.

210
00:09:24,910 --> 00:09:27,825
Now, think about
it 15 years back,

211
00:09:27,825 --> 00:09:30,560
looking at the new way

212
00:09:30,560 --> 00:09:32,055
to look at the networking.

213
00:09:32,055 --> 00:09:33,370
I remember at

214
00:09:33,370 --> 00:09:35,090
the very beginning
of this talk,

215
00:09:35,090 --> 00:09:37,109
had made a great analogy.

216
00:09:37,109 --> 00:09:39,510
He was saying that

217
00:09:39,510 --> 00:09:43,340
the Internet is a
greater design.

218
00:09:43,340 --> 00:09:45,790
The question is not
so much whether

219
00:09:45,790 --> 00:09:48,485
Internet design is
bad, but rather,

220
00:09:48,485 --> 00:09:51,090
the problems the
Internet must

221
00:09:51,090 --> 00:09:54,740
solve have changed
over time.

222
00:09:54,740 --> 00:09:57,195
The main issue is that,

223
00:09:57,195 --> 00:10:03,905
just like the Kuiper,
you can revolution.

224
00:10:03,905 --> 00:10:08,330
Before that, when people
try to understand

225
00:10:08,330 --> 00:10:09,815
the planet movement in

226
00:10:09,815 --> 00:10:13,710
the universe with the
Earth as the center,

227
00:10:13,710 --> 00:10:17,140
and the things look
complicated to explain.

228
00:10:17,140 --> 00:10:20,010
But the usual one doesn't
make a big change,

229
00:10:20,010 --> 00:10:23,230
say, the center to
be under the sun.

230
00:10:23,230 --> 00:10:25,280
Then overall quickly

231
00:10:25,280 --> 00:10:30,390
the picture gets
much simpler.

232
00:10:30,390 --> 00:10:33,810
Therefore, back in 2010,

233
00:10:33,810 --> 00:10:37,045
we put the best together
into a proposal,

234
00:10:37,045 --> 00:10:38,475
creating this bold,

235
00:10:38,475 --> 00:10:41,565
simple new way
to networking.

236
00:10:41,565 --> 00:10:43,970
IP just send packets

237
00:10:43,970 --> 00:10:46,160
from one address
to another.

238
00:10:46,160 --> 00:10:48,770
We say that network

239
00:10:48,770 --> 00:10:51,915
is really about shaping
the bags of fits.

240
00:10:51,915 --> 00:10:54,505
Counterweight
directly address

241
00:10:54,505 --> 00:10:55,835
networking questions

242
00:10:55,835 --> 00:10:59,530
by just requesting
that name the data.

243
00:10:59,530 --> 00:11:02,309
I remember David
Clark mentioned

244
00:11:02,309 --> 00:11:05,120
during that last year
panel saying that,

245
00:11:05,120 --> 00:11:06,639
"In the very beginning,

246
00:11:06,639 --> 00:11:08,330
what was exciting about

247
00:11:08,330 --> 00:11:11,080
NDN was really
its boldness,

248
00:11:11,080 --> 00:11:15,190
its divergence from
the current thinking."

249
00:11:15,190 --> 00:11:17,105
The natural
community tends to

250
00:11:17,105 --> 00:11:19,630
focus on the performance
of data planes,

251
00:11:19,630 --> 00:11:22,955
efficient delivery
such and such,

252
00:11:22,955 --> 00:11:26,315
but the NDN is a
whole new approach.

253
00:11:26,315 --> 00:11:28,060
I think that's really our

254
00:11:28,060 --> 00:11:30,520
highlight our number 1.

255
00:11:30,620 --> 00:11:33,140
They're directly related.

256
00:11:33,140 --> 00:11:35,985
There's a whole new
approach centred on this,

257
00:11:35,985 --> 00:11:38,950
semantically named
the secured data.

258
00:11:38,950 --> 00:11:42,750
The 10-years
experience really told

259
00:11:42,750 --> 00:11:46,320
us that we got the
basic idea right.

260
00:11:46,320 --> 00:11:49,355
The semantically named
the secured data

261
00:11:49,355 --> 00:11:52,040
is a basic building block.

262
00:11:52,040 --> 00:11:54,245
From there, with
the word for

263
00:11:54,245 --> 00:11:56,625
the applications
both people

264
00:11:56,625 --> 00:11:57,610
had the thought at

265
00:11:57,610 --> 00:12:01,420
the time as well as
the things that only

266
00:12:01,420 --> 00:12:03,160
got invented after

267
00:12:03,160 --> 00:12:06,170
NDN project that
got started.

268
00:12:06,170 --> 00:12:09,425
The idea is that,

269
00:12:09,425 --> 00:12:11,140
everything is a bag of

270
00:12:11,140 --> 00:12:14,890
bits ranging from
movies, sports,

271
00:12:14,890 --> 00:12:18,130
games, to the IoT sensors,

272
00:12:18,130 --> 00:12:22,180
to commands, as well
as the crypto keys,

273
00:12:22,180 --> 00:12:24,740
the certificates, and
security policies.

274
00:12:24,740 --> 00:12:26,735
Whatever you want,
you can issue

275
00:12:26,735 --> 00:12:28,890
the requests to
the network and

276
00:12:28,890 --> 00:12:31,680
the network automagically
will provide you

277
00:12:31,680 --> 00:12:34,030
back the correct
answer that

278
00:12:34,030 --> 00:12:36,560
the end users can verify.

279
00:12:36,560 --> 00:12:38,565
I think semantic naming

280
00:12:38,565 --> 00:12:41,140
reflects application
context,

281
00:12:41,140 --> 00:12:43,650
relations among the
network entities,.

282
00:12:43,650 --> 00:12:45,990
This lays ground work for

283
00:12:45,990 --> 00:12:47,235
the content-specific

284
00:12:47,235 --> 00:12:49,490
security solution
developments.

285
00:12:49,490 --> 00:12:50,900
Like the trust schema,

286
00:12:50,900 --> 00:12:53,330
I think that's one of
the earlier results

287
00:12:53,330 --> 00:12:57,025
few years after the
project started.

288
00:12:57,025 --> 00:12:58,825
It's representing I think

289
00:12:58,825 --> 00:13:01,130
a brand new
breakthrough I'd say,

290
00:13:01,130 --> 00:13:02,485
is addressing

291
00:13:02,485 --> 00:13:03,825
this fountain

292
00:13:03,825 --> 00:13:06,490
security challenges
facing us today.

293
00:13:06,490 --> 00:13:10,920
Now, starting from

294
00:13:10,920 --> 00:13:15,735
the semantically named
the secured data,

295
00:13:15,735 --> 00:13:17,945
we'll apply the concept

296
00:13:17,945 --> 00:13:20,715
to many different
problems.

297
00:13:20,715 --> 00:13:22,485
Internet of Things,
as I mentioned,

298
00:13:22,485 --> 00:13:24,115
those require networking,

299
00:13:24,115 --> 00:13:28,295
that requires delayed
tolerant support.

300
00:13:28,295 --> 00:13:31,340
The distributors social
apps that the Memphis

301
00:13:31,340 --> 00:13:35,560
demonstrated at
the ICA in 2019.

302
00:13:35,560 --> 00:13:38,645
There's a disruption,
tolerant to networking.

303
00:13:38,645 --> 00:13:40,400
I think that
after researchers

304
00:13:40,400 --> 00:13:43,800
explored in this direction
and created that.

305
00:13:43,800 --> 00:13:45,885
More recently, we have

306
00:13:45,885 --> 00:13:48,640
seen satellite
networking looking

307
00:13:48,640 --> 00:13:50,840
to the application Endian

308
00:13:50,840 --> 00:13:53,115
to address their problems,

309
00:13:53,115 --> 00:13:56,470
because Endian
really provide

310
00:13:56,470 --> 00:13:59,930
that built-in delay
tolerance support

311
00:13:59,930 --> 00:14:02,690
in as well as
Edge computing.

312
00:14:02,690 --> 00:14:06,600
Highlight 3. We can
have great ideas,

313
00:14:06,600 --> 00:14:09,824
but without NSF support

314
00:14:09,824 --> 00:14:13,050
the great ideas wouldn't
have come very far.

315
00:14:13,050 --> 00:14:16,185
I think the whole team
appreciated really

316
00:14:16,185 --> 00:14:19,730
the unfailing support from

317
00:14:19,730 --> 00:14:23,275
NSF and also from the
global community.

318
00:14:23,275 --> 00:14:25,705
That was started in 2010.

319
00:14:25,705 --> 00:14:27,790
I must say talk

320
00:14:27,790 --> 00:14:30,300
about the lessons
learnt next step.

321
00:14:30,300 --> 00:14:31,835
I didn't know at

322
00:14:31,835 --> 00:14:34,310
the time what that
sent out to do,

323
00:14:34,310 --> 00:14:38,080
but I figured the FAA
program was serious,

324
00:14:38,080 --> 00:14:41,095
we got it down by the
end of three years.

325
00:14:41,095 --> 00:14:45,240
The time has told us
how around we are.

326
00:14:45,240 --> 00:14:48,940
But nevertheless, there's
continued support

327
00:14:48,940 --> 00:14:51,840
and encouragement
from NSF,

328
00:14:51,840 --> 00:14:53,315
and as a result,

329
00:14:53,315 --> 00:14:56,115
as you can see in
the next two days,

330
00:14:56,115 --> 00:14:58,775
there's a great
new directions

331
00:14:58,775 --> 00:15:02,080
pushing the frontier for

332
00:15:02,080 --> 00:15:03,730
networking and addressing

333
00:15:03,730 --> 00:15:05,080
the burning issues that's

334
00:15:05,080 --> 00:15:08,940
persisted in the
Internet for many years.

335
00:15:08,940 --> 00:15:11,075
We really got a dedicated

336
00:15:11,075 --> 00:15:12,440
and persistent team.

337
00:15:12,440 --> 00:15:15,045
I look at the
session chairs

338
00:15:15,045 --> 00:15:17,750
for this year's
Endian.com.

339
00:15:17,750 --> 00:15:19,790
We can see that
a majority of

340
00:15:19,790 --> 00:15:22,170
the Endian PAs,

341
00:15:22,170 --> 00:15:24,560
the teams started in 2010,

342
00:15:24,560 --> 00:15:26,550
who are still
here are pushing,

343
00:15:26,550 --> 00:15:29,905
continue to push this
exciting direction.

344
00:15:29,905 --> 00:15:33,320
There's a broader
community as you can see

345
00:15:33,320 --> 00:15:36,710
from the presentation
in the next two days.

346
00:15:36,710 --> 00:15:41,360
Lessons. I just want
to convey a few ideas.

347
00:15:41,360 --> 00:15:44,255
This talk does not reflect

348
00:15:44,255 --> 00:15:47,910
the panel's shared
understanding,

349
00:15:47,910 --> 00:15:50,350
but this really
personal view.

350
00:15:50,350 --> 00:15:52,305
I hope I'm going
go to round.

351
00:15:52,305 --> 00:15:55,270
I think the Endian project

352
00:15:55,270 --> 00:15:59,200
started with the FAA
charging all there.

353
00:15:59,200 --> 00:16:00,210
We need to divide

354
00:16:00,210 --> 00:16:03,125
the new Internet
architecture.

355
00:16:03,125 --> 00:16:05,010
The starting point at

356
00:16:05,010 --> 00:16:06,790
the very beginning
were focused

357
00:16:06,790 --> 00:16:10,860
on that how we support
Internet at scale.

358
00:16:10,860 --> 00:16:13,165
But think about it.

359
00:16:13,165 --> 00:16:16,195
We have been doing
networking using

360
00:16:16,195 --> 00:16:18,990
hydrolysis from back then,

361
00:16:18,990 --> 00:16:21,400
already 30 plus years.

362
00:16:21,400 --> 00:16:24,460
This idea of naming data

363
00:16:24,460 --> 00:16:27,425
and the stateful
forwarding were just as

364
00:16:27,425 --> 00:16:30,570
two novel concept and

365
00:16:30,570 --> 00:16:32,930
the team gets bombarded

366
00:16:32,930 --> 00:16:34,294
with all the questions.

367
00:16:34,294 --> 00:16:38,790
How can such approaches
possibly scale?

368
00:16:38,790 --> 00:16:41,700
Rather than the question
to say what you can

369
00:16:41,700 --> 00:16:45,095
do with this brand
new concepts?

370
00:16:45,095 --> 00:16:47,675
We really spend
the last few years

371
00:16:47,675 --> 00:16:50,010
after they focus
on the problems.

372
00:16:50,010 --> 00:16:52,075
Those are important
questions,

373
00:16:52,075 --> 00:16:56,340
but not the first order
burning questions.

374
00:16:56,340 --> 00:16:58,310
Would you leave the world

375
00:16:58,310 --> 00:17:00,480
a better understanding of

376
00:17:00,480 --> 00:17:03,150
how to do a new
architecture?

377
00:17:03,160 --> 00:17:08,405
Architecture solves
application problems,

378
00:17:08,405 --> 00:17:11,250
not network
forward problems.

379
00:17:11,250 --> 00:17:12,675
Therefore it really

380
00:17:12,675 --> 00:17:15,320
requires an
overall picture.

381
00:17:15,320 --> 00:17:18,879
If one solely focused
on how network

382
00:17:18,879 --> 00:17:22,580
can efficiently
forwarding pay kits,

383
00:17:22,580 --> 00:17:24,690
just the other
network layer.

384
00:17:24,690 --> 00:17:28,290
You would never gets to

385
00:17:28,290 --> 00:17:31,890
departing from the
existing IP model.

386
00:17:31,890 --> 00:17:37,905
That's really my
insight, get out of it.

387
00:17:37,905 --> 00:17:40,280
The new
architecture really

388
00:17:40,280 --> 00:17:41,990
start from edges,

389
00:17:41,990 --> 00:17:44,850
even as IP when

390
00:17:44,850 --> 00:17:48,190
both NIST has changed
over the years.

391
00:17:48,190 --> 00:17:50,290
IP started from the edge

392
00:17:50,290 --> 00:17:53,205
by addressing the
burning issues.

393
00:17:53,205 --> 00:17:54,295
How we can build a

394
00:17:54,295 --> 00:17:59,730
resilient communication
system out

395
00:17:59,730 --> 00:18:02,550
of this best
effort delivery

396
00:18:02,550 --> 00:18:06,745
of datagrams from
anywhere to anywhere.

397
00:18:06,745 --> 00:18:10,190
For Endian to really

398
00:18:10,190 --> 00:18:13,030
launching a new
architecture evolution,

399
00:18:13,030 --> 00:18:15,015
we need to start
from the edge

400
00:18:15,015 --> 00:18:16,440
and not the
infrastructure.

401
00:18:16,440 --> 00:18:18,640
I remember back in the

402
00:18:18,640 --> 00:18:23,195
2017 when we had the
SITCOM hosted at UCLA,

403
00:18:23,195 --> 00:18:25,075
we had informal PI meeting

404
00:18:25,075 --> 00:18:26,840
and we already made it

405
00:18:26,840 --> 00:18:28,525
very clear that direction

406
00:18:28,525 --> 00:18:31,330
of Endian will be edging.

407
00:18:33,290 --> 00:18:37,640
Lesson number 2.
We really from

408
00:18:37,640 --> 00:18:40,430
last year how we

409
00:18:40,430 --> 00:18:44,320
look back and understand
our own limitations.

410
00:18:44,320 --> 00:18:49,140
Van whose always
sharp look

411
00:18:49,140 --> 00:18:50,955
into the problems
to the facts.

412
00:18:50,955 --> 00:18:52,910
I remember his comment

413
00:18:52,910 --> 00:18:55,555
that seems that a lot of

414
00:18:55,555 --> 00:18:57,630
the research is done in

415
00:18:57,630 --> 00:19:00,740
the researchers'
comforts zone.

416
00:19:00,740 --> 00:19:02,985
I think this statement is

417
00:19:02,985 --> 00:19:06,165
a little over shooting,

418
00:19:06,165 --> 00:19:08,595
but I can see that there

419
00:19:08,595 --> 00:19:11,675
is a problem,
he pointed out.

420
00:19:11,675 --> 00:19:13,170
I think there's a layer to

421
00:19:13,170 --> 00:19:15,755
Internet
architecture somehow

422
00:19:15,755 --> 00:19:17,700
seemed to how segregated

423
00:19:17,700 --> 00:19:20,615
not only the
functional modules,

424
00:19:20,615 --> 00:19:22,880
but also the
research community

425
00:19:22,880 --> 00:19:24,815
and the peoples
to expertise.

426
00:19:24,815 --> 00:19:27,010
I would admits that
the majority of

427
00:19:27,010 --> 00:19:29,300
NDN *** came with

428
00:19:29,300 --> 00:19:31,460
a network background
and therefore,

429
00:19:31,460 --> 00:19:36,055
we don't have the
intact understanding

430
00:19:36,055 --> 00:19:38,120
of what are the
burning issues

431
00:19:38,120 --> 00:19:40,810
that applications
must dissolve.

432
00:19:40,810 --> 00:19:43,820
We are still
unfortunately how

433
00:19:43,820 --> 00:19:45,860
Professor Jeff Burke,

434
00:19:45,860 --> 00:19:48,195
who came from the
application area.

435
00:19:48,195 --> 00:19:49,460
I think he provided

436
00:19:49,460 --> 00:19:52,485
a tremendous and
invaluable input,

437
00:19:52,485 --> 00:19:56,440
still the research
going towards

438
00:19:56,440 --> 00:20:00,780
the direction of
addressing these problems.

439
00:20:01,780 --> 00:20:04,580
I think that
these 10 years

440
00:20:04,580 --> 00:20:06,320
of training is
really the place of

441
00:20:06,320 --> 00:20:09,065
training to make one

442
00:20:09,065 --> 00:20:11,090
to see the big
picture and to become

443
00:20:11,090 --> 00:20:12,845
a journalist instead of

444
00:20:12,845 --> 00:20:14,570
a specialist with

445
00:20:14,570 --> 00:20:17,315
a narrative focused
research agenda.

446
00:20:17,315 --> 00:20:20,015
How to develop
the architecture?

447
00:20:20,015 --> 00:20:23,030
I think gradually
over time,

448
00:20:23,030 --> 00:20:26,120
we actually saw
that more clearly

449
00:20:26,120 --> 00:20:27,890
that ultimately
the goal for

450
00:20:27,890 --> 00:20:30,530
the networking is to
enable applications.

451
00:20:30,530 --> 00:20:32,180
Then we actually
putting into

452
00:20:32,180 --> 00:20:33,740
annual report as saying

453
00:20:33,740 --> 00:20:34,970
that we really need to

454
00:20:34,970 --> 00:20:37,790
move towards
this application

455
00:20:37,790 --> 00:20:40,040
driven architecture
development.

456
00:20:40,040 --> 00:20:42,754
Because solving real
problems will force

457
00:20:42,754 --> 00:20:44,300
all the specifics on

458
00:20:44,300 --> 00:20:47,630
the table and you had
to fill in the details.

459
00:20:47,630 --> 00:20:49,460
The more importantly,

460
00:20:49,460 --> 00:20:52,865
we're here help us
verify and validate

461
00:20:52,865 --> 00:20:54,935
whether this
architecture design

462
00:20:54,935 --> 00:20:57,365
isn't moving towards
the right direction.

463
00:20:57,365 --> 00:20:59,675
I think in the
more recent years,

464
00:20:59,675 --> 00:21:01,175
in particular last year,

465
00:21:01,175 --> 00:21:02,660
the focus has been moving

466
00:21:02,660 --> 00:21:05,315
towards building
usable applications.

467
00:21:05,315 --> 00:21:07,280
That tracked the
application developers

468
00:21:07,280 --> 00:21:08,480
[inaudible].

469
00:21:08,480 --> 00:21:13,115
As you can see from
the next two days,

470
00:21:13,115 --> 00:21:15,065
there's a major focus

471
00:21:15,065 --> 00:21:17,045
about building
high level APIs,

472
00:21:17,045 --> 00:21:19,760
usable security, and
the plug and play so

473
00:21:19,760 --> 00:21:22,745
that we both solve
the problems.

474
00:21:22,745 --> 00:21:25,220
We also opens the door to

475
00:21:25,220 --> 00:21:28,685
engage the large
community,

476
00:21:28,685 --> 00:21:31,400
regarding where
we are now.

477
00:21:31,400 --> 00:21:32,975
Let me take it quick,

478
00:21:32,975 --> 00:21:34,265
I'm running out of time.

479
00:21:34,265 --> 00:21:36,620
I think that people
should understand.

480
00:21:36,620 --> 00:21:40,700
Developing architecture
takes time.

481
00:21:40,700 --> 00:21:42,695
The Internet may look

482
00:21:42,695 --> 00:21:45,200
like an overnight success.

483
00:21:45,200 --> 00:21:47,120
But I want to
point it out that

484
00:21:47,120 --> 00:21:49,190
the Internet [inaudible]
that started

485
00:21:49,190 --> 00:21:50,870
in the early '70s

486
00:21:50,870 --> 00:21:53,495
is actually it takes
about 20 years,

487
00:21:53,495 --> 00:21:56,255
when the white
just formed.

488
00:21:56,255 --> 00:22:00,970
But it took the
previous 20 years to

489
00:22:00,970 --> 00:22:03,940
finalize the architecture

490
00:22:03,940 --> 00:22:07,715
to mature the
implementation.

491
00:22:07,715 --> 00:22:11,435
Between the '81
to the '90s.

492
00:22:11,435 --> 00:22:15,260
Ten plus years where
a number of issues

493
00:22:15,260 --> 00:22:19,010
was identified and
fixed in [inaudible],

494
00:22:19,010 --> 00:22:20,345
PGP got I did.

495
00:22:20,345 --> 00:22:23,990
Congestion can show into

496
00:22:23,990 --> 00:22:26,450
a real problem and get

497
00:22:26,450 --> 00:22:28,970
the soft and a number
of other issues.

498
00:22:28,970 --> 00:22:31,370
I think we are
currently in

499
00:22:31,370 --> 00:22:34,490
the beginning
of that long.

500
00:22:34,490 --> 00:22:37,715
The only other process
that we have learned.

501
00:22:37,715 --> 00:22:39,320
What are the
most difficult

502
00:22:39,320 --> 00:22:40,490
things to push out

503
00:22:40,490 --> 00:22:43,805
NDN and we learnt about
how to get there.

504
00:22:43,805 --> 00:22:45,515
That is edge-in.

505
00:22:45,515 --> 00:22:47,390
Here what I mean is that,

506
00:22:47,390 --> 00:22:48,980
you really need to develop

507
00:22:48,980 --> 00:22:50,330
the solutions and try it

508
00:22:50,330 --> 00:22:51,845
out at the edges

509
00:22:51,845 --> 00:22:54,335
like supporting
edge computing.

510
00:22:54,335 --> 00:22:56,060
As well as we develop

511
00:22:56,060 --> 00:22:57,440
for applications
that can't

512
00:22:57,440 --> 00:23:01,385
really run over anything,
any connectivity.

513
00:23:01,385 --> 00:23:06,440
That we can test the
architecture to see

514
00:23:06,440 --> 00:23:08,570
this architecture is doing

515
00:23:08,570 --> 00:23:10,055
the right thing
and what's maybe

516
00:23:10,055 --> 00:23:12,350
missing we could
add it up.

517
00:23:12,350 --> 00:23:14,420
This is my last slide.

518
00:23:14,420 --> 00:23:15,755
I just want to say that

519
00:23:15,755 --> 00:23:17,540
this is a
community meeting.

520
00:23:17,540 --> 00:23:19,655
Lots of you
already talked.

521
00:23:19,655 --> 00:23:21,080
In the next two days,

522
00:23:21,080 --> 00:23:22,340
we're really looking to

523
00:23:22,340 --> 00:23:22,835
a sharing

524
00:23:22,835 --> 00:23:24,440
all the achievements
over the years,

525
00:23:24,440 --> 00:23:26,030
identify the new issues,

526
00:23:26,030 --> 00:23:28,070
and then collecting
input to formulate to

527
00:23:28,070 --> 00:23:29,450
the marching order for

528
00:23:29,450 --> 00:23:32,160
the coming year.
Thank you very much.

529
00:23:36,580 --> 00:23:38,960
>> Made sure your timing

530
00:23:38,960 --> 00:23:41,315
is extraordinary.
Well done.

531
00:23:41,315 --> 00:23:44,915
I've got one question
has come in via chat.

532
00:23:44,915 --> 00:23:47,180
Others, please do.

533
00:23:47,180 --> 00:23:48,980
Hope we can spend
our next few minutes

534
00:23:48,980 --> 00:23:52,370
here picking leashes
brain productively.

535
00:23:52,370 --> 00:23:54,530
One question for you via

536
00:23:54,530 --> 00:23:57,650
chat here from Kumar.

537
00:23:57,650 --> 00:24:00,710
What is the scale of NDN?

538
00:24:00,710 --> 00:24:02,150
Interested in how you

539
00:24:02,150 --> 00:24:04,110
interpret that question?

540
00:24:05,950 --> 00:24:08,360
>> That's a
great question.

541
00:24:08,360 --> 00:24:10,040
This actually, I
didn't have time to

542
00:24:10,040 --> 00:24:12,080
elaborate on
this last year.

543
00:24:12,080 --> 00:24:14,135
This is a fundamental
question.

544
00:24:14,135 --> 00:24:17,945
It's NDN just a, not
really our problems.

545
00:24:17,945 --> 00:24:20,420
I think that that's
related question.

546
00:24:20,420 --> 00:24:22,715
That's reading the scale.

547
00:24:22,715 --> 00:24:25,085
I think NDN fundamentally

548
00:24:25,085 --> 00:24:27,320
provides a way to look

549
00:24:27,320 --> 00:24:29,990
at how to build network

550
00:24:29,990 --> 00:24:33,565
the systems, starting
from application.

551
00:24:33,565 --> 00:24:35,020
Because like I said,

552
00:24:35,020 --> 00:24:37,585
I kept using the
informal words,

553
00:24:37,585 --> 00:24:39,430
application is a goal.

554
00:24:39,430 --> 00:24:41,635
What we do is to

555
00:24:41,635 --> 00:24:44,400
provide what
applications needed.

556
00:24:44,400 --> 00:24:46,670
Therefore, I can
think of NDN

557
00:24:46,670 --> 00:24:48,560
as a way to solve
[inaudible] and

558
00:24:48,560 --> 00:24:50,480
ethical problems without

559
00:24:50,480 --> 00:24:53,645
a clear understanding
of application needs,

560
00:24:53,645 --> 00:24:57,710
you will never solve
the real problem.

561
00:24:57,710 --> 00:25:00,225
The simple
example would be,

562
00:25:00,225 --> 00:25:04,685
IP side the point
of delivery.

563
00:25:04,685 --> 00:25:07,490
But hides the Internet is

564
00:25:07,490 --> 00:25:10,520
still only do
point-to-point delivery.

565
00:25:10,520 --> 00:25:13,370
It already mattered
down years back.

566
00:25:13,370 --> 00:25:15,905
Today what we do
is we're pass

567
00:25:15,905 --> 00:25:20,510
this multicast equivalent
dissemination,

568
00:25:20,510 --> 00:25:22,460
but not at the
network layer because

569
00:25:22,460 --> 00:25:24,620
IT has not changed.

570
00:25:24,620 --> 00:25:27,410
But it is a CDN companies

571
00:25:27,410 --> 00:25:29,510
provided at the function,

572
00:25:29,510 --> 00:25:32,240
at the application layer
through all kinds of

573
00:25:32,240 --> 00:25:37,470
tricks and cheats on
the architecture.

574
00:25:38,200 --> 00:25:40,700
Understanding
what to correct

575
00:25:40,700 --> 00:25:41,990
the building block,

576
00:25:41,990 --> 00:25:45,140
we can lead to alter
the future with

577
00:25:45,140 --> 00:25:47,240
this simple
architecture and

578
00:25:47,240 --> 00:25:49,590
with the security
built in.

579
00:25:49,840 --> 00:25:55,655
>> Good. In the last
couple of minutes,

580
00:25:55,655 --> 00:25:56,780
here a pair of

581
00:25:56,780 --> 00:25:58,610
questions have
come in which all

582
00:25:58,610 --> 00:26:02,915
synthesizes what do
you think is needed?

583
00:26:02,915 --> 00:26:04,340
The first question
is what do

584
00:26:04,340 --> 00:26:05,960
you think is needed for

585
00:26:05,960 --> 00:26:10,070
wider adoption
in commercial

586
00:26:10,070 --> 00:26:11,510
and sort of
application domains?

587
00:26:11,510 --> 00:26:14,225
That's the first and
then the second are,

588
00:26:14,225 --> 00:26:16,565
what are your
thoughts about

589
00:26:16,565 --> 00:26:18,275
or what are your pointers

590
00:26:18,275 --> 00:26:20,630
for important near chart

591
00:26:20,630 --> 00:26:23,390
research directions
should be tackled next?

592
00:26:23,390 --> 00:26:26,915
>> Let me answer the
second question first,

593
00:26:26,915 --> 00:26:30,860
because we are working

594
00:26:30,860 --> 00:26:32,810
on collecting
those pointers.

595
00:26:32,810 --> 00:26:34,370
This not there yet.

596
00:26:34,370 --> 00:26:36,380
But as soon as
we get ready,

597
00:26:36,380 --> 00:26:38,405
we'll sent to
the community.

598
00:26:38,405 --> 00:26:40,535
We're thinking about
global community.

599
00:26:40,535 --> 00:26:43,310
We need to first
collect a set of

600
00:26:43,310 --> 00:26:46,250
educational pointers
for people to

601
00:26:46,250 --> 00:26:48,305
learn about NDN and

602
00:26:48,305 --> 00:26:51,230
the tutorials to
the code base and

603
00:26:51,230 --> 00:26:53,795
the problems for people

604
00:26:53,795 --> 00:26:54,950
interested to

605
00:26:54,950 --> 00:26:57,484
contribute to the
solution development.

606
00:26:57,484 --> 00:27:00,810
As for the first one.

607
00:27:04,300 --> 00:27:07,220
Let me just state
in the early days,

608
00:27:07,220 --> 00:27:11,000
the focus was on the
natural level and that,

609
00:27:11,000 --> 00:27:12,590
all this competition,

610
00:27:12,590 --> 00:27:15,380
there's attempted
to trick to

611
00:27:15,380 --> 00:27:17,150
the architecture to
see how it can change

612
00:27:17,150 --> 00:27:19,085
the NDN architecture
as a design.

613
00:27:19,085 --> 00:27:20,645
I mean the NDN
architecture

614
00:27:20,645 --> 00:27:23,240
to make the NDN
router run fast.

615
00:27:23,240 --> 00:27:26,540
I think that is not
the right direction.

616
00:27:26,540 --> 00:27:28,970
NDN router needs
to run fast.

617
00:27:28,970 --> 00:27:30,710
Nevertheless,
if we thought

618
00:27:30,710 --> 00:27:33,065
the applications
produce traffic,

619
00:27:33,065 --> 00:27:36,050
there's no point to build

620
00:27:36,050 --> 00:27:38,540
terabytes NDN routers

621
00:27:38,540 --> 00:27:40,280
The fundamental thing is,

622
00:27:40,280 --> 00:27:44,300
I said, networking is
to enable applications.

623
00:27:44,300 --> 00:27:46,910
Applications have
problems today,

624
00:27:46,910 --> 00:27:50,610
to really scale,

625
00:27:50,770 --> 00:27:54,020
to secure, and
more importantly.

626
00:27:54,020 --> 00:27:55,700
I hope in actually
trying to

627
00:27:55,700 --> 00:27:57,620
encouraging my
former students to

628
00:27:57,620 --> 00:28:01,310
start house in the area of

629
00:28:01,310 --> 00:28:06,125
developing the age
in applications.

630
00:28:06,125 --> 00:28:08,945
You can develop a smart
home applications.

631
00:28:08,945 --> 00:28:13,655
That's not shipping
all your home secret,

632
00:28:13,655 --> 00:28:16,115
like my conversation
with my husband.

633
00:28:16,115 --> 00:28:22,385
Oh, God. To the home
devices into the car.

634
00:28:22,385 --> 00:28:24,680
The secure applications.

635
00:28:24,680 --> 00:28:26,330
Then we don't know
how to argue and

636
00:28:26,330 --> 00:28:29,225
about how Amazon
or Google,

637
00:28:29,225 --> 00:28:31,910
while they might
say considerations.

638
00:28:31,910 --> 00:28:33,995
If you didn't
put your data

639
00:28:33,995 --> 00:28:35,960
into the Clouds in
the first place,

640
00:28:35,960 --> 00:28:36,620
if you need that,

641
00:28:36,620 --> 00:28:41,030
use the Clouds
for archiving,

642
00:28:41,030 --> 00:28:43,535
you sent the
encrypted data.

643
00:28:43,535 --> 00:28:46,025
I think that we can
step factor level,

644
00:28:46,025 --> 00:28:47,180
look at a lot

645
00:28:47,180 --> 00:28:49,295
of effort that's
going on today.

646
00:28:49,295 --> 00:28:51,800
Let's aims at amending

647
00:28:51,800 --> 00:28:54,650
the shortcomings
of the existing

648
00:28:54,650 --> 00:28:58,180
[BACKGROUND] solutions
instead of dividing

649
00:28:58,180 --> 00:29:01,595
a solution from the
first principle

650
00:29:01,595 --> 00:29:05,059
to just eliminate
those problems.

651
00:29:05,059 --> 00:29:07,835
Again, when we
build up to this,

652
00:29:07,835 --> 00:29:09,110
not only we should

653
00:29:09,110 --> 00:29:11,150
list the short-term
project,

654
00:29:11,150 --> 00:29:15,115
we probably can also
list our guesses,

655
00:29:15,115 --> 00:29:19,240
what may be the
urgent needs

656
00:29:19,240 --> 00:29:20,890
for the product in

657
00:29:20,890 --> 00:29:23,390
the market that
people can try.

658
00:29:24,520 --> 00:29:26,945
>> That's great, Alicia.

659
00:29:26,945 --> 00:29:28,730
Thank you and I think
we'll continue to

660
00:29:28,730 --> 00:29:31,235
revisit some of
your thoughts here.

661
00:29:31,235 --> 00:29:33,545
Progress to the
next two days.

662
00:29:33,545 --> 00:29:35,270
Thank you very much.

663
00:29:35,270 --> 00:29:36,485
>> Thank you.

664
00:29:36,485 --> 00:29:40,550
>> Time is sadly
running right along.

665
00:29:40,550 --> 00:29:44,540
Next up in session one is

666
00:29:44,540 --> 00:29:49,220
Professor Beichuan
Zhang from

667
00:29:49,220 --> 00:29:50,960
the Department of
Computer Science

668
00:29:50,960 --> 00:29:53,300
at the University
of Arizona.

669
00:29:53,300 --> 00:29:55,520
I'm going to keep my
[NOISE] introduction

670
00:29:55,520 --> 00:29:57,575
brief so that we can

671
00:29:57,575 --> 00:30:02,810
maximize the time
given to the speakers.

672
00:30:02,810 --> 00:30:08,615
He'll giving
us an overview

673
00:30:08,615 --> 00:30:11,195
of the NDM codebase.

674
00:30:11,195 --> 00:30:14,720
Hopefully Beichuan, you

675
00:30:14,720 --> 00:30:16,520
can turn on your
camera and start

676
00:30:16,520 --> 00:30:19,145
sharing your slides.
Welcome, Beichuan.

677
00:30:19,145 --> 00:30:22,290
>> Patrick, can
you see my slides?

678
00:30:23,440 --> 00:30:26,345
>> Yes, indeed, we can
see them just fine.

679
00:30:26,345 --> 00:30:28,880
>> Great. Thank
you, Patrick.

680
00:30:28,880 --> 00:30:31,700
It's great to be here part

681
00:30:31,700 --> 00:30:34,175
of the NDN come
to discuss how

682
00:30:34,175 --> 00:30:36,155
to move forward NDN

683
00:30:36,155 --> 00:30:40,670
and the overall pricing
based architecture.

684
00:30:40,670 --> 00:30:43,820
My job in this talk is to

685
00:30:43,820 --> 00:30:46,835
give a overview of
the code development.

686
00:30:46,835 --> 00:30:51,330
However, over the
past 10 years,

687
00:30:52,270 --> 00:30:55,400
the original NDN
product team and

688
00:30:55,400 --> 00:30:57,740
also the general
NDN IC and

689
00:30:57,740 --> 00:31:01,730
community has developed
so much codebase

690
00:31:01,730 --> 00:31:03,710
and so many software.

691
00:31:03,710 --> 00:31:07,280
It's impossible to
cover everything.

692
00:31:07,280 --> 00:31:08,960
Also, I don't think

693
00:31:08,960 --> 00:31:10,730
that's the
purpose of people

694
00:31:10,730 --> 00:31:14,285
coming to this
community meeting.

695
00:31:14,285 --> 00:31:18,109
Rather than doing a
comprehensive coverage,

696
00:31:18,109 --> 00:31:20,960
I want to give a
quick overview of

697
00:31:20,960 --> 00:31:23,120
some major basic NDN

698
00:31:23,120 --> 00:31:26,120
software development
effort and

699
00:31:26,120 --> 00:31:30,200
then recurse on
recent progress

700
00:31:30,200 --> 00:31:31,520
and the status of those.

701
00:31:31,520 --> 00:31:34,400
But really the main
intention is to set up

702
00:31:34,400 --> 00:31:38,305
the background for
the next two days

703
00:31:38,305 --> 00:31:41,230
when we discuss how to
improve the process,

704
00:31:41,230 --> 00:31:46,600
how to improve the
overall software

705
00:31:46,600 --> 00:31:50,840
and the development
effort.

706
00:31:53,080 --> 00:31:56,660
The first thing is the
forwarding daemon,

707
00:31:56,660 --> 00:31:59,780
the NDN forwarding
daemon we call it an FD.

708
00:31:59,780 --> 00:32:01,700
That's probably

709
00:32:01,700 --> 00:32:04,610
the oldest software
we developed.

710
00:32:04,610 --> 00:32:07,955
The intention is to be

711
00:32:07,955 --> 00:32:10,010
a reference
implementation of

712
00:32:10,010 --> 00:32:12,725
the basic NDN
functionality.

713
00:32:12,725 --> 00:32:16,250
It's C++ implementation.

714
00:32:16,250 --> 00:32:17,900
It has all the basic

715
00:32:17,900 --> 00:32:20,105
NDN packet forwarding
mechanism,

716
00:32:20,105 --> 00:32:22,025
has a contents
store for caching,

717
00:32:22,025 --> 00:32:23,450
pending interest table,

718
00:32:23,450 --> 00:32:25,280
and the forwarding table.

719
00:32:25,280 --> 00:32:27,725
Currently we support

720
00:32:27,725 --> 00:32:30,020
multiple forwarding
strategies.

721
00:32:30,020 --> 00:32:31,400
For example, there's

722
00:32:31,400 --> 00:32:34,025
multicast forwarding
strategy that

723
00:32:34,025 --> 00:32:36,500
an income interests
can go to

724
00:32:36,500 --> 00:32:40,625
multiple next hop
at same time.

725
00:32:40,625 --> 00:32:44,614
We have the so-called
best router strategy,

726
00:32:44,614 --> 00:32:46,880
which will foward
interests to

727
00:32:46,880 --> 00:32:50,705
the best next-hop that
is the current moment.

728
00:32:50,705 --> 00:32:53,390
But if that next
hop doesn't work or

729
00:32:53,390 --> 00:32:55,970
doesn't work well, yeah,

730
00:32:55,970 --> 00:32:58,235
if that next hop doesn't
bring data back,

731
00:32:58,235 --> 00:32:59,990
then the strategy will

732
00:32:59,990 --> 00:33:01,280
forward the next interests

733
00:33:01,280 --> 00:33:05,120
to the second
best next hop.

734
00:33:05,120 --> 00:33:09,980
We also have the
so-called ASF strategy.

735
00:33:09,980 --> 00:33:14,165
That strategy will
proactively prove

736
00:33:14,165 --> 00:33:18,245
some other next hops and

737
00:33:18,245 --> 00:33:20,960
choose whichever
give the data

738
00:33:20,960 --> 00:33:24,005
back earliest and
we'll use that one.

739
00:33:24,005 --> 00:33:30,365
There's also interface
to add new strategies.

740
00:33:30,365 --> 00:33:33,110
One intention of
the design is

741
00:33:33,110 --> 00:33:35,915
to make it modular so that

742
00:33:35,915 --> 00:33:40,100
researchers can plug in
their own strategies

743
00:33:40,100 --> 00:33:45,410
and other improvement
of the code.

744
00:33:45,410 --> 00:33:47,780
Also, in the same spirit,

745
00:33:47,780 --> 00:33:50,495
we expose the internals of

746
00:33:50,495 --> 00:33:53,525
the NFD to applications

747
00:33:53,525 --> 00:33:55,955
through NFD
Management Protocol,

748
00:33:55,955 --> 00:34:00,635
which communicated
between the application

749
00:34:00,635 --> 00:34:02,210
and NFD itself,

750
00:34:02,210 --> 00:34:04,355
yielding interests
and data.

751
00:34:04,355 --> 00:34:06,770
This way you can
configure and

752
00:34:06,770 --> 00:34:09,570
control the
forwarding daemon.

753
00:34:11,110 --> 00:34:15,260
The NFD runs on
multiple platforms.

754
00:34:15,260 --> 00:34:19,385
We actively maintain
its Android version.

755
00:34:19,385 --> 00:34:24,635
Try to keep up with the
main release of NFD.

756
00:34:24,635 --> 00:34:27,815
We also successfully
run it on

757
00:34:27,815 --> 00:34:29,975
some other platform such

758
00:34:29,975 --> 00:34:33,440
as WRT for the
home router,

759
00:34:33,440 --> 00:34:35,600
Raspberry Pi and
some others.

760
00:34:35,600 --> 00:34:38,780
But some of these

761
00:34:38,780 --> 00:34:41,179
are actively maintained
by individuals,

762
00:34:41,179 --> 00:34:44,060
but some of them are not
actively maintained.

763
00:34:44,060 --> 00:34:45,860
But in general, I believe

764
00:34:45,860 --> 00:34:47,285
it's not much effort

765
00:34:47,285 --> 00:34:51,360
to pull this to a
similar platform.

766
00:34:52,000 --> 00:34:54,980
NFD right now runs on

767
00:34:54,980 --> 00:34:58,715
the NDN testbed maintained
by Zhenkai Zhu.

768
00:34:58,715 --> 00:35:00,695
This testbed I was

769
00:35:00,695 --> 00:35:03,980
about 30 plus
knows globally

770
00:35:03,980 --> 00:35:06,530
and activity
running this NFD

771
00:35:06,530 --> 00:35:09,875
and the default
strategy is ASF.

772
00:35:09,875 --> 00:35:14,750
If you do an experiment
on the NDN testbed,

773
00:35:14,750 --> 00:35:16,640
this will be the
forwarding beam

774
00:35:16,640 --> 00:35:19,410
and you're going
to use underlie.

775
00:35:19,560 --> 00:35:22,570
The NDN tools is

776
00:35:22,570 --> 00:35:27,360
a package of some basic
NDN applications.

777
00:35:27,360 --> 00:35:32,180
If you're a new user
and you try NFD,

778
00:35:32,180 --> 00:35:35,945
you probably will also
get this NDN tools,

779
00:35:35,945 --> 00:35:37,880
so that you can run

780
00:35:37,880 --> 00:35:40,400
the application on top
of it and test it.

781
00:35:40,400 --> 00:35:43,070
NDN tools including
tools such

782
00:35:43,070 --> 00:35:46,760
as silver file,

783
00:35:46,760 --> 00:35:50,435
retriever file, you
can log the traffic.

784
00:35:50,435 --> 00:35:54,290
You can have the
packet dissector

785
00:35:54,290 --> 00:35:55,340
to read the log

786
00:35:55,340 --> 00:35:58,610
and some simple tools

787
00:35:58,610 --> 00:36:02,490
to help use and
tell the software.

788
00:36:04,380 --> 00:36:09,385
We keep actively
developing an ID

789
00:36:09,385 --> 00:36:11,365
and a new release is

790
00:36:11,365 --> 00:36:14,190
probably going to
happen very soon.

791
00:36:14,190 --> 00:36:15,530
In this new release,

792
00:36:15,530 --> 00:36:17,209
you're going to
see we completed

793
00:36:17,209 --> 00:36:21,530
the transition to packet
format Version 0.3,

794
00:36:21,530 --> 00:36:23,360
which has a bunch

795
00:36:23,360 --> 00:36:25,790
of changes to the
packet format.

796
00:36:25,790 --> 00:36:28,879
I'd actually hide
some highlights.

797
00:36:28,879 --> 00:36:32,835
There's new signed
interests format.

798
00:36:32,835 --> 00:36:35,290
Most interests, they
are not signed,

799
00:36:35,290 --> 00:36:38,200
but optionally you can
sign the interests.

800
00:36:38,200 --> 00:36:39,925
For example, if actually

801
00:36:39,925 --> 00:36:41,920
carries the command
that what device,

802
00:36:41,920 --> 00:36:44,485
you'll want to sign
that interests.

803
00:36:44,485 --> 00:36:46,510
That format for

804
00:36:46,510 --> 00:36:49,015
the assigned interests
got updated.

805
00:36:49,015 --> 00:36:54,160
We also have updated
some naming conventions.

806
00:36:54,160 --> 00:36:58,674
For example, if a
particular name component

807
00:36:58,674 --> 00:37:00,400
has some special meaning,

808
00:37:00,400 --> 00:37:05,300
rather than
using some code,

809
00:37:05,300 --> 00:37:07,775
we say here is the type,

810
00:37:07,775 --> 00:37:10,310
you can type the
component of

811
00:37:10,310 --> 00:37:13,985
a name so that it more,

812
00:37:13,985 --> 00:37:17,270
consistent across
the usage of

813
00:37:17,270 --> 00:37:20,734
this special
name components.

814
00:37:20,734 --> 00:37:22,790
Also in this release,

815
00:37:22,790 --> 00:37:24,725
we draw up to the support

816
00:37:24,725 --> 00:37:27,305
of most of the selectors.

817
00:37:27,305 --> 00:37:31,265
If people don't know
what's selectors are,

818
00:37:31,265 --> 00:37:38,614
those are tutors on

819
00:37:38,614 --> 00:37:41,465
when we do the name
and data matching.

820
00:37:41,465 --> 00:37:45,140
In addition to include

821
00:37:45,140 --> 00:37:46,565
names and your interests,

822
00:37:46,565 --> 00:37:51,035
you can also include
some selectors to limit

823
00:37:51,035 --> 00:37:56,450
which data might
satisfy that interests.

824
00:37:56,450 --> 00:37:59,660
We find that most of

825
00:37:59,660 --> 00:38:02,960
selectors are
either rarely

826
00:38:02,960 --> 00:38:05,360
used or cause

827
00:38:05,360 --> 00:38:10,235
significant problem
to the performance.

828
00:38:10,235 --> 00:38:13,205
We have found
the alternatives

829
00:38:13,205 --> 00:38:15,710
to achieve those
functionality.

830
00:38:15,710 --> 00:38:17,120
Therefore, we

831
00:38:17,120 --> 00:38:19,639
dropped the support
of the selectors.

832
00:38:19,639 --> 00:38:22,550
We added support
of hop limit

833
00:38:22,550 --> 00:38:29,840
so you can lead me
to the worst-case.

834
00:38:29,840 --> 00:38:33,690
How long a packet can
live in the network.

835
00:38:35,450 --> 00:38:38,940
A new feature that's
going to be included in

836
00:38:38,940 --> 00:38:42,290
this release is so-called
async behavior.

837
00:38:42,290 --> 00:38:45,440
What happens is if there

838
00:38:45,440 --> 00:38:49,084
are new interests
coming into the NRD

839
00:38:49,084 --> 00:38:54,210
and there's no cache data

840
00:38:54,210 --> 00:38:56,120
and there's no
routing entry

841
00:38:56,120 --> 00:38:57,910
to forward that interest.

842
00:38:57,910 --> 00:39:00,160
Previously, NRD will drop

843
00:39:00,160 --> 00:39:01,375
those interests because it

844
00:39:01,375 --> 00:39:03,940
doesn't know what to do
with those interests.

845
00:39:03,940 --> 00:39:08,700
But in some applications,

846
00:39:08,700 --> 00:39:10,920
they send interests before

847
00:39:10,920 --> 00:39:13,139
the data was
actually generated

848
00:39:13,139 --> 00:39:14,605
or even before

849
00:39:14,605 --> 00:39:17,425
the routing prefix
was announced.

850
00:39:17,425 --> 00:39:19,425
But we want to

851
00:39:19,425 --> 00:39:22,195
accommodate this
use scenario so

852
00:39:22,195 --> 00:39:25,020
that the data retrieval

853
00:39:25,020 --> 00:39:26,830
can happen asynchronously,

854
00:39:26,830 --> 00:39:30,520
meaning the consumer and

855
00:39:30,520 --> 00:39:33,445
the producer don't have

856
00:39:33,445 --> 00:39:35,925
to be online at
the same time.

857
00:39:35,925 --> 00:39:38,250
The producer
can put data at

858
00:39:38,250 --> 00:39:40,770
one time and consumer
can retrieve data

859
00:39:40,770 --> 00:39:43,350
at another time
and either event

860
00:39:43,350 --> 00:39:46,690
can happen
earlier or later.

861
00:39:46,690 --> 00:39:50,830
To support that,
NRD has to buffer

862
00:39:50,830 --> 00:39:52,815
the new interest so that

863
00:39:52,815 --> 00:39:55,985
don't have any
forwarding entry yet.

864
00:39:55,985 --> 00:39:59,230
Interests coming
in, no data,

865
00:39:59,230 --> 00:40:00,775
no forwarding entry, and

866
00:40:00,775 --> 00:40:03,420
nothing will buffer
those interests.

867
00:40:03,430 --> 00:40:05,475
At a later time,

868
00:40:05,475 --> 00:40:08,425
if forwarding entry
shows up, for example,

869
00:40:08,425 --> 00:40:10,665
the producer shows up or

870
00:40:10,665 --> 00:40:14,125
a data prefix got
announced then

871
00:40:14,125 --> 00:40:17,485
the NRD will look at
those buffered interests

872
00:40:17,485 --> 00:40:18,915
and send them out

873
00:40:18,915 --> 00:40:21,990
according to this
forwarding entry.

874
00:40:23,030 --> 00:40:24,990
>> Beichuan.

875
00:40:24,990 --> 00:40:25,500
>> Yes.

876
00:40:25,500 --> 00:40:26,965
>> I'm very sorry
to interrupt.

877
00:40:26,965 --> 00:40:28,045
I just wanted to
let you know we're

878
00:40:28,045 --> 00:40:29,130
going to need
to start taking

879
00:40:29,130 --> 00:40:30,775
questions in
about two minutes

880
00:40:30,775 --> 00:40:32,700
if that won't affect you.

881
00:40:32,700 --> 00:40:34,290
I know time is
flying. [OVERLAPPING]

882
00:40:34,290 --> 00:40:37,500
>> I'm sorry.

883
00:40:38,030 --> 00:40:41,860
I think I've lost
track of the time.

884
00:40:43,720 --> 00:40:48,225
We have revision of
NFD Developer's Guide.

885
00:40:48,225 --> 00:40:51,695
There are other
NRD forwarders.

886
00:40:51,695 --> 00:40:54,685
NDN-DPDK you're going
to hear it later today

887
00:40:54,685 --> 00:40:59,275
is focused on
high performance.

888
00:40:59,275 --> 00:41:03,100
YaNFD focus on
simplified design

889
00:41:03,100 --> 00:41:06,620
of the forwarder
compared to NFD.

890
00:41:06,620 --> 00:41:09,840
NDN-Lite is a forwarder

891
00:41:09,840 --> 00:41:11,900
focused on embedded

892
00:41:11,900 --> 00:41:13,540
and constrained
environments.

893
00:41:13,540 --> 00:41:15,410
Although the whole package

894
00:41:15,410 --> 00:41:16,820
is much more than
a forwarder,

895
00:41:16,820 --> 00:41:18,840
it has other libraries

896
00:41:18,840 --> 00:41:21,160
to support applications.

897
00:41:21,200 --> 00:41:23,375
Besides the forwarders,

898
00:41:23,375 --> 00:41:25,660
we also have a number of

899
00:41:25,660 --> 00:41:27,000
libraries to support

900
00:41:27,000 --> 00:41:29,005
different language
bindings.

901
00:41:29,005 --> 00:41:31,710
These libraries
are actually

902
00:41:31,710 --> 00:41:35,310
used in developing
applications.

903
00:41:35,740 --> 00:41:39,090
We have the
sync protocols,

904
00:41:39,090 --> 00:41:40,470
which is basically

905
00:41:40,470 --> 00:41:43,925
the transport protocol
equivalent in NDN.

906
00:41:43,925 --> 00:41:46,885
It synchronize
selected namespace

907
00:41:46,885 --> 00:41:49,225
and data among
multiple participants.

908
00:41:49,225 --> 00:41:52,420
They may start with
different state of

909
00:41:52,420 --> 00:41:53,700
how much data they

910
00:41:53,700 --> 00:41:56,200
have and then after
running a Sync,

911
00:41:56,200 --> 00:41:58,575
they all synchronize
with each other

912
00:41:58,575 --> 00:41:59,970
about the namespace

913
00:41:59,970 --> 00:42:01,735
of data they want to sync.

914
00:42:01,735 --> 00:42:03,630
There are different
designs of

915
00:42:03,630 --> 00:42:05,425
how to do this.

916
00:42:05,425 --> 00:42:08,880
Mostly different from how

917
00:42:08,880 --> 00:42:12,035
they represent the states

918
00:42:12,035 --> 00:42:14,475
and communicate
and synchronize.

919
00:42:14,475 --> 00:42:17,760
PSync use Bloom Filter

920
00:42:17,760 --> 00:42:19,455
and Invertible
Bloom Filter.

921
00:42:19,455 --> 00:42:21,030
StateVectorSync use

922
00:42:21,030 --> 00:42:23,245
a state vector to
represent states.

923
00:42:23,245 --> 00:42:24,950
Both of them are
actually being

924
00:42:24,950 --> 00:42:27,540
actively developed.

925
00:42:27,540 --> 00:42:30,985
NDNCERT and Repo.

926
00:42:30,985 --> 00:42:33,535
The cert is to automate

927
00:42:33,535 --> 00:42:36,075
the managed retrieval
and management

928
00:42:36,075 --> 00:42:38,450
of NDN certificates
to facilitate

929
00:42:38,450 --> 00:42:41,480
all the security
operations.

930
00:42:41,480 --> 00:42:45,290
Repo manage the
data repository

931
00:42:45,290 --> 00:42:46,730
so that you can solve

932
00:42:46,730 --> 00:42:48,550
data without

933
00:42:48,550 --> 00:42:51,584
having the original
data producer

934
00:42:51,584 --> 00:42:53,670
to be online all the time.

935
00:42:54,430 --> 00:42:58,510
We have evaluation
platforms in

936
00:42:58,510 --> 00:43:03,975
different level and
different tools.

937
00:43:03,975 --> 00:43:06,335
NdnSIM is a simulator.

938
00:43:06,335 --> 00:43:10,375
The mini-NDN
virtualized emulator

939
00:43:10,375 --> 00:43:12,670
that you can run
the real NRD

940
00:43:12,670 --> 00:43:14,680
and other NDN software.

941
00:43:14,680 --> 00:43:16,885
NDN Testbed, as
I mentioned,

942
00:43:16,885 --> 00:43:18,200
is global testbed with

943
00:43:18,200 --> 00:43:20,185
30 plus nodes and they run

944
00:43:20,185 --> 00:43:22,640
NLSR as routing protocol

945
00:43:22,640 --> 00:43:25,460
and as a forwarding
strategy.

946
00:43:25,460 --> 00:43:27,660
People have been
using the testbed

947
00:43:27,660 --> 00:43:31,020
to do various experiments.

948
00:43:34,970 --> 00:43:37,845
I think the next
step we need to

949
00:43:37,845 --> 00:43:42,590
focus on accessibility,
usability,

950
00:43:42,590 --> 00:43:45,820
and support security
operations,

951
00:43:45,820 --> 00:43:49,715
and any other application
or your scenario.

952
00:43:49,715 --> 00:43:53,185
But I think that most
of these are the topic

953
00:43:53,185 --> 00:43:55,710
for this conference and

954
00:43:55,710 --> 00:43:58,930
those panels to focus on.

955
00:43:59,510 --> 00:44:01,890
>> That's great, Beichuan.

956
00:44:01,890 --> 00:44:04,120
Thanks. It's an
impossible task to cover

957
00:44:04,120 --> 00:44:06,570
all of the codebase
in such a short time.

958
00:44:06,570 --> 00:44:08,515
But thank you for
the noble effort.

959
00:44:08,515 --> 00:44:10,195
One very brief question
for you to think,

960
00:44:10,195 --> 00:44:12,390
to respond to you
briefly, if you would.

961
00:44:12,390 --> 00:44:16,045
A question came in
about namespaces and

962
00:44:16,045 --> 00:44:18,300
I'm wondering if anywhere

963
00:44:18,300 --> 00:44:20,320
in the NDN codebase,

964
00:44:20,320 --> 00:44:22,385
there is use of

965
00:44:22,385 --> 00:44:26,040
a standard namespace or

966
00:44:26,040 --> 00:44:27,480
naming conventions
that have been

967
00:44:27,480 --> 00:44:30,410
standardized by
NIST or others.

968
00:44:30,410 --> 00:44:33,265
What's your reaction
to that question?

969
00:44:33,265 --> 00:44:35,645
>> Any name convention

970
00:44:35,645 --> 00:44:38,265
being officially
standardized?

971
00:44:38,265 --> 00:44:40,160
>> Or any use of

972
00:44:40,160 --> 00:44:42,650
standardized
naming conventions

973
00:44:42,650 --> 00:44:44,725
in the NDN codebase.

974
00:44:44,725 --> 00:44:49,075
>> I'm not aware
of those cases.

975
00:44:49,075 --> 00:44:50,215
>> That's the answer I

976
00:44:50,215 --> 00:44:51,925
would have given as well,

977
00:44:51,925 --> 00:44:54,865
that yours is the more
authoritative one.

978
00:44:54,865 --> 00:44:56,835
Beichuan, thank
you so much for

979
00:44:56,835 --> 00:44:59,770
covering so much
in so little time.

980
00:45:01,220 --> 00:45:03,320
We have a break right

981
00:45:03,320 --> 00:45:06,050
after this session
and I certainly don't

982
00:45:06,050 --> 00:45:07,820
want to short-change

983
00:45:07,820 --> 00:45:11,910
our third and final
speaker in the session.

984
00:45:12,070 --> 00:45:13,945
Thank you, Beichuan.

985
00:45:13,945 --> 00:45:16,285
Go ahead and stop sharing.

986
00:45:16,285 --> 00:45:20,030
Marcin Spoczynski
from Intel

987
00:45:20,030 --> 00:45:22,190
is going to share with us

988
00:45:22,190 --> 00:45:24,565
his thoughts on
developing practical

989
00:45:24,565 --> 00:45:25,830
end-to-end systems

990
00:45:25,830 --> 00:45:30,295
and applications
using NDN.

991
00:45:30,295 --> 00:45:33,330
Marcin, please take away.

992
00:45:33,330 --> 00:45:35,935
>> Can you see my screen?

993
00:45:35,935 --> 00:45:38,555
>> Yes, not yet in
full-screen mode,

994
00:45:38,555 --> 00:45:41,040
but we can see that
you're sharing.

995
00:45:42,610 --> 00:45:45,535
>> Is that full-screen
mode or not?

996
00:45:45,535 --> 00:45:49,685
No, it's not. Let
me try once again.

997
00:45:49,685 --> 00:45:53,680
Right now, it shows
the right one.

998
00:45:53,680 --> 00:45:57,180
I do believe I would
be able to share.

999
00:45:57,180 --> 00:45:58,520
Can you see the
right screen?

1000
00:45:58,520 --> 00:46:01,715
>> That's good.
Yes, that's okay.

1001
00:46:01,715 --> 00:46:06,015
>> Thank you, Patrick.
As Patrick said,

1002
00:46:06,015 --> 00:46:08,485
welcome to this
third presentation.

1003
00:46:08,485 --> 00:46:10,910
My name is Marcin
Spoczynski and I'm

1004
00:46:10,910 --> 00:46:14,035
a Senior Research
Scientist in Intel Labs.

1005
00:46:14,035 --> 00:46:15,950
My background is in Cloud,

1006
00:46:15,950 --> 00:46:17,630
edge orchestration
enthusiast,

1007
00:46:17,630 --> 00:46:19,405
contents system, and

1008
00:46:19,405 --> 00:46:21,225
application architecture.

1009
00:46:21,225 --> 00:46:23,160
My topic will
be a little bit

1010
00:46:23,160 --> 00:46:24,740
different and I
will be talking

1011
00:46:24,740 --> 00:46:25,770
about developing

1012
00:46:25,770 --> 00:46:28,505
those practical
end-to-end system

1013
00:46:28,505 --> 00:46:31,015
for NDN or with NDN.

1014
00:46:31,015 --> 00:46:32,815
Before I will start,

1015
00:46:32,815 --> 00:46:34,415
I want to give a
huge thanks to

1016
00:46:34,415 --> 00:46:36,320
Kathyayani from Intel,

1017
00:46:36,320 --> 00:46:39,955
who helped me with
this presentation.

1018
00:46:39,955 --> 00:46:42,225
Here is a sneak preview

1019
00:46:42,225 --> 00:46:44,050
of what I will be talking.

1020
00:46:44,050 --> 00:46:46,610
We are going
to explore how

1021
00:46:46,610 --> 00:46:49,515
are we using and
build the NDN system,

1022
00:46:49,515 --> 00:46:51,195
not only in our lab,

1023
00:46:51,195 --> 00:46:53,245
and challenges
that we're facing.

1024
00:46:53,245 --> 00:46:56,150
I will go from
what do we mean by

1025
00:46:56,150 --> 00:46:58,020
practical system and use

1026
00:46:58,020 --> 00:47:00,070
cases that our
lab is looking,

1027
00:47:00,070 --> 00:47:01,380
and the practical system

1028
00:47:01,380 --> 00:47:03,660
components and
end-to-end system.

1029
00:47:03,660 --> 00:47:06,410
Application and
that best practices

1030
00:47:06,410 --> 00:47:09,325
and the gaps that we see
in an applicability.

1031
00:47:09,325 --> 00:47:10,860
Let me start with

1032
00:47:10,860 --> 00:47:13,285
those practical
system requirements

1033
00:47:13,285 --> 00:47:15,270
that will define
the needs for

1034
00:47:15,270 --> 00:47:16,950
those system
that we try to

1035
00:47:16,950 --> 00:47:19,045
implement and LM is

1036
00:47:19,045 --> 00:47:21,025
the third defining kit

1037
00:47:21,025 --> 00:47:23,530
together with software.

1038
00:47:23,530 --> 00:47:25,345
At the very bottom,

1039
00:47:25,345 --> 00:47:26,530
what we really need

1040
00:47:26,530 --> 00:47:28,575
is this
infrastructure layer,

1041
00:47:28,575 --> 00:47:32,760
which provides the
complete storage network

1042
00:47:32,760 --> 00:47:36,055
and the operating systems.

1043
00:47:36,055 --> 00:47:38,535
Next, what we are

1044
00:47:38,535 --> 00:47:41,215
seeing the needs is this
provisioning clear,

1045
00:47:41,215 --> 00:47:42,655
which should consist of

1046
00:47:42,655 --> 00:47:45,935
those automation
tools, for example,

1047
00:47:45,935 --> 00:47:47,180
a Chef, the Puppet,

1048
00:47:47,180 --> 00:47:48,895
and Ansible to manage

1049
00:47:48,895 --> 00:47:52,085
the configuration
environment together

1050
00:47:52,085 --> 00:47:53,680
with the application like

1051
00:47:53,680 --> 00:47:55,520
a SPHY maker that's helped

1052
00:47:55,520 --> 00:47:57,770
the provisioning in
the infrastructure.

1053
00:47:57,770 --> 00:48:01,070
For example, managing
the application images

1054
00:48:01,070 --> 00:48:03,900
and deploying
the application.

1055
00:48:03,900 --> 00:48:06,400
I'm so sorry.

1056
00:48:06,400 --> 00:48:09,040
Another thing is the
runtime that provides

1057
00:48:09,040 --> 00:48:10,615
the environment in which

1058
00:48:10,615 --> 00:48:12,505
your application runs,

1059
00:48:12,505 --> 00:48:16,705
and it could be a
container images where

1060
00:48:16,705 --> 00:48:18,880
orchestration
runs along with

1061
00:48:18,880 --> 00:48:21,955
the associated storage
and then networking.

1062
00:48:21,955 --> 00:48:23,515
The example could be

1063
00:48:23,515 --> 00:48:25,660
container D and
our rootkit,

1064
00:48:25,660 --> 00:48:27,295
and the other widely used

1065
00:48:27,295 --> 00:48:30,730
in the container engines.

1066
00:48:30,730 --> 00:48:32,755
The tools like
the Kubernetes,

1067
00:48:32,755 --> 00:48:34,780
Docker Swarm, abstract

1068
00:48:34,780 --> 00:48:36,820
the management
application cluster,

1069
00:48:36,820 --> 00:48:39,340
along to schedule
and orchestrate of

1070
00:48:39,340 --> 00:48:40,885
application across

1071
00:48:40,885 --> 00:48:43,855
multiple published
in the clusters.

1072
00:48:43,855 --> 00:48:46,030
Of course, we should able

1073
00:48:46,030 --> 00:48:48,010
to build the services and

1074
00:48:48,010 --> 00:48:49,480
the microservices for

1075
00:48:49,480 --> 00:48:52,300
application across
multiple languages.

1076
00:48:52,300 --> 00:48:54,040
For example, the Golang,

1077
00:48:54,040 --> 00:48:56,620
the Python, C++ or a Rust,

1078
00:48:56,620 --> 00:48:58,840
to control vibes that

1079
00:48:58,840 --> 00:49:02,380
image management
for application to

1080
00:49:02,380 --> 00:49:03,430
run across all of

1081
00:49:03,430 --> 00:49:07,900
the infrastructure as
container [inaudible].

1082
00:49:07,900 --> 00:49:09,520
One of the key feature of

1083
00:49:09,520 --> 00:49:11,830
those managing
infrastructure is ability to

1084
00:49:11,830 --> 00:49:13,630
monitor and handle
the communication,

1085
00:49:13,630 --> 00:49:16,330
and underlying
infrastructure.

1086
00:49:16,330 --> 00:49:19,375
The last and I think
the most important one

1087
00:49:19,375 --> 00:49:21,280
is about adopting in

1088
00:49:21,280 --> 00:49:23,650
a new paradigm requires

1089
00:49:23,650 --> 00:49:27,505
a big cultural change
where the teams,

1090
00:49:27,505 --> 00:49:29,800
they can no longer work in

1091
00:49:29,800 --> 00:49:33,520
those independent
silos just

1092
00:49:33,520 --> 00:49:37,120
to develop this small
part of the system,

1093
00:49:37,120 --> 00:49:39,760
but this end-to-end
automatization

1094
00:49:39,760 --> 00:49:42,235
and the software
delivery pipelines,

1095
00:49:42,235 --> 00:49:44,469
it's just only possible

1096
00:49:44,469 --> 00:49:46,045
when there is
the increase,

1097
00:49:46,045 --> 00:49:49,360
the collaboration
between the researchers,

1098
00:49:49,360 --> 00:49:53,150
the business partners,
and the user.

1099
00:49:53,400 --> 00:49:56,200
When we put all of

1100
00:49:56,200 --> 00:49:58,930
those pieces or we
get this complete

1101
00:49:58,930 --> 00:50:01,030
end-to-end set
up and suit it

1102
00:50:01,030 --> 00:50:03,730
for more people use cases.

1103
00:50:03,730 --> 00:50:06,550
But before that,
let's talk a little

1104
00:50:06,550 --> 00:50:07,690
bit about what we

1105
00:50:07,690 --> 00:50:10,570
think ideal system
should look like.

1106
00:50:10,570 --> 00:50:12,580
The first, of course,

1107
00:50:12,580 --> 00:50:14,635
the system must be simple.

1108
00:50:14,635 --> 00:50:18,310
Without a visible silo,

1109
00:50:18,310 --> 00:50:19,960
allowing to
distinct each of

1110
00:50:19,960 --> 00:50:22,060
the system command
and then map

1111
00:50:22,060 --> 00:50:23,740
it to the one
requirement and

1112
00:50:23,740 --> 00:50:26,200
the risk responsible
for just only one job.

1113
00:50:26,200 --> 00:50:29,155
The next point is to
be generic enough

1114
00:50:29,155 --> 00:50:31,900
to apply into the
multiple scenarios,

1115
00:50:31,900 --> 00:50:33,609
to support different
requirements

1116
00:50:33,609 --> 00:50:36,530
for each host
and for example,

1117
00:50:36,690 --> 00:50:40,270
for learning strategies
or the caching.

1118
00:50:40,270 --> 00:50:43,720
Next following adaptive is

1119
00:50:43,720 --> 00:50:46,210
to be at the
scale to support

1120
00:50:46,210 --> 00:50:49,795
heterogeneous architecture
to be onboarded

1121
00:50:49,795 --> 00:50:51,160
onto different kinds of

1122
00:50:51,160 --> 00:50:53,470
the hardware [inaudible].

1123
00:50:53,470 --> 00:50:58,180
The Linux Windows
or RISC-V and x86.

1124
00:50:58,180 --> 00:51:00,100
Also, about all of

1125
00:51:00,100 --> 00:51:01,765
the things that
microsystems should

1126
00:51:01,765 --> 00:51:05,304
support is a full
predictable behavior

1127
00:51:05,304 --> 00:51:06,940
to be a fully measure.

1128
00:51:06,940 --> 00:51:10,585
Even in those very
dynamic scenarios,

1129
00:51:10,585 --> 00:51:12,820
I should know what kind of

1130
00:51:12,820 --> 00:51:14,740
the action the system

1131
00:51:14,740 --> 00:51:16,030
will take based on

1132
00:51:16,030 --> 00:51:18,910
the application logic
or network traffic,

1133
00:51:18,910 --> 00:51:22,390
which also depends
on the use case.

1134
00:51:22,390 --> 00:51:25,990
When talking about
the use cases,

1135
00:51:25,990 --> 00:51:29,710
I want to bring attention
to two use cases,

1136
00:51:29,710 --> 00:51:31,645
which we support on

1137
00:51:31,645 --> 00:51:33,970
our lab development
process.

1138
00:51:33,970 --> 00:51:36,595
The first is the
industrial IoT

1139
00:51:36,595 --> 00:51:39,220
when the new
application requires

1140
00:51:39,220 --> 00:51:41,050
the high flexibility from

1141
00:51:41,050 --> 00:51:42,430
the network to allow

1142
00:51:42,430 --> 00:51:43,750
assembly services on

1143
00:51:43,750 --> 00:51:46,015
the fly and autonomously,

1144
00:51:46,015 --> 00:51:48,250
reconfigure the
network interfaces,

1145
00:51:48,250 --> 00:51:50,080
allowing not only to

1146
00:51:50,080 --> 00:51:51,955
support best
network software,

1147
00:51:51,955 --> 00:51:53,770
but also to bring
support for

1148
00:51:53,770 --> 00:51:57,775
the deterministic Ethernet
and WiFi to enable

1149
00:51:57,775 --> 00:52:00,175
right on time delivery for

1150
00:52:00,175 --> 00:52:02,320
sensory data
and application

1151
00:52:02,320 --> 00:52:04,720
required for a
software PLC.

1152
00:52:04,720 --> 00:52:07,240
We see the big trends in

1153
00:52:07,240 --> 00:52:10,840
the direction of the
full network autonomy in

1154
00:52:10,840 --> 00:52:14,800
those industrial
application started with

1155
00:52:14,800 --> 00:52:18,595
Industry 4.0 and
the softwarization

1156
00:52:18,595 --> 00:52:21,160
of the factory
floor applications.

1157
00:52:21,160 --> 00:52:24,340
The second use case
is the gaming,

1158
00:52:24,340 --> 00:52:25,690
where we are looking at

1159
00:52:25,690 --> 00:52:27,475
the two application modes.

1160
00:52:27,475 --> 00:52:30,790
The first is
the WebRTC and

1161
00:52:30,790 --> 00:52:33,910
dynamic flooding of
the compute functions

1162
00:52:33,910 --> 00:52:36,055
and distributed rendering,

1163
00:52:36,055 --> 00:52:38,380
where each of the
gaming frames

1164
00:52:38,380 --> 00:52:39,955
of the part of the scene

1165
00:52:39,955 --> 00:52:44,750
can be disassembled and
processed separately.

1166
00:52:44,780 --> 00:52:47,680
We're seeing a lot of

1167
00:52:47,680 --> 00:52:50,305
opportunities in both
case in the end.

1168
00:52:50,305 --> 00:52:52,600
Let's see the system and

1169
00:52:52,600 --> 00:52:54,970
vision and deploy
it on our testbed,

1170
00:52:54,970 --> 00:52:58,030
which can enable this
end-to-end platform

1171
00:52:58,030 --> 00:53:00,715
before they're presented
before use cases.

1172
00:53:00,715 --> 00:53:03,595
Let's start from
application layer.

1173
00:53:03,595 --> 00:53:05,305
When we are supporting

1174
00:53:05,305 --> 00:53:07,060
multiple different
application

1175
00:53:07,060 --> 00:53:09,175
as from industrial
control,

1176
00:53:09,175 --> 00:53:10,960
which are the
software program,

1177
00:53:10,960 --> 00:53:12,610
programmable
logic controller,

1178
00:53:12,610 --> 00:53:15,325
in short the vPLCs

1179
00:53:15,325 --> 00:53:17,980
with NDN support
together in

1180
00:53:17,980 --> 00:53:20,470
par with the sensors
that can expose

1181
00:53:20,470 --> 00:53:23,830
collected data on our
distributed clusters.

1182
00:53:23,830 --> 00:53:25,855
Setup of gaming use case,

1183
00:53:25,855 --> 00:53:28,510
we use the Pion
WebRTC [inaudible]

1184
00:53:28,510 --> 00:53:31,540
with enabling NDN support.

1185
00:53:31,540 --> 00:53:34,315
We also enabled tracing

1186
00:53:34,315 --> 00:53:36,340
in the telemetry
support using

1187
00:53:36,340 --> 00:53:38,785
the IP services to fully

1188
00:53:38,785 --> 00:53:41,080
understand the
footprint of

1189
00:53:41,080 --> 00:53:43,540
the mentioned
applications,

1190
00:53:43,540 --> 00:53:45,970
to be able to compare

1191
00:53:45,970 --> 00:53:49,705
the same applications
with their IP versions.

1192
00:53:49,705 --> 00:53:51,415
I love those applications,

1193
00:53:51,415 --> 00:53:54,340
I deploy the
Kubernetes interface

1194
00:53:54,340 --> 00:53:55,630
with the outlook

1195
00:53:55,630 --> 00:53:57,430
of the function
to well know

1196
00:53:57,430 --> 00:54:00,385
DPDK and the SPDK APIs.

1197
00:54:00,385 --> 00:54:02,290
Additionally, in case

1198
00:54:02,290 --> 00:54:04,300
of industrial application,

1199
00:54:04,300 --> 00:54:05,800
traffic and some of

1200
00:54:05,800 --> 00:54:07,780
the management
function can use

1201
00:54:07,780 --> 00:54:09,655
this OPC UA plan

1202
00:54:09,655 --> 00:54:12,265
going down to the
network layer,

1203
00:54:12,265 --> 00:54:14,545
through those CNI plugins,

1204
00:54:14,545 --> 00:54:17,155
and the different
types of NFDs,

1205
00:54:17,155 --> 00:54:19,990
we are able to
onboard framework to

1206
00:54:19,990 --> 00:54:23,560
those Kubernetes on
the Edge type of

1207
00:54:23,560 --> 00:54:24,790
the devices and

1208
00:54:24,790 --> 00:54:27,985
the high power
within servers.

1209
00:54:27,985 --> 00:54:30,865
What is on the next screen

1210
00:54:30,865 --> 00:54:33,370
is where we'll see how

1211
00:54:33,370 --> 00:54:36,670
specific software
can be used in

1212
00:54:36,670 --> 00:54:37,810
the case of the

1213
00:54:37,810 --> 00:54:40,105
typical industrial
control scenario,

1214
00:54:40,105 --> 00:54:43,180
where factory
control level

1215
00:54:43,180 --> 00:54:45,490
support and
different use cases

1216
00:54:45,490 --> 00:54:47,095
and the usage models.

1217
00:54:47,095 --> 00:54:49,690
For example, typical in

1218
00:54:49,690 --> 00:54:51,010
an industrial scenario,

1219
00:54:51,010 --> 00:54:53,170
we'll see this
factory cloud where

1220
00:54:53,170 --> 00:54:55,600
the most of the
analytics happen,

1221
00:54:55,600 --> 00:54:56,620
and is powered by

1222
00:54:56,620 --> 00:54:58,660
high-end servers
uploaded by

1223
00:54:58,660 --> 00:55:00,445
the user interface
framework like

1224
00:55:00,445 --> 00:55:03,700
DPDK or SPDK and etc.

1225
00:55:03,700 --> 00:55:06,850
But due to low power and

1226
00:55:06,850 --> 00:55:08,530
the typical Edge
devices running

1227
00:55:08,530 --> 00:55:10,435
on the item and
the typical,

1228
00:55:10,435 --> 00:55:14,020
maybe i7, i5 chips
we are using

1229
00:55:14,020 --> 00:55:16,150
yet another NFD together

1230
00:55:16,150 --> 00:55:18,669
with the virus and
network supports.

1231
00:55:18,669 --> 00:55:21,970
Also worth mention in
existing scenario,

1232
00:55:21,970 --> 00:55:23,560
we're still using typical

1233
00:55:23,560 --> 00:55:24,925
this style of building,

1234
00:55:24,925 --> 00:55:27,145
where the factory
Cloud is handling

1235
00:55:27,145 --> 00:55:29,725
most of those
orchestration functions.

1236
00:55:29,725 --> 00:55:32,560
But in the enablement
of OPC UA plane,

1237
00:55:32,560 --> 00:55:33,820
we hope to enable

1238
00:55:33,820 --> 00:55:35,500
the fully distributed way

1239
00:55:35,500 --> 00:55:37,690
of managing resources,

1240
00:55:37,690 --> 00:55:41,965
application and the
hardware resources.

1241
00:55:41,965 --> 00:55:45,130
Let's zoom into
application for

1242
00:55:45,130 --> 00:55:47,605
a moment to show how we

1243
00:55:47,605 --> 00:55:49,450
actually develop
application for

1244
00:55:49,450 --> 00:55:51,850
our testbed to enable

1245
00:55:51,850 --> 00:55:54,580
those use cases together

1246
00:55:54,580 --> 00:55:57,230
with this practical
scenario.

1247
00:55:59,190 --> 00:56:02,440
Before presented,
application

1248
00:56:02,440 --> 00:56:05,170
should be a drivers
of the NDN and

1249
00:56:05,170 --> 00:56:08,380
those caching policies
and how we are

1250
00:56:08,380 --> 00:56:11,140
forwarding the data highly

1251
00:56:11,140 --> 00:56:12,400
depends on the business

1252
00:56:12,400 --> 00:56:14,065
needs and application.

1253
00:56:14,065 --> 00:56:16,255
For the most of the code,

1254
00:56:16,255 --> 00:56:18,670
we are using those
Golang and the

1255
00:56:18,670 --> 00:56:21,955
Rust for most
advanced application,

1256
00:56:21,955 --> 00:56:23,980
and the automation
code form

1257
00:56:23,980 --> 00:56:26,350
a previous slide is
brought under Python.

1258
00:56:26,350 --> 00:56:27,610
We developed share of

1259
00:56:27,610 --> 00:56:29,260
the application to enable

1260
00:56:29,260 --> 00:56:30,775
it mention use cases

1261
00:56:30,775 --> 00:56:33,040
like a software PLC

1262
00:56:33,040 --> 00:56:35,770
together with
the NDN support,

1263
00:56:35,770 --> 00:56:39,850
are also the sensory
data applications that

1264
00:56:39,850 --> 00:56:44,035
can gather and
accumulate sensory data.

1265
00:56:44,035 --> 00:56:47,020
For the gaming, we
mentioned before,

1266
00:56:47,020 --> 00:56:48,715
the Pion WebRTC Golang

1267
00:56:48,715 --> 00:56:50,710
with a partial
NDN support,

1268
00:56:50,710 --> 00:56:53,415
and we are planning to
fully put it into NDN.

1269
00:56:53,415 --> 00:56:55,380
On the integration
side for

1270
00:56:55,380 --> 00:56:57,810
our testbed we provide
full integration of

1271
00:56:57,810 --> 00:56:59,730
the NFD with Kubernetes

1272
00:56:59,730 --> 00:57:01,860
so it's deployed
as a service in

1273
00:57:01,860 --> 00:57:03,000
the case of the NDN and

1274
00:57:03,000 --> 00:57:07,299
DPDK or also with
yet another NAD.

1275
00:57:07,299 --> 00:57:11,805
As one of our
goals is to have

1276
00:57:11,805 --> 00:57:13,980
the applicability
to deploy

1277
00:57:13,980 --> 00:57:17,775
application in IP and NDN,

1278
00:57:17,775 --> 00:57:20,790
let's look a little
bit how actually we

1279
00:57:20,790 --> 00:57:22,500
develop application to be

1280
00:57:22,500 --> 00:57:24,544
used on our testbed.

1281
00:57:24,544 --> 00:57:28,180
For that, we develop
a small framework

1282
00:57:28,180 --> 00:57:29,935
when we divide
the application

1283
00:57:29,935 --> 00:57:31,585
in mostly four layers.

1284
00:57:31,585 --> 00:57:33,280
The first layer that

1285
00:57:33,280 --> 00:57:35,635
handles the logic
for application,

1286
00:57:35,635 --> 00:57:37,795
the mostly code
specific for

1287
00:57:37,795 --> 00:57:40,120
programmable logic
controllers and

1288
00:57:40,120 --> 00:57:42,505
the PLC, video
and analytics.

1289
00:57:42,505 --> 00:57:44,650
The second is a protocol

1290
00:57:44,650 --> 00:57:46,540
translation libraries.

1291
00:57:46,540 --> 00:57:50,035
As some of the libraries,

1292
00:57:50,035 --> 00:57:51,940
we need to have
that layers in

1293
00:57:51,940 --> 00:57:54,235
the specific protocol is

1294
00:57:54,235 --> 00:57:56,830
not supported
by application.

1295
00:57:56,830 --> 00:57:59,980
Next is the Data Mapper,

1296
00:57:59,980 --> 00:58:02,785
when we are mapping
those address spaces

1297
00:58:02,785 --> 00:58:05,830
from NDN to other formats
like for example,

1298
00:58:05,830 --> 00:58:09,010
mDNS and so on or
at the consul.

1299
00:58:09,010 --> 00:58:11,500
This model is
at this moment

1300
00:58:11,500 --> 00:58:12,190
we are looking at

1301
00:58:12,190 --> 00:58:13,945
is theoretically
hardcoded,

1302
00:58:13,945 --> 00:58:15,490
but we would love to see

1303
00:58:15,490 --> 00:58:17,065
the library like that,

1304
00:58:17,065 --> 00:58:18,985
which can translate
on the fly

1305
00:58:18,985 --> 00:58:23,555
dynamic DNS space to
the NDN namespace.

1306
00:58:23,555 --> 00:58:27,400
Another one is network

1307
00:58:27,400 --> 00:58:30,040
specific code
though the NDN,

1308
00:58:30,040 --> 00:58:31,930
TCP or the Modbus

1309
00:58:31,930 --> 00:58:34,015
in case of the
industrial application,

1310
00:58:34,015 --> 00:58:36,100
where we are able
to plug in and

1311
00:58:36,100 --> 00:58:38,890
integrate with a specific
network libraries.

1312
00:58:38,890 --> 00:58:41,230
This framework
let us think

1313
00:58:41,230 --> 00:58:43,660
about the software
rather than how

1314
00:58:43,660 --> 00:58:45,190
to apply

1315
00:58:45,190 --> 00:58:49,610
specific network techniques
to the use case.

1316
00:58:50,200 --> 00:58:54,110
We're assuming as
end-to-end system

1317
00:58:54,110 --> 00:58:55,200
that we have is not

1318
00:58:55,200 --> 00:58:56,935
definitely what
we're imaging.

1319
00:58:56,935 --> 00:59:00,999
The majority of the
many components

1320
00:59:00,999 --> 00:59:03,685
is still far from perfect,

1321
00:59:03,685 --> 00:59:06,355
but we see a lot of
the gaps that we

1322
00:59:06,355 --> 00:59:09,760
will allow to see
the address there.

1323
00:59:10,010 --> 00:59:13,905
The first is this
migration framework,

1324
00:59:13,905 --> 00:59:15,530
which without given

1325
00:59:15,530 --> 00:59:17,655
the specific the
business logic,

1326
00:59:17,655 --> 00:59:21,355
translate easy plugin
and the libraries,

1327
00:59:21,355 --> 00:59:23,720
a preference label it
with the software for

1328
00:59:23,720 --> 00:59:25,465
languages goes

1329
00:59:25,465 --> 00:59:27,735
more modern
languages like rust,

1330
00:59:27,735 --> 00:59:30,175
or even more matter of
support for a golang,

1331
00:59:30,175 --> 00:59:31,755
that we already have.

1332
00:59:31,755 --> 00:59:34,560
Additionally, we
would like to see how

1333
00:59:34,560 --> 00:59:37,230
specific those
TCP problems can

1334
00:59:37,230 --> 00:59:39,705
be addressed at the
end of the year while

1335
00:59:39,705 --> 00:59:43,500
using the protocols
like WebRTC and TCP.

1336
00:59:43,500 --> 00:59:47,490
One of the things
is asked, enabling.

1337
00:59:47,490 --> 00:59:51,000
Integration and
automation of

1338
00:59:51,000 --> 00:59:53,280
deployment connected
with integration

1339
00:59:53,280 --> 00:59:58,650
through this Kubernetes
network logins.

1340
00:59:58,650 --> 01:00:00,480
The other way where

1341
01:00:00,480 --> 01:00:03,780
the most popular
orchestrators

1342
01:00:03,780 --> 01:00:05,610
would be very beneficial.

1343
01:00:05,610 --> 01:00:10,130
Additionally,
enhancement of

1344
01:00:10,130 --> 01:00:12,630
existing multiverse
of the support

1345
01:00:12,630 --> 01:00:15,735
for make it the before
the distributed.

1346
01:00:15,735 --> 01:00:18,630
It can be updated
from any point of

1347
01:00:18,630 --> 01:00:24,415
the network in a fully
distributed way.

1348
01:00:24,415 --> 01:00:27,750
Even when one of the
node with the offline

1349
01:00:27,750 --> 01:00:29,215
or you'd have a time

1350
01:00:29,215 --> 01:00:32,070
down will be
huge, caching.

1351
01:00:32,390 --> 01:00:36,300
To conclude,
NDN developers

1352
01:00:36,300 --> 01:00:38,845
did a really tremendous
job in the creating

1353
01:00:38,845 --> 01:00:41,130
this NDN DPDK and yet have

1354
01:00:41,130 --> 01:00:43,075
the and other great pieces

1355
01:00:43,075 --> 01:00:45,365
of the software
and architecture.

1356
01:00:45,365 --> 01:00:47,015
What is still lots of

1357
01:00:47,015 --> 01:00:50,315
opportunities in this NDN?

1358
01:00:50,315 --> 01:00:53,925
However, as we
understand that

1359
01:00:53,925 --> 01:00:57,360
API will be still used
by the long time.

1360
01:00:57,360 --> 01:01:00,680
We need this, the
backward possibility

1361
01:01:00,680 --> 01:01:01,980
of the portability,

1362
01:01:01,980 --> 01:01:03,975
and the PowerShell
compatibility.

1363
01:01:03,975 --> 01:01:06,565
It goes to all projects to

1364
01:01:06,565 --> 01:01:07,995
be easily integrated

1365
01:01:07,995 --> 01:01:09,595
into software frameworks.

1366
01:01:09,595 --> 01:01:11,845
We see a lot of
the needs of

1367
01:01:11,845 --> 01:01:14,560
our standardization
of the API

1368
01:01:14,560 --> 01:01:17,155
that are facing
the user as

1369
01:01:17,155 --> 01:01:20,440
a fragmentation
of the software.

1370
01:01:20,440 --> 01:01:22,300
It's a big deal.

1371
01:01:22,300 --> 01:01:25,555
We like to see
different approaches,

1372
01:01:25,555 --> 01:01:27,995
but we do believe that's
the interface facing

1373
01:01:27,995 --> 01:01:31,775
developers and the user
should be the same.

1374
01:01:31,775 --> 01:01:33,300
Another point is

1375
01:01:33,300 --> 01:01:35,730
where we see a lot
of opportunity of

1376
01:01:35,730 --> 01:01:38,695
offloading storage
network and the compute

1377
01:01:38,695 --> 01:01:40,770
to be competitive with

1378
01:01:40,770 --> 01:01:43,120
the other network
paradigms.

1379
01:01:43,120 --> 01:01:48,085
We have the start with
DPDK and the SPDK.

1380
01:01:48,085 --> 01:01:49,630
However, we like to

1381
01:01:49,630 --> 01:01:51,990
see the more
modern approaches

1382
01:01:51,990 --> 01:01:55,524
SBRT related to
the Linux kernel

1383
01:01:55,524 --> 01:01:58,070
and the extension
for that.

1384
01:01:58,070 --> 01:02:00,310
Last but not least,

1385
01:02:00,310 --> 01:02:03,295
is really understanding
the developers who

1386
01:02:03,295 --> 01:02:05,180
comes really from
different places

1387
01:02:05,180 --> 01:02:06,960
with different needs.

1388
01:02:06,960 --> 01:02:09,635
When developing
the software,

1389
01:02:09,635 --> 01:02:12,975
we need to think
a lot about them.

1390
01:02:12,975 --> 01:02:16,930
I think that is
my last slide.

1391
01:02:16,930 --> 01:02:20,360
I don't know how much
time we have, but.

1392
01:02:20,360 --> 01:02:22,075
>> Thank you, Marcin,

1393
01:02:22,075 --> 01:02:24,840
we have a minute or
two for questions.

1394
01:02:24,840 --> 01:02:27,325
You did a good job
staying on target.

1395
01:02:27,325 --> 01:02:30,730
One question that came
in through Slack.

1396
01:02:30,730 --> 01:02:32,845
Specifically
here at the end,

1397
01:02:32,845 --> 01:02:34,170
you raised some issues

1398
01:02:34,170 --> 01:02:35,635
that require further work.

1399
01:02:35,635 --> 01:02:36,865
Are there some
of these you

1400
01:02:36,865 --> 01:02:39,480
think are especially
important

1401
01:02:39,480 --> 01:02:41,250
for the research
community as

1402
01:02:41,250 --> 01:02:43,785
opposed to commercial
participants?

1403
01:02:43,785 --> 01:02:45,090
Is there one or
two that you

1404
01:02:45,090 --> 01:02:46,245
think would be most

1405
01:02:46,245 --> 01:02:47,760
relevant for the research

1406
01:02:47,760 --> 01:02:49,865
community to act on?

1407
01:02:49,865 --> 01:02:52,230
>> I do believe
that one of

1408
01:02:52,230 --> 01:02:56,205
the very important things

1409
01:02:56,205 --> 01:02:58,470
about this integration and

1410
01:02:58,470 --> 01:03:01,975
the stabilization
of the API.

1411
01:03:01,975 --> 01:03:04,430
It will give the
great opportunity

1412
01:03:04,430 --> 01:03:06,660
for developers to try on.

1413
01:03:06,660 --> 01:03:08,640
Especially that's a lot of

1414
01:03:08,640 --> 01:03:10,950
those edge
developers who just

1415
01:03:10,950 --> 01:03:13,990
coming up to speed with
the edge framework.

1416
01:03:13,990 --> 01:03:17,290
If the NDN will
be the one of

1417
01:03:17,290 --> 01:03:19,555
the new possible way

1418
01:03:19,555 --> 01:03:24,640
of developing
applications,

1419
01:03:24,640 --> 01:03:27,520
definitely that
will gather

1420
01:03:27,520 --> 01:03:29,980
a lot of the interests
of those developer.

1421
01:03:29,980 --> 01:03:32,745
We see lots of
opportunities,

1422
01:03:32,745 --> 01:03:35,970
especially from our
business units.

1423
01:03:38,840 --> 01:03:41,830
>> I think I'm
tracking that.

1424
01:03:41,840 --> 01:03:44,470
There's a further question

1425
01:03:44,470 --> 01:03:47,800
about the NDN transport

1426
01:03:47,800 --> 01:03:50,110
for these apps
you've described.

1427
01:03:50,110 --> 01:03:53,630
Are you typically
replacing

1428
01:03:53,630 --> 01:03:57,000
HTTP or TCP with NDN?

1429
01:03:57,000 --> 01:03:59,275
>> I'm typically replacing

1430
01:03:59,275 --> 01:04:02,070
TCP at this moment.

1431
01:04:02,070 --> 01:04:08,294
In some of the
cases, for example,

1432
01:04:08,294 --> 01:04:09,665
in the OPC away,

1433
01:04:09,665 --> 01:04:14,425
we are replacing
the TCP and HTTP.

1434
01:04:14,425 --> 01:04:16,880
It depends on
the use case.

1435
01:04:16,880 --> 01:04:21,055
I think we need
to, in this case,

1436
01:04:21,055 --> 01:04:23,570
we need to be fragmented
because each of

1437
01:04:23,570 --> 01:04:24,870
the use case
and application

1438
01:04:24,870 --> 01:04:26,730
will require different,

1439
01:04:26,730 --> 01:04:29,610
and especially
that we need to be

1440
01:04:29,610 --> 01:04:33,100
in line with some of
the existing standards.

1441
01:04:33,100 --> 01:04:36,210
So the search for

1442
01:04:36,210 --> 01:04:39,720
a passport is
really beneficial.

1443
01:04:40,700 --> 01:04:46,300
>> Great.

1444
01:04:46,300 --> 01:04:50,100
Well, the questions
are starting to fly

1445
01:04:50,100 --> 01:04:52,660
into the Slack
chat room now,

1446
01:04:52,660 --> 01:04:56,400
which is our
break time now.

1447
01:04:56,400 --> 01:05:00,215
But obviously, we all
have a lot more time

1448
01:05:00,215 --> 01:05:02,610
to ask questions
and respond to

1449
01:05:02,610 --> 01:05:05,395
those questions in
the Slack chat rooms.

1450
01:05:05,395 --> 01:05:08,430
These do continue
the conversation

1451
01:05:08,430 --> 01:05:10,375
there as I hope
you've seen

1452
01:05:10,375 --> 01:05:12,330
Qian Shao in

1453
01:05:12,330 --> 01:05:14,905
this web conferencing
chat window

1454
01:05:14,905 --> 01:05:17,590
posted the link to join
the Slack chat room.

1455
01:05:17,590 --> 01:05:20,775
If you've not done
so, please do that.

1456
01:05:20,775 --> 01:05:22,740
Marci, thank you very much

1457
01:05:22,740 --> 01:05:24,180
for a very
interesting and.

1458
01:05:24,180 --> 01:05:25,110
Thank you, Patrick.

1459
01:05:25,110 --> 01:05:27,360
Presentation. I had
several questions

1460
01:05:27,360 --> 01:05:28,700
I was going to ask myself,

1461
01:05:28,700 --> 01:05:30,510
but unfortunately, I
didn't get to ask any

1462
01:05:30,510 --> 01:05:31,740
because there are some
interesting points

1463
01:05:31,740 --> 01:05:33,520
file in here too.

1464
01:05:33,520 --> 01:05:38,500
With that, we will now
commence our break.

1465
01:05:38,500 --> 01:05:40,570
We'll have a
10-minute break.

1466
01:05:40,570 --> 01:05:42,015
We will resume at

1467
01:05:42,015 --> 01:05:43,910
15 minutes after the hour

1468
01:05:43,910 --> 01:05:45,190
for the second session,

1469
01:05:45,190 --> 01:05:48,265
which is focused on
application development,

1470
01:05:48,265 --> 01:05:50,670
which is a perfectly
appropriate follow-up

1471
01:05:50,670 --> 01:05:51,780
to this conversation

1472
01:05:51,780 --> 01:05:55,615
because many of these
topics of namespaces,

1473
01:05:55,615 --> 01:05:56,700
naming choices,

1474
01:05:56,700 --> 01:05:57,775
and architectural
tradeoffs,

1475
01:05:57,775 --> 01:05:59,130
and broader adoption will

1476
01:05:59,130 --> 01:06:01,150
be considered in that
session as well.

1477
01:06:01,150 --> 01:06:02,400
Lofti, is there anything

1478
01:06:02,400 --> 01:06:03,175
else you wanted to add?

1479
01:06:03,175 --> 01:06:04,605
I see you've turned
on the video.

1480
01:06:04,605 --> 01:06:07,500
>> No, that's it. We
have a 10-minute break.

1481
01:06:07,500 --> 01:06:09,910
We'll be back at 11:15.

1482
01:06:10,930 --> 01:06:13,425
Thank you very
much, Patrick.

1483
01:06:13,425 --> 01:06:13,810
>> Okay.

1484
01:06:13,810 --> 01:06:16,150
>> You're all
leaving. Thanks.