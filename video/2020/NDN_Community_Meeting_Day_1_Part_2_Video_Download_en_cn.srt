1
00:00:00,430 --> 00:00:01,720
Welcome back, everyone.
欢迎回来，各位。

2
00:00:02,770 --> 00:00:06,020
Next we have session two on ICN for
接下来我们将进入第二场关于ICN的会议。

3
00:00:06,020 --> 00:00:11,494
wireless edge networking chaired by Eve Schooler from Intel.
无线边缘网络会议，由英特尔的Eve Schooler主持。

4
00:00:11,494 --> 00:00:13,130
Eve, go ahead.
Eve，请开始。

5
00:00:13,130 --> 00:00:16,205
>> Well, we've got three great presentations today.
我们今天有三场精彩的演讲。

6
00:00:16,205 --> 00:00:22,495
We're gonna lead off with one on the topic of ICN when a program overview,
我们将首先介绍一个关于ICN的主题，提供一个程序概览。

7
00:00:22,495 --> 00:00:28,350
by Dr. Shree Katyayani Tsikata Suara, otherwise known as Katyayani.
由Shree Katyayani Tsikata Suara博士主持，她也被称为Katyayani。

8
00:00:28,350 --> 00:00:31,540
Who's a senior research scientist at Intel labs,
谁是英特尔实验室的高级研究科学家，

9
00:00:31,540 --> 00:00:35,750
leading research in information centric networks for edge computing.
领先的研究在面向边缘计算的信息中心网络。

10
00:00:35,750 --> 00:00:41,080
And her research focuses on applications where ICN can add value to industry.
她的研究重点是ICN能为行业增加价值的应用领域。

11
00:00:41,080 --> 00:00:46,921
Katyayani is the Intel PI for the joint Intel-NSF ICN-WEN Center.
Katyayani是英特尔与美国国家科学基金会联合成立的ICN-WEN中心的英特尔首席研究员。

12
00:00:46,921 --> 00:00:51,727
Take it away Katyayani >> Thank you so much Eve,
太感谢你了，Eve。

13
00:00:51,727 --> 00:00:56,644
I'm starting to share my brain here.
我开始在这里分享我的想法了。

14
00:00:59,862 --> 00:01:04,215
Okay, so I'll be just giving a brief overview of
好的，所以我将简要概述一下

15
00:01:04,215 --> 00:01:07,840
the joint Intel-NSF ICN-WEN Center.
联合英特尔-国家科学基金会ICN-WEN中心。

16
00:01:07,840 --> 00:01:12,110
It actually successfully recently completed its three year tenure.
它实际上最近成功完成了它的三年任期。

17
00:01:12,110 --> 00:01:16,540
And we have two other great professors talking about it, but
我们还有两位杰出的教授将对此进行讨论，但是

18
00:01:16,540 --> 00:01:21,450
I just wanna give a brief overview.
我只想简要概述一下。

19
00:01:22,960 --> 00:01:28,680
So the idea, when we set up this joint center with NSF.
所以这个想法，当我们与美国国家科学基金会（NSF）共同设立这个中心时。

20
00:01:28,680 --> 00:01:33,740
The idea was to explore what are some of the potential of ICN especially
这个想法是去探索ICN（信息中心网络）特别是其潜在的一些可能性。

21
00:01:33,740 --> 00:01:38,366
over wireless edge networks in view of 5G and
在5G视角下，通过无线边缘网络探索。

22
00:01:38,366 --> 00:01:42,280
5G+ or the new evolution of networks.
5G+或网络的新演进。

23
00:01:42,280 --> 00:01:47,843
And also when we have lot many more devices and data at the edges,
而且当我们在边缘拥有更多的设备和数据时，

24
00:01:47,843 --> 00:01:52,493
we wanted to see what kind of potential does ICN have.
我们想要了解ICN有什么样的潜力。

25
00:01:52,493 --> 00:01:58,490
What kind of solutions can it provide to meet some of the more strict requirements?
它能提供什么样的解决方案来满足一些更严格的要求？

26
00:01:58,490 --> 00:02:02,000
Whether it's latency, bandwidth, and so on.
无论是延迟、带宽等等。

27
00:02:02,000 --> 00:02:08,330
And we also wanted to look at more realistic deployments or applications
我们还想研究更现实的部署或应用情况。

28
00:02:08,330 --> 00:02:13,820
typically used at the edges, whether it's AR VR, autonomous driving, and so on.
通常用于边缘计算，无论是增强现实虚拟现实、自动驾驶等等。

29
00:02:13,820 --> 00:02:19,210
And another important aspect of the center was
另一个中心的重要方面是

30
00:02:19,210 --> 00:02:22,620
that we wanted to look at three pillars simultaneously.
我们希望同时考察三大支柱。

31
00:02:22,620 --> 00:02:25,390
That is, the wireless device endpoints,
即无线设备终端，

32
00:02:25,390 --> 00:02:28,800
the network infrastructure and security and privacy.
网络基础设施以及安全与隐私。

33
00:02:28,800 --> 00:02:32,810
So we wanted security to be part of the story,
所以我们希望安全成为这个故事的一部分，

34
00:02:32,810 --> 00:02:36,370
part of the solution and not an afterthought.
成为解决方案的一部分，而不是事后才想到的。

35
00:02:36,370 --> 00:02:43,133
And I believe that the teams actually did a great job doing that.
我相信团队在这方面确实做得很好。

36
00:02:43,133 --> 00:02:50,950
And we had three main projects as part of this center.
我们这个中心有三个主要的项目。

37
00:02:52,030 --> 00:02:57,020
The first few that I've listed here ISAR,
我这里列出的前几个是ISAR，

38
00:02:57,020 --> 00:03:01,650
the hotbed UCLA and SPLICE with the hobbit timer.
他们利用了NDN和教授们，Jeff Burke和热床UCLA以及SPLICE与霍比特计时器。

39
00:03:01,650 --> 00:03:06,262
They used NDN and the professors, Jeff Burke and
他们利用了NDN和教授们，Jeff Burke和~!@#$%^&*()

40
00:03:06,262 --> 00:03:10,212
Trina Chakotay will be talking about it.
Trina Chakotay将会谈论这个话题。

41
00:03:10,212 --> 00:03:13,380
And I'll let them give you all the wonderful details.
我会让他们给你讲述所有精彩的细节。

42
00:03:13,380 --> 00:03:20,930
The third line LSN used, it did not use NDN and use mumble at first.
第三行LSN使用的时候，它最初没有使用NDN，而是使用了mumble。

43
00:03:20,930 --> 00:03:26,354
And of course there were a total of ten universities in the whole effort.
当然，在整个努力中共有十所大学参与。

44
00:03:30,491 --> 00:03:36,140
And we also had a great advisory team that we put together.
我们还组建了一个很棒的顾问团队。

45
00:03:36,140 --> 00:03:41,420
We had a board of advisors, Geng Wu, who I believe will be talking later today.
我们有一个顾问委员会，我相信今天晚些时候将会有耿武发言。

46
00:03:41,420 --> 00:03:47,132
And of course Eve Schooler that you all know, and also Udayan Mukherjee.
我们还有几位外部顾问，你们都知道的伊夫·斯库勒，还有乌达扬·穆克吉。

47
00:03:47,132 --> 00:03:51,469
And we also had a couple of external advisors, Dave Oran and
我们还有几位外部顾问，戴夫·奥兰和

48
00:03:51,469 --> 00:03:53,132
Christian Tschudin.
克里斯蒂安·楚丁。

49
00:03:53,132 --> 00:03:57,379
And all of them provided great feedback
他们都提供了很好的反馈。

50
00:03:57,379 --> 00:04:01,900
guidance during this whole three years.
在整整三年的时间里，我们得到了很多指导。

51
00:04:01,900 --> 00:04:05,440
We also had a lot of support from NSF.
我们也从美国国家科学基金会（NSF）得到了很多支持。

52
00:04:06,760 --> 00:04:10,552
Darleen Fisher, Monisha Ghosh Thyaga had started it off.
Darleen Fisher，Monisha Ghosh和Thyaga一起开始了这个项目。

53
00:04:10,552 --> 00:04:16,278
And also we had a good support system with an Intel management team,
我们还拥有一个由英特尔管理团队组成的良好支持系统，

54
00:04:16,278 --> 00:04:23,022
and also multiple Intel champions who would attend the, we had monthly calls.
我们还有多位英特尔的冠军会参与，我们每月都会进行电话会议。

55
00:04:23,022 --> 00:04:29,880
We had annual workshops and also semiannual sort of virtual workshop.
我们举办了年度研讨会，还有半年一次的线上研讨会。

56
00:04:29,880 --> 00:04:32,890
And it was great interacting with the team.
与团队的互动非常棒。

57
00:04:32,890 --> 00:04:38,700
At least I personally learned so much from the center and from the interactions.
我个人从中心和互动中学到了很多。

58
00:04:40,450 --> 00:04:42,393
And in the last slide,
在最后一张幻灯片中，

59
00:04:42,393 --> 00:04:48,031
what I wanted to mention was a little bit about our own learnings.
我想提及的是一些关于我们自己的学习心得。

60
00:04:48,031 --> 00:04:53,126
I know the professors talking right after we'll be going over all the technical
我知道紧接着我们讲话的教授们将会详细讲解所有技术细节。

61
00:04:53,126 --> 00:04:57,550
details and learnings that they gathered throughout the projects.
细节以及他们在项目中积累的经验教训。

62
00:04:57,550 --> 00:05:02,730
But I thought it might be more useful if I talked about some of our own learnings
但我认为如果我谈论一些我们自己的学习心得可能会更有帮助。

63
00:05:02,730 --> 00:05:05,340
as Intel as a research lab.
作为一个英特尔的研究实验室。

64
00:05:05,340 --> 00:05:09,564
When we try to go and take these ICN solutions and
将这些ICN解决方案应用到实际中去并

65
00:05:09,564 --> 00:05:13,583
incorporate them into industry solutions.
将它们整合到行业解决方案中去。

66
00:05:13,583 --> 00:05:16,410
And I thought that might be something useful for everyone to hear.
我认为这可能是每个人都会觉得有用的东西。

67
00:05:16,410 --> 00:05:20,395
So, one of the first things we learned is,
所以，我们学到的第一件事是，

68
00:05:20,395 --> 00:05:25,600
when you talk to somebody in the business unit at Intel or
当你在英特尔的业务部门与某人交谈时，

69
00:05:25,600 --> 00:05:28,612
anywhere else in the industry.
在行业的其他任何地方。

70
00:05:28,612 --> 00:05:33,317
The first thing that you'll see is they compare ICN to existing systems and
首先你会看到的是，他们将ICN与现有系统进行了比较，

71
00:05:33,317 --> 00:05:36,390
not just TCP-IP or TCP-IP with enhancements.
不仅仅是TCP-IP或者是经过增强的TCP-IP。

72
00:05:36,390 --> 00:05:41,510
So if you say, I have a great solution for caching or video distribution.
所以如果你说，我有一个很好的缓存或视频分发解决方案。

73
00:05:41,510 --> 00:05:46,020
They'll say, okay, this is the latest and greatest CDN that I have.
他们会说，好的，这是我拥有的最新最好的CDN。

74
00:05:46,020 --> 00:05:51,020
And not only just the CDN now, CDNs are coming into the carrier networks and
而且现在不仅仅是CDN，CDN正在进入运营商网络并且

75
00:05:51,020 --> 00:05:53,600
putting them on the base station, okay?
将它们放置在基站上，好吗？

76
00:05:53,600 --> 00:05:55,410
How does it compare to that?
它与那个相比如何？

77
00:05:55,410 --> 00:06:00,340
So that is a gap I felt that was there in some of the typical
所以那是我感觉在一些典型情况下存在的一个差距。

78
00:06:00,340 --> 00:06:05,130
academic evaluations and how industry looks at it.
学术评价以及行业如何看待这一点。

79
00:06:05,130 --> 00:06:09,898
And also a lot of times it's better at least when we are looking at
以及很多时候，至少当我们在看的时候，它会更好

80
00:06:09,898 --> 00:06:14,068
solutions where ICN can provide the biggest benefits.
解决方案在哪里，ICN能提供最大的好处。

81
00:06:14,068 --> 00:06:15,226
It's where to go for
往哪里去寻找

82
00:06:15,226 --> 00:06:19,463
a place where there is no real solution then offer just a better solution.
一个没有真正解决方案的地方，那就提供一个更好的解决方案。

83
00:06:19,463 --> 00:06:23,751
So that there is an area there is no real solution industry is actually struggling
所以在那里有一个行业实际上正在苦苦挣扎，因为没有真正的解决方案。

84
00:06:23,751 --> 00:06:26,980
with it, and then you say here I have the solution.
但是当你这样做的时候，另一方面，然后你说在这里我有解决方案。

85
00:06:26,980 --> 00:06:28,690
But when you do that, the other thing,
但是当你这样做的时候，另一方面，

86
00:06:28,690 --> 00:06:34,130
the question we get asked is, how does it then integrate with existing systems?
我们经常被问到的问题是，它如何与现有系统集成？

87
00:06:34,130 --> 00:06:40,108
So we believe that NDN has a lot of potential in dynamic edge computing and
所以我们相信NDN在动态边缘计算方面有很大的潜力，并且

88
00:06:40,108 --> 00:06:41,582
orchestration.
在整合您的数据、软件以及编排方面。

89
00:06:41,582 --> 00:06:45,764
When you're trying to put together your data, software and
在整合您的数据、软件以及编排方面。

90
00:06:45,764 --> 00:06:50,602
hardware, trying to bring them together in real time and do compute.
硬件方面，尝试将它们实时整合并进行计算。

91
00:06:50,602 --> 00:06:54,196
But when we started looking at that, the first question we get asked is okay we
但当我们开始研究这个问题时，我们首先被问到的问题是好的，我们

92
00:06:54,196 --> 00:06:57,030
have Kubernetes we have this, that and the other.
我们有Kubernetes，我们有这个，那个和其他的。

93
00:06:57,030 --> 00:06:58,440
How does it compare with that?
它与那个相比如何？

94
00:06:58,440 --> 00:07:02,256
So that is one of the first things you have to do is look at existing systems.
所以首先你需要做的其中一件事就是研究现有的系统。

95
00:07:02,256 --> 00:07:07,120
And even if we have a great solution, either it has to somehow coexist with it,
即使我们有了一个很好的解决方案，它也必须得以某种方式与现有系统共存。

96
00:07:07,120 --> 00:07:08,900
interface with it.
它必须与之接口对接。

97
00:07:08,900 --> 00:07:13,740
So in my opinion, the NDN community can make
所以在我看来，NDN社区可以产生

98
00:07:13,740 --> 00:07:18,770
much bigger impact, if you start looking at these sort of verticals or
行业垂直领域或者当你开始考虑这些领域时，可以产生更大的影响。

99
00:07:18,770 --> 00:07:23,580
solutions to solve specific problems and say, this is how we can do it.
为了解决特定问题，我们可以这样做，提出解决方案。

100
00:07:23,580 --> 00:07:27,200
Now, you don't need to develop a full commercial solutions.
现在，你不需要开发一个完整的商业解决方案。

101
00:07:27,200 --> 00:07:29,800
But even if you take an abstraction and say,
但即使你抽象地说，

102
00:07:29,800 --> 00:07:33,800
this is how typically they are done in some example system.
这就是它们通常在某些示例系统中如何被完成的。

103
00:07:33,800 --> 00:07:35,860
And this is how we can interface with it or
这就是我们如何与之交互的。

104
00:07:35,860 --> 00:07:38,050
this is how we can make it so much better.
这就是我们如何能够让它变得更好。

105
00:07:38,050 --> 00:07:42,060
So, that is kind of what I wanted to leave you with and
所以，这就是我想要给你留下的印象，还有

106
00:07:42,060 --> 00:07:44,210
sort of get you thinking on a topic.
让你开始思考一个话题。

107
00:07:44,210 --> 00:07:48,940
And we also believe that when it comes to dynamic composable edge computing,
我们还相信，当涉及到动态可组合边缘计算时，

108
00:07:48,940 --> 00:07:50,920
there aren't many solutions out there.
目前外面的解决方案并不多。

109
00:07:50,920 --> 00:07:56,080
And so it's a great area for the community to develop more support,
因此，这是一个很好的领域，社区可以在此开发更多的支持，

110
00:07:56,080 --> 00:08:01,210
and also enhance the support for NDN over wireless.
同时也增强了对无线NDN的支持。

111
00:08:01,210 --> 00:08:03,670
Because when we started using any NDSM,
因为当我们开始使用任何NDSM时，

112
00:08:03,670 --> 00:08:07,625
We found that there were a lot of things that could be done better, for instance,
我们发现有很多事情可以做得更好，例如，

113
00:08:07,625 --> 00:08:10,370
just creating dynamic faces, deleting them and so on.
只是创建动态面孔，删除它们等等。

114
00:08:10,370 --> 00:08:15,143
So this concludes my talk and I wanted to leave you with some of these
所以这就结束了我的演讲，我想给你们留下一些这些内容。

115
00:08:15,143 --> 00:08:19,760
points to think about and I wanted to see if there any questions.
要考虑的几个要点，我想看看是否有任何问题。

116
00:08:26,751 --> 00:08:29,270
If not, Eve, I'll hand it back to you.
如果没有问题，Eve，我会把它交还给你。

117
00:08:30,350 --> 00:08:30,850
>> Okay.
>> 好的。

118
00:08:36,152 --> 00:08:41,350
Anybody out there who would like to means a question?
有没有人想问一个问题？

119
00:08:44,630 --> 00:08:51,813
>> Maybe what is the status of the program today?
也许今天程序的状态是怎样的？

120
00:08:51,813 --> 00:08:55,960
>> So we are in final stages pretty much just winding down.
所以我们基本上处于最后阶段，几乎就是在收尾了。

121
00:08:55,960 --> 00:09:01,561
We had the final workshop in June this year, so at this point,
我们在今年六月举行了最后一个研讨会，所以到目前为止，

122
00:09:01,561 --> 00:09:07,395
pretty much tying up some loose ends and that's pretty much it.
基本上是解决了一些尾巴问题，差不多就是这样了。

123
00:09:12,571 --> 00:09:18,826
>> Catchavin can you speak to your own interest in directions for
这项工作已经向这些团队展示过了。

124
00:09:18,826 --> 00:09:23,527
this work having been exposed to these teams.
这项工作已经向这些团队展示过了。

125
00:09:23,527 --> 00:09:26,030
>> Great question and thank you Eve.
>> 非常好的问题，谢谢你，Eve。

126
00:09:26,030 --> 00:09:28,600
So as I eluded, one of the things and
所以正如我所暗示的，其中一件事情是……

127
00:09:28,600 --> 00:09:31,500
it was, the last slide was sort of related to that.
它是的，最后一张幻灯片在某种程度上与此相关。

128
00:09:31,500 --> 00:09:34,240
So of course, being an Intel and
所以当然，作为英特尔的一部分，

129
00:09:34,240 --> 00:09:38,750
also looking at the, where we believe that there's a lot of potential for
我们也在关注那些我们认为有很大潜力的领域，

130
00:09:38,750 --> 00:09:43,110
NDN is in dynamic networks and for compute.
NDN在动态网络和计算领域中的应用。

131
00:09:43,110 --> 00:09:48,267
I know NDN was traditionally developed for data over fixed networks, but
我知道NDN最初是为固定网络上的数据传输开发的，但是

132
00:09:48,267 --> 00:09:53,423
at least if we want to bring these solutions into industry, there are a lot
至少如果我们想将这些解决方案应用到工业领域，还有很多需要填补的空白，无论是NDN还是其他方面都需要填补。

133
00:09:53,423 --> 00:09:58,434
of gaps that need to be filled, NDN or otherwise gaps need to be filled.
需要填补的空白，无论是NDN还是其他方面都需要填补。

134
00:09:58,434 --> 00:10:01,930
There are so many devices, compute at the edges.
边缘处有如此多的设备，需要在边缘进行计算。

135
00:10:01,930 --> 00:10:05,504
Data being generated at the edges, also resources at the edges.
边缘产生的数据，边缘也有资源。

136
00:10:05,504 --> 00:10:09,690
So, we're no longer limited to just the infrastructure having resources.
所以，我们不再仅限于基础设施拥有资源。

137
00:10:09,690 --> 00:10:12,780
Resources can be anywhere, it can be a zeon in a car.
资源可以存在于任何地方，它可以是汽车中的一个芯片。

138
00:10:12,780 --> 00:10:16,730
It can be a laptop in a user's home or a PC and so on.
它可以是用户家中的笔记本电脑或者是个人电脑等等。

139
00:10:16,730 --> 00:10:20,820
How do we bring all of these into the fold of edge computing?
我们如何将所有这些纳入边缘计算的范畴呢？

140
00:10:20,820 --> 00:10:23,670
And I believe NDN has a lot of potential there.
我相信NDN在那里有很大的潜力。

141
00:10:23,670 --> 00:10:27,728
So I would definitely encourage the community as well to look more into it.
所以我也肯定会鼓励社区更多地了解这个问题。

142
00:10:32,168 --> 00:10:34,197
>> We have a question here.
>> 我们这里有个问题。

143
00:10:34,197 --> 00:10:35,488
>> Yes?
>> 是吗？

144
00:10:35,488 --> 00:10:38,855
>> I was just going to read it, from Kathy Nichols.
>> 我正打算读它，来自Kathy Nichols。

145
00:10:38,855 --> 00:10:41,535
Do you have a list of your top applications
您有您最常用应用程序的列表吗？

146
00:10:41,535 --> 00:10:44,607
that could use dynamic composable solutions?
那可以使用动态可组合的解决方案吗？

147
00:10:44,607 --> 00:10:49,379
>> I think yeah, I think it is as the, at some instance as the question says itself.
我认为是的，我认为在某些情况下正如问题本身所说。

148
00:10:51,160 --> 00:10:54,690
The applications in our mind that typically need that and
我们脑海中通常需要那个的应用情景是……

149
00:10:54,690 --> 00:10:58,260
I'm sure there are more, it would be great for everyone to think about it.
我确信还有更多，如果大家都能思考一下就太好了。

150
00:10:58,260 --> 00:11:01,760
Typically of course, anything is related to smart transportation.
通常情况下，任何事物都与智能交通有关。

151
00:11:01,760 --> 00:11:06,523
It has mobility, it has wireless, it has mobile resources and so on,
它具有移动性，它具有无线功能，它还拥有移动资源等等，

152
00:11:06,523 --> 00:11:09,452
our smart factory, cloud gaming, ARVR.
我们的智能工厂、云游戏、增强现实与虚拟现实。

153
00:11:09,452 --> 00:11:13,606
So these are some of the things that come to mind, but I'm sure if you think about
所以这些是我想到的一些事情，但我相信如果你思考一下，

154
00:11:13,606 --> 00:11:16,830
it, there may be others that you can come up with as well.
你也许也能想出其他的。

155
00:11:16,830 --> 00:11:19,564
It's just that, if they have the competence of dynamism,
他们如果具备变革的能力，

156
00:11:19,564 --> 00:11:22,573
whether the network's changing, whether there's wireless,
无论网络是否在变化，无论是否有无线连接，

157
00:11:22,573 --> 00:11:24,660
whether there's mobility, just think of.
无论是否有移动性，只需想象一下。

158
00:11:24,660 --> 00:11:28,233
And then along with some strict latency requirements,
它还伴随着一些严格的延迟要求，

159
00:11:28,233 --> 00:11:31,053
it provides a great combination in my mind.
它在我看来提供了一个很好的结合。

160
00:11:39,881 --> 00:11:43,001
>> Okay, any further questions?
好的，还有其他问题吗？

161
00:11:46,782 --> 00:11:49,930
Okay, well thank you very much, Kathyayani.
好的，非常感谢你，Kathyayani。

162
00:11:49,930 --> 00:11:50,430
>> Thank you.
>> 谢谢你。

163
00:11:54,362 --> 00:11:59,263
We have a second talk or second presentation.
我们有第二场讲话或第二场演讲。

164
00:11:59,263 --> 00:12:02,208
I'd like to introduce the topic is on SPLICE,
我想介绍的主题是SPLICE，

165
00:12:02,208 --> 00:12:06,363
Secure Predictively Low-Latency Information Centric Edge for
安全预测性低延迟信息中心化边缘技术用于

166
00:12:06,363 --> 00:12:08,791
next generation wireless networks.
下一代无线网络。

167
00:12:08,791 --> 00:12:14,538
And the presentation will be given by Srinivas Shakkottai, who in 2007
并且演讲将由Srinivas Shakkottai主持，他于2007年

168
00:12:14,538 --> 00:12:19,947
received his PhD from the University of Illinois at Urbana Champaign.
他获得了伊利诺伊大学厄巴纳-香槟分校的博士学位。

169
00:12:19,947 --> 00:12:23,020
And he was a postdoctoral scholar at Stanford.
他曾是斯坦福大学的博士后研究员。

170
00:12:23,020 --> 00:12:27,396
He currently is a professor at Texas A&M University in the Department of Electrical
他目前是德克萨斯A&M大学电气系的教授。

171
00:12:27,396 --> 00:12:28,882
and Computer Engineering.
和计算机工程。

172
00:12:28,882 --> 00:12:32,336
And his research interests include caching content distribution,
以及他的研究兴趣包括缓存内容分发，

173
00:12:32,336 --> 00:12:35,254
network markets, multi agent learning and game theory,
网络市场、多智能体学习和博弈论，

174
00:12:35,254 --> 00:12:39,859
wireless networks, reinforcement learning, as well as data collection and analytics.
无线网络、强化学习以及数据收集和分析。

175
00:12:39,859 --> 00:12:43,365
Srinivas is the recipient, oops, somebody's typing very loudly.
Srinivas是获奖者，哎哟，有人打字声音很大。

176
00:12:43,365 --> 00:12:48,340
Srinivas is the recipient of a Defense Threat Reduction agency young
Srinivas是国防威胁减少局青年

177
00:12:48,340 --> 00:12:50,130
Investigator Award, and
调查员奖项，以及

178
00:12:50,130 --> 00:12:53,400
NSF Career Award, as well as research awards from Cisco and Google.
NSF职业奖，以及来自思科和谷歌的研究奖项。

179
00:12:53,400 --> 00:12:57,659
And a taboo, he also was received several other awards including
以及一个禁忌，他还收到了包括其他几个奖项在内的荣誉。

180
00:12:57,659 --> 00:13:02,080
an outstanding professor award and an engineering genesis award.
一个杰出教授奖和一个工程创世奖。

181
00:13:02,080 --> 00:13:04,510
Srinivas, it's all yours.
斯里尼瓦斯，这全归你了。

182
00:13:04,510 --> 00:13:07,230
>> Thank you, thank you all for being here.
>> 谢谢，感谢大家的到来。

183
00:13:07,230 --> 00:13:12,182
So, I'll try to keep it reasonably concise.
所以，我会尽量保持简洁。

184
00:13:12,182 --> 00:13:16,452
This is actually the combination of three years of research by several universities,
这实际上是几所大学三年研究的结合。

185
00:13:16,452 --> 00:13:18,180
several researchers.
几位研究人员。

186
00:13:18,180 --> 00:13:22,002
So SPLICE stands for, Secure Predictive Low-Latency Information Centric Edge.
所以SPLICE代表的是，安全预测低延迟信息中心化边缘。

187
00:13:22,002 --> 00:13:26,370
And the goal was to work it into next generation wireless.
目标是将其融入下一代无线技术中。

188
00:13:26,370 --> 00:13:28,590
So that's the kind of ultimate aim.
所以那就是最终的目标。

189
00:13:28,590 --> 00:13:31,418
So this project was across multiple universities, five of them.
所以这个项目是跨越了多所大学，一共五所。

190
00:13:31,418 --> 00:13:38,380
From Texas A&M, P R Kumar, and I'm giving this talk essentially for him.
来自德克萨斯A&M大学的P R Kumar，基本上是我代表他来做这次演讲。

191
00:13:38,380 --> 00:13:41,685
So there's Kumar, myself, and I-H.Hou from Texas A&M.
所以有Kumar，我自己，还有来自德克萨斯A&M大学的I-H.Hou。

192
00:13:41,685 --> 00:13:45,403
There's Shroff and Attila Errol Masse from Ohio State,
有Shroff和来自俄亥俄州立大学的Attila Errol Masse，

193
00:13:45,403 --> 00:13:49,586
Rheumatoid Charles Murray from Illinois, Alisa Bertino, and
伊利诺伊州的风湿病专家查尔斯·默里，Alisa Bertino，以及

194
00:13:49,586 --> 00:13:54,018
Charlie Hu from Purdue, and Patrick Rowley from WashU St. Louis.
普渡大学的查理·胡和圣路易斯华盛顿大学的帕特里克·罗利。

195
00:13:54,018 --> 00:13:55,869
So if you look at this team,
所以如果你看看这个团队，

196
00:13:55,869 --> 00:14:00,375
we are composed of folks doing wireless security scheduling, and
我们由从事无线安全调度的人员组成，以及

197
00:14:00,375 --> 00:14:06,110
Patrick going in was the only person strongly invested in NDN specifically.
帕特里克是唯一一个特别投入于NDN（命名数据网络）的人。

198
00:14:06,110 --> 00:14:08,640
And so, this has been a good deal of a learning experience for
因此，这对我们其他人来说也是一个很好的学习经历。

199
00:14:08,640 --> 00:14:10,020
the rest of us as well.
对我们其他人来说也是如此。

200
00:14:10,020 --> 00:14:15,080
Because we went in thinking that NDN as a very interesting
因为我们开始时认为NDN是一个非常有趣的

201
00:14:15,080 --> 00:14:19,020
kind of scheme of things, but with little experience with actually working with it.
但实际上对它的工作经验很少。

202
00:14:19,020 --> 00:14:23,822
And when we came away, we were kind of solidly invested in the functionalities
当我们离开时，我们已经相当深入地投入到这些功能中了。

203
00:14:23,822 --> 00:14:27,913
deploys, as well as being able to contribute to its enhancement.
部署以及能够对其增强做出贡献。

204
00:14:27,913 --> 00:14:30,282
So what was the point of this project?
那么这个项目的意义是什么？

205
00:14:30,282 --> 00:14:31,890
Our goal was when we went in,
我们进入时的目标是

206
00:14:31,890 --> 00:14:35,921
we were trying to understand what is a worthwhile kind of application?
我们试图理解什么样的应用是值得的？

207
00:14:35,921 --> 00:14:39,972
Containing, alluded to this as well, what is a worthwhile application at
包含了这个观点，什么是值得的应用？

208
00:14:39,972 --> 00:14:43,540
the wireless edge which doesn't exist today in some sense?
无线边缘在某种意义上今天并不存在吗？

209
00:14:43,540 --> 00:14:47,730
And which is kind of very clearly obvious going forward.
而这在未来将变得非常明显。

210
00:14:47,730 --> 00:14:51,320
And we were kind of thinking about applications
我们在考虑应用方面。

211
00:14:51,320 --> 00:14:54,910
in that you're doing control of systems over wireless networks.
在这方面，你正在通过无线网络进行系统控制。

212
00:14:54,910 --> 00:14:56,670
So in many of these control systems,
所以在许多这样的控制系统中，

213
00:14:56,670 --> 00:15:00,910
what you wish to do is kind of reconstruct a physical or virtual theme.
你希望做的是在某种程度上重建一个物理的或虚拟的主题。

214
00:15:00,910 --> 00:15:03,153
For example, if you think about autonomous vehicles,
例如，如果你考虑自动驾驶汽车，

215
00:15:03,153 --> 00:15:06,363
you have some vehicles with Lidar, some with cameras, some with radar, etc.
你有一些车辆配备了激光雷达，一些配备了摄像头，还有一些配备了雷达等等。

216
00:15:06,363 --> 00:15:11,169
And what the vehicles are interested in is an abstraction of the physical field,
而这些车辆感兴趣的是对物理场的一种抽象，

217
00:15:11,169 --> 00:15:15,510
what is located where, where are roads, people bicycles, etc.
位于何处，哪里有道路，人们、自行车等。

218
00:15:15,510 --> 00:15:19,924
So you're interested in reconstructing a physical dynamic field at all these nodes
所以你对于在所有这些节点重建一个物理动态场感兴趣。

219
00:15:19,924 --> 00:15:22,422
and then they wish to take some control action.
然后他们希望采取一些控制行动。

220
00:15:22,422 --> 00:15:26,205
Similarly, if you think of virtual reality, we were thinking specifically of
同样地，如果你考虑虚拟现实，我们特别在想

221
00:15:26,205 --> 00:15:30,270
virtual reality multiplayer gaming, in which again, you have a virtual field.
虚拟现实多人游戏，在这种游戏中，你又有了一个虚拟的场地。

222
00:15:30,270 --> 00:15:34,150
You've got all these monsters and walls and etc, all happening.
你会遇到各种怪物、墙壁等等，这些都是在游戏中发生的事情。

223
00:15:34,150 --> 00:15:36,075
You're events which are going on which is who is where,
你会遇到谁在哪里的情况，这些都是正在发生的事件。

224
00:15:36,075 --> 00:15:37,555
who is shooting at what, etc.
谁在射击什么，等等。

225
00:15:37,555 --> 00:15:41,005
Or if it's a driving game, where these vehicles are moving, etc.
或者如果是一款赛车游戏，这些车辆在哪里移动，等等。

226
00:15:41,005 --> 00:15:43,685
And that virtual field needs to be reconstructed
而那个虚拟场景需要被重建。

227
00:15:43,685 --> 00:15:47,123
with minimal delay at all the agents, the game players in question, right?
在所有代理商这里，几乎没有任何延迟，对吧，游戏玩家们？

228
00:15:48,440 --> 00:15:52,020
In both these if you think about it, there is a good deal of commonality,
在这两种情况下，如果你仔细想想，它们之间有很多共同点，

229
00:15:52,020 --> 00:15:57,380
you want a similar reconstruction at all these agents in terms of the field and
你希望在这些代理人方面进行类似的重建，以便于领域内。

230
00:15:57,380 --> 00:15:58,970
what the things are where.
物品分布在哪里。

231
00:15:58,970 --> 00:16:02,450
So there is a good deal of correlation across user information requirements.
因此，在用户信息需求之间存在很大的相关性。

232
00:16:02,450 --> 00:16:04,034
And so what really the user or
因此，用户或应用程序真正想要的是专注于提取所需的信息。

233
00:16:04,034 --> 00:16:08,700
the application really wants is to focus on extracting the desired information.
应用程序真正想要的是专注于提取所需的信息。

234
00:16:08,700 --> 00:16:10,922
For example, in virtual reality, there is a so
例如，在虚拟现实中，有一个所谓的动作到光子延迟要求。

235
00:16:10,922 --> 00:16:13,157
called motion to photon latency requirement.
称为动作到光子延迟要求。

236
00:16:13,157 --> 00:16:15,068
In the sense that to move your head,
在这个意义上，移动你的头部，

237
00:16:15,068 --> 00:16:19,092
you need a different viewpoint within roughly 12 to 15 milliseconds.
你需要在大约12到15毫秒内改变一个不同的视角。

238
00:16:19,092 --> 00:16:22,844
So that's pretty strict, because within that that time duration,
所以这是相当严格的，因为在那个时间段内，

239
00:16:22,844 --> 00:16:25,496
you need to kind of identify what the user wants,
你需要某种程度上识别用户想要什么，

240
00:16:25,496 --> 00:16:28,940
to render that particular viewpoint, shift that viewpoint.
要呈现那个特定的视角，就得转换视角。

241
00:16:28,940 --> 00:16:33,340
If you're doing wirelessly, the viewpoint, the information corresponding to it, has
要通过无线方式进行的话，相应的视角信息必须要有

242
00:16:33,340 --> 00:16:37,515
to wind up at the user headset, it has to be uncompressed and displayed to the user.
要在用户的头戴设备上结束，它必须被解压缩并向用户显示。

243
00:16:37,515 --> 00:16:42,530
And if you increase the latency, user start getting nauseated, etc.
如果你增加了延迟，用户开始感到恶心等不适症状。

244
00:16:42,530 --> 00:16:47,226
Which is why really, when you look at the systems like Oculus, they have got a big
这就是为什么当你真正看看像Oculus这样的系统时，他们拥有一个大型的

245
00:16:47,226 --> 00:16:52,084
rendering engine, a big edge compute box sitting in your living room or wherever.
渲染引擎，一个大型的边缘计算盒子放置在你的客厅或其他地方。

246
00:16:52,084 --> 00:16:56,552
And you've got a cable connecting the headset to the box so that you have very,
并且你有一根电缆将头戴设备连接到盒子上，这样你就拥有非常

247
00:16:56,552 --> 00:16:57,646
very low latency.
非常低的延迟。

248
00:16:57,646 --> 00:17:01,722
Now if you want to cut that cable, if you want to make everything wireless,
如果你想要剪断那根电缆，如果你想要让所有东西都变成无线的，

249
00:17:01,722 --> 00:17:06,253
that imposes quite a lot of constrictions on the information requirement as well as
那对信息需求以及其他方面施加了相当多的限制。

250
00:17:06,253 --> 00:17:07,954
the wireless network itself.
无线网络本身。

251
00:17:07,954 --> 00:17:12,060
Which is why we are focusing on controllable wireless delivery modalities.
这就是为什么我们专注于可控的无线传输方式。

252
00:17:12,060 --> 00:17:14,550
How do we change the wireless network itself?
我们如何改变无线网络本身？

253
00:17:14,550 --> 00:17:17,496
Primarily we'll be focusing on MAC scheduling algorithms,
我们主要将专注于MAC调度算法，

254
00:17:17,496 --> 00:17:20,788
keeping application performance and definitely security in mind.
在考虑应用性能的同时，绝对不能忽视安全性。

255
00:17:20,788 --> 00:17:21,842
In terms of security,
在安全方面，

256
00:17:21,842 --> 00:17:25,009
we were interested in the wireless angle in terms of connectivity.
我们对于连接性方面的无线角度感兴趣。

257
00:17:25,009 --> 00:17:29,211
As well as the information angle in terms of encryption decryption in the NDN
以及在NDN中关于加密解密的信息角度。

258
00:17:29,211 --> 00:17:29,815
context.
上下文。

259
00:17:29,815 --> 00:17:33,905
So in that context, we were trying to build a kind of system from
所以在那个上下文中，我们试图从头开始构建一种系统，在这种系统中我们可以基本上控制每一层。

260
00:17:33,905 --> 00:17:38,011
the ground up in which we can essentially control every layer.
从头开始，在这种系统中我们可以基本上控制每一层。

261
00:17:38,011 --> 00:17:42,147
Ideally using a combination of kind of custom software and hardware.
理想情况下，使用一种自定义软件和硬件的组合。

262
00:17:42,147 --> 00:17:45,193
So if you look at the lowest layer here, the blue one,
所以如果你看这里最底层的蓝色那层，

263
00:17:45,193 --> 00:17:47,305
it is basically the wireless angle.
它基本上是无线通信的角度。

264
00:17:47,305 --> 00:17:51,595
So what we've got there is a software defined radio in which we have full access
所以我们得到的是一个软件定义的无线电，在这个无线电中我们有完全的访问权限。

265
00:17:51,595 --> 00:17:53,860
to the complete fine MAC, right?
我们可以完全控制到精细的MAC层，对吗？

266
00:17:53,860 --> 00:17:55,575
And going up into the network stack,
我们还得深入到网络栈的上层。

267
00:17:55,575 --> 00:17:58,794
you have the host machine in which you have the network stack as well.
您有一台主机，其中也包含了网络栈。

268
00:17:58,794 --> 00:18:03,249
So in other words, these USRPs are the software defined radios connected to
换句话说，这些USRP是连接到软件定义无线电的。

269
00:18:03,249 --> 00:18:07,851
a kind of a controllerless scheme of things which is based on LabVIEW, right?
这是一种基于LabVIEW的无控制器方案，对吗？

270
00:18:07,851 --> 00:18:13,197
And in which we basically can do MAC based changes in MAC scheduling etc.
并且在这个基础上，我们基本上可以对MAC调度等进行基于MAC地址的更改。

271
00:18:13,197 --> 00:18:16,731
And we connected up this UDP indicator there,
我们在那里连接了这个UDP指示器，

272
00:18:16,731 --> 00:18:22,175
is a local connection within a machine, it's not a TCP IP over the air.
它是机器内部的本地连接，并不是通过空气传输的TCP IP。

273
00:18:22,175 --> 00:18:25,897
It is only UDP within to connect LabVIEW to the local host.
它仅使用UDP在本地主机内连接LabVIEW。

274
00:18:25,897 --> 00:18:29,620
And then onwards we have the NFD stack and the applications.
接下来我们有了NFD堆栈和应用程序。

275
00:18:29,620 --> 00:18:35,362
So essentially what this is, if you will, is a kind of pure or semi pure information
所以本质上，如果你愿意的话，这是一种纯粹或半纯粹的信息。

276
00:18:35,362 --> 00:18:40,711
centric architecture wherein TCP IP is actually not even required, right?
集中式架构中，实际上甚至不需要TCP/IP，对吧？

277
00:18:40,711 --> 00:18:42,238
As I said, we use that UDP for
正如我所说，我们使用UDP来进行

278
00:18:42,238 --> 00:18:45,955
a local connection because LabVIEW is capable of local UDP sockets.
因为LabVIEW能够处理本地UDP套接字，所以这是一种本地连接。

279
00:18:45,955 --> 00:18:51,313
But the end to end from the server to the client is not a TCP IP connection at all.
但是从服务器到客户端的端到端连接根本不是TCP/IP连接。

280
00:18:51,313 --> 00:18:53,760
The only thing which is connecting them are MAC IDs.
连接它们的唯一东西是MAC ID。

281
00:18:53,760 --> 00:18:58,060
So the USRP uses a MAC ID and the other USRP uses this MAC ID
因此，一个USRP使用MAC ID，另一个USRP使用这个MAC ID。

282
00:18:58,060 --> 00:19:01,910
to determine where it is coming from and who it is destined for.
为了确定它来自哪里以及它的目的地是哪里。

283
00:19:01,910 --> 00:19:03,810
So that's our general architecture.
所以这就是我们的总体架构。

284
00:19:03,810 --> 00:19:07,026
And I want to spend the next few minutes discussing what we attained or
接下来的几分钟我想讨论一下我们实现了什么或者

285
00:19:07,026 --> 00:19:08,916
what are the goals of each level of this.
这个的每个层级的目标是什么。

286
00:19:08,916 --> 00:19:14,443
And how we kind of went towards this ultimate goal of field reconstruction and
我们是如何朝着这个最终目标即场景重建迈进的。

287
00:19:14,443 --> 00:19:15,216
control.
控制。

288
00:19:15,216 --> 00:19:17,230
So if you look at this bottom most layer,
所以如果你看这最底层，

289
00:19:17,230 --> 00:19:21,230
the question is can we use an off the shelf wireless communication scheme?
问题是我们能否使用现成的无线通信方案？

290
00:19:21,230 --> 00:19:24,390
For example, there is WiFi, which is essentially based on
例如，有WiFi，它本质上是基于

291
00:19:24,390 --> 00:19:28,030
carrier sense multiple access back offs, so distributed.
载波侦听多路访问退避，因此是分布式的。

292
00:19:28,030 --> 00:19:29,950
And LTE which is more scheduled.
而LTE则是更加有计划的调度。

293
00:19:29,950 --> 00:19:34,260
Now if you want to attend latency guarantees, recollect this business of
现在，如果你想要确保低延迟，记住这个问题，

294
00:19:34,260 --> 00:19:38,170
virtual reality requiring about 15 or so milliseconds latency.
虚拟现实需要大约15毫秒左右的延迟。

295
00:19:38,170 --> 00:19:41,458
Essentially, we calculated that if you need that kind of latency,
本质上，我们计算出如果你需要那种延迟，

296
00:19:41,458 --> 00:19:45,436
the rendering is going to take quite a while, roughly four or five milliseconds,
渲染将会花费相当长的时间，大约四到五毫秒，

297
00:19:45,436 --> 00:19:46,892
then there's compression.
然后是压缩。

298
00:19:46,892 --> 00:19:50,155
It turns out that the wireless angle, the one half wireless,
原来无线角度，那个一半无线，

299
00:19:50,155 --> 00:19:53,370
you have about two ish milliseconds, maybe three.
你大约有两毫秒左右的时间，也许三毫秒。

300
00:19:53,370 --> 00:19:57,850
So essentially we needed a scheme wherein we can guarantee per packet latencies
所以本质上我们需要一个方案，能够保证每个数据包的延迟时间。

301
00:19:57,850 --> 00:20:00,790
of less than two to three milliseconds, right?
而WiFi存在的问题是，由于它是CSMA，只要有关键流量存在，就无法保证每个数据包的延迟时间少于两到三毫秒，对吗？

302
00:20:00,790 --> 00:20:04,340
Now the problem with WiFi is, given the critical flows exists because it's CSMA,
现在WiFi存在的问题是，鉴于关键流量的存在，因为它是CSMA，

303
00:20:04,340 --> 00:20:06,390
you have no guarantee whatsoever.
你根本没有任何保证。

304
00:20:06,390 --> 00:20:10,830
If you look at LTE 4G, basically, the frame length is ten milliseconds.
如果你看一下LTE 4G，基本上，帧长度是十毫秒。

305
00:20:10,830 --> 00:20:13,233
But the problem is, when you transmit a packet,
但问题在于，当你传输一个数据包时，

306
00:20:13,233 --> 00:20:15,460
the ack comes back either as a bundled ack, or
确认应答要么作为捆绑式确认返回，要么

307
00:20:15,460 --> 00:20:19,407
you have to schedule the ack, which is seven milliseconds away at the minimum.
你必须安排确认应答，其最短时间为七毫秒。

308
00:20:19,407 --> 00:20:22,967
So in other words, LTE is not capable of this low latency kind of scheme.
换句话说，LTE无法实现这种低延迟的方案。

309
00:20:22,967 --> 00:20:27,508
And remember, when we were doing this 5G was in its infancy.
而且要记住，当我们开始研究这个的时候，5G还处于起步阶段。

310
00:20:27,508 --> 00:20:32,349
Indeed, even now, 5G deployments with ultra low latency are fairly minimal.
的确，即便是现在，具有超低延迟的5G部署也相当有限。

311
00:20:32,349 --> 00:20:34,881
So essentially what we were looking for
所以本质上我们在寻找的是

312
00:20:34,881 --> 00:20:39,188
was our own custom NDN friendly ultra low latency scheme, right?
我们自己定制的、适用于NDN的超低延迟方案，对吗？

313
00:20:39,188 --> 00:20:43,620
And so the edge of information has to decide to do this idea.
信息边缘必须决定采纳这个想法。

314
00:20:43,620 --> 00:20:46,290
That essentially we are doing field reconstruction.
我们本质上在进行场的重构。

315
00:20:46,290 --> 00:20:49,690
And the value of the field is as good as how it represents reality.
场的价值在于它对现实的准确反映。

316
00:20:49,690 --> 00:20:54,680
So if you're looking at autonomous driving, if a certain object has moved and
所以如果你在研究自动驾驶，如果某个物体已经移动了，

317
00:20:54,680 --> 00:20:56,620
you don't know about it, well your field,
你对此一无所知，好吧，你的领域，

318
00:20:56,620 --> 00:21:00,300
your perception of reality is different from reality itself.
你对现实的感知与现实本身是不同的。

319
00:21:00,300 --> 00:21:01,830
And this difference between reality and
你对现实的感知与现实本身之间的差异

320
00:21:01,830 --> 00:21:03,720
your perception of it is the edge of information.
你对它的感知就是信息的边缘。

321
00:21:03,720 --> 00:21:06,712
So you want to minimize this edge of information.
所以你想要尽可能减少这个信息的边缘。

322
00:21:06,712 --> 00:21:08,797
This applies even in virtual reality regime,
这甚至也适用于虚拟现实环境中，

323
00:21:08,797 --> 00:21:12,430
in the sense that there is a monster in front of you or next to you, etc.
在这种意义上，就像你面前或你旁边有一个怪物一样。

324
00:21:12,430 --> 00:21:17,090
Where is the monster as far as the canonical virtual world is concerned
在规范虚拟世界中，怪物在哪里？

325
00:21:17,090 --> 00:21:21,100
versus where is it with respect to where you are, I mean, your perception of it?
那与你所在之处相比，怪物在哪里呢？我是说，你对它的感知如何？

326
00:21:21,100 --> 00:21:25,390
So you want to minimize that that difference in perception, right?.
所以你想要尽量减少那种感知上的差异，对吗？

327
00:21:25,390 --> 00:21:29,390
Now we said that there are multiple users and so there's correlation across them.
现在我们说到有多个用户，因此它们之间存在相关性。

328
00:21:29,390 --> 00:21:31,947
So we wanted to build in some level of multicast support.
所以我们想要在某种程度上支持多播功能。

329
00:21:31,947 --> 00:21:37,010
And indeed NDN awareness in the sense that we need to tie this in into NDN.
确实，我们需要将其与NDN结合起来，以实现对NDN的认识。

330
00:21:37,010 --> 00:21:41,200
So that the NDN packets that are issued, requests, interest packets and
因此，发出的NDN数据包，请求，兴趣包等

331
00:21:41,200 --> 00:21:45,220
the responses etc are kind of cleanly integrated into the wireless layer.
这些响应等在无线层中被整合得相当干净利落。

332
00:21:45,220 --> 00:21:49,792
So that they can reveal in some sense what their latency requirements are etc, and
因此他们可以在某种程度上揭示出他们的延迟需求等信息。

333
00:21:49,792 --> 00:21:51,791
we can integrate it and support it.
我们可以将其整合并提供支持。

334
00:21:51,791 --> 00:21:55,834
So I'm gonna give you one slide on one of the major results.
所以我将用一张幻灯片给你们介绍一个主要的结果。

335
00:21:55,834 --> 00:21:59,045
So essentially, the very first one is what I'm going to talk about.
所以基本上，我要讲的第一个就是这个。

336
00:21:59,045 --> 00:22:04,247
In which way we instantiated, we developed delay scheduling algorithms which
我们开发了延迟调度算法，通过这种方式实例化，

337
00:22:04,247 --> 00:22:09,307
maximize the delay sensitive throughput, we call this timely throughput.
我们将其称为及时吞吐量，以最大化对延迟敏感的吞吐量。

338
00:22:09,307 --> 00:22:12,600
And we basically actually instantiated it on USRPs.
我们基本上实际上是在USRPs上实例化了它。

339
00:22:12,600 --> 00:22:16,423
After that there were several papers on actually integrating it into various
之后有几篇论文实际上是关于将其集成到各种不同的

340
00:22:16,423 --> 00:22:17,300
regimes.
体制中。

341
00:22:17,300 --> 00:22:21,210
And the last one was actually that since we had this platform where we could
而最后一个实际上是因为我们有这样一个平台，在那里我们可以

342
00:22:21,210 --> 00:22:25,973
control the system at various different layers, we actually built a RL platform,
控制系统在各种不同层面上，我们实际上构建了一个RL（强化学习）平台，

343
00:22:25,973 --> 00:22:29,230
a reinforcement learning platform to do auto configuration.
一个用于自动配置的强化学习平台。

344
00:22:29,230 --> 00:22:32,370
So that was the very end of this, which appeared last year.
这就是去年出现的这件事情的最后部分。

345
00:22:32,370 --> 00:22:34,940
But I just want to tell you about the capacity region,
但我只是想告诉你关于容量区域的情况，

346
00:22:34,940 --> 00:22:38,070
I think, by our low latency scheduling algorithms.
我认为，通过我们的低延迟调度算法。

347
00:22:38,070 --> 00:22:43,500
So what this diagram shows is basically the real time versus the non real time.
所以这张图表基本上展示的是实时与非实时的对比。

348
00:22:43,500 --> 00:22:49,340
Traffic supportable simultaneously by a wireless channel of 20 megahertz, right.
无线信道在20兆赫频宽下能同时支持的流量。

349
00:22:49,340 --> 00:22:52,167
So the leftmost one is our scheduling scheme.
因此，最左边的一个是我们的调度方案。

350
00:22:52,167 --> 00:22:55,348
Wherein you notice that it attains the full convex region.
其中你会注意到它达到了完整的凸区域。

351
00:22:55,348 --> 00:22:59,710
Whereas other schemes such as just longest few first, max weight basically, or
而其他的方案，比如仅仅是最长的几个优先，基本上是最大权重，或者

352
00:22:59,710 --> 00:23:02,803
random policies or round robin etc are unable to attain.
随机策略或者轮询等都无法达到的。

353
00:23:02,803 --> 00:23:07,424
So basically, we're able to show that analytically valuable kind of takeaways in
所以基本上，我们能够展示出在分析上有价值的收获。

354
00:23:07,424 --> 00:23:11,463
terms of the scheduling algorithms actually have an impact in reality.
调度算法的条款实际上在现实中有影响。

355
00:23:11,463 --> 00:23:15,886
You're able to support a larger region of operations.
您能够支持更大范围的操作区域。

356
00:23:15,886 --> 00:23:20,515
Now, moving up to the NDN scheme of things and caching.
现在，让我们谈谈NDN模式和缓存的事宜。

357
00:23:20,515 --> 00:23:24,211
Essentially our our thought process with the NDN was that
本质上，我们对NDN的思考是这样的

358
00:23:24,211 --> 00:23:28,061
one big advantage that NDN provides is information reuse.
NDN提供的一个重大优势是信息复用。

359
00:23:28,061 --> 00:23:33,042
That is it is cached at multiple locations in the content stores that are available.
因此，它被缓存在多个可用的内容存储位置中。

360
00:23:33,042 --> 00:23:36,019
And so essentially can be utilized, one,
因此，本质上可以被利用，一来，

361
00:23:36,019 --> 00:23:40,749
this this kind of stream of names going by because you see the names.
这种名字的流动，因为你看到了这些名字。

362
00:23:40,749 --> 00:23:45,007
Can you predict what name will be requested next essentially by
你能预测出下一个被请求的名字吗，基本上通过

363
00:23:45,007 --> 00:23:47,671
multiple streams as these names go by?
能否因此提前确定可能会被请求的内容，通过这些名字流转的多个渠道？

364
00:23:47,671 --> 00:23:51,274
And can you therefore determine in advance what might be requested and
能否因此提前确定可能会被请求的内容，

365
00:23:51,274 --> 00:23:52,382
cache it in advance?
能否因此提前缓存它？

366
00:23:52,382 --> 00:23:55,053
Now of course NDN is opportunistic, we want it to be and
现在当然了，NDN是机会主义的，我们希望它是这样的，并且

367
00:23:55,053 --> 00:23:57,096
make it basically predictable, right?
使其基本上可预测，对吧？

368
00:23:57,096 --> 00:24:01,610
So the scheme of things they were we wanted to have a way of doing proactive
所以我们想要一个主动的行事方案。

369
00:24:01,610 --> 00:24:02,830
requesting.
我们需要在NDN中构建这一功能。

370
00:24:02,830 --> 00:24:04,210
We needed to build this into NDN.
我们需要在NDN中构建这一功能。

371
00:24:04,210 --> 00:24:07,430
So we had some NFD modifications to allow this to happen.
所以我们对NFD进行了一些修改以实现这一功能。

372
00:24:07,430 --> 00:24:11,660
And furthermore, we wanted to actually provide latency guarantees via smart
并且，我们还想通过智能手段提供延迟保证。

373
00:24:11,660 --> 00:24:17,240
caching algorithms which can actually prefetch the items which are needed.
缓存算法能够实际预取所需的项目。

374
00:24:17,240 --> 00:24:20,730
Again we need wireless awareness because the link may be lossy, etc.
因此我们需要无线感知，因为连接可能会有丢包等问题。

375
00:24:20,730 --> 00:24:24,180
So identifying which links to focus on for
因此，确定应该重点关注哪些链接至关重要。

376
00:24:24,180 --> 00:24:29,500
such predictions and how much you can do prediction versus opportunistic, etc.
这些预测以及你能进行多少预测对比于机会主义行为等问题。

377
00:24:29,500 --> 00:24:33,510
Are questions which we have to deal with with respect to the wireless link.
这些是我们必须处理的与无线链接相关的问题。

378
00:24:33,510 --> 00:24:36,255
So in this context, we had a whole bunch of work.
所以在这种情况下，我们有一大堆工作要做。

379
00:24:36,255 --> 00:24:41,690
The first three are more related to NFD modifications, our
前三个更多地与NFD的修改有关，我们的

380
00:24:41,690 --> 00:24:47,420
own kind of flavor of NFD, which basically allows you to kind of prerequest stuff.
我们自己的NFD风格，基本上允许你预先请求一些东西。

381
00:24:47,420 --> 00:24:48,305
Because if you think about it,
因为如果你仔细想想，

382
00:24:48,305 --> 00:24:53,150
NFD by itself is not really issuing interests of its own, right.
NFD本身并不真正发行它自己的利益，对吧。

383
00:24:53,150 --> 00:24:58,300
And so what we did was we basically stuck in an algorithm as it were a small module,
于是我们所做的就是基本上插入了一个算法，就像是一个小模块，

384
00:24:58,300 --> 00:25:00,850
which looks at the stream of interest going by, and
它观察着流过的利息流动，以及

385
00:25:00,850 --> 00:25:03,510
issues interest natively from NFT itself.
问题利息本质上源自NFT本身。

386
00:25:03,510 --> 00:25:07,080
So that these interest when they're satisfied will come and
因此，当这些利息得到满足时，它们将会来临。

387
00:25:07,080 --> 00:25:11,400
sit in the caching, the content store of the loaded question.
坐在缓存中，已加载问题的内容存储。

388
00:25:11,400 --> 00:25:14,990
And so are available closer to the end user even before the end user actually
请求数据甚至在最终用户实际需要之前，就已经更靠近最终用户而可用了。

389
00:25:14,990 --> 00:25:16,500
issues of interest.
感兴趣的问题。

390
00:25:16,500 --> 00:25:19,360
So, essentially we worked on proactive requests.
所以，基本上我们致力于主动请求。

391
00:25:19,360 --> 00:25:23,340
This was mostly focused on by the folks at washu.
这主要是由沃什大学的人员所关注的。

392
00:25:23,340 --> 00:25:27,820
Then we use some of these ideas for enabling these predictive requests,
然后我们利用这些想法来启用这些预测性请求，

393
00:25:27,820 --> 00:25:30,020
as I said to NFD modifications.
正如我所说，关于NFD的修改。

394
00:25:30,020 --> 00:25:33,740
Another strain of thought was, if you're really interested in low latency,
另一种思考方式是，如果你真的对低延迟很感兴趣，

395
00:25:33,740 --> 00:25:37,890
perhaps the NFD forwarding scheme of things needs optimization.
也许需要对NFD转发方案进行优化。

396
00:25:37,890 --> 00:25:40,840
And so, some folks actually worked on that kind of
因此，有些人实际上已经在这方面进行了工作。

397
00:25:40,840 --> 00:25:45,300
evaluating different forwarding schemes including hardware based forwarding.
评估了不同的转发方案，包括基于硬件的转发。

398
00:25:45,300 --> 00:25:47,790
In order to reduce the latency of NDN Forwarding,
为了减少NDN转发的延迟，

399
00:25:47,790 --> 00:25:51,780
specifically when you scale up to larger amounts of traffic, right?
具体来说，就是当你扩大到更大量的流量时，对吧？

400
00:25:51,780 --> 00:25:52,570
On the Caching side,
在缓存方面，

401
00:25:52,570 --> 00:25:57,360
we had several fundamental results, specifically based on unreliable channels.
我们得到了几个基本结果，特别是基于不可靠信道的研究。

402
00:25:57,360 --> 00:26:01,720
We found several counterintuitive results on when you should cache and
我们发现了几个违反直觉的结果，关于你应该何时进行缓存。

403
00:26:01,720 --> 00:26:04,790
how much you should distribute your cache memories.
你应该如何分配你的缓存内存。

404
00:26:04,790 --> 00:26:06,800
So that's where I'll stop with respect to this.
那么关于这个问题，我就讲到这里。

405
00:26:06,800 --> 00:26:10,660
An implementation, which we had to do with virtual reality.
这是我们必须使用虚拟现实来实现的。

406
00:26:10,660 --> 00:26:14,395
This was integration of the whole system, wherein you have the VR headset,
这是整个系统的集成，其中你有VR头盔，

407
00:26:14,395 --> 00:26:18,700
you have caches of NDN basically, as well as the wireless channel underneath.
你有NDN的缓存，以及底层的无线信道。

408
00:26:18,700 --> 00:26:21,680
And this is not a video it's just a frame, please.
这不是一个视频，它只是一个画面，请注意。

409
00:26:21,680 --> 00:26:25,480
Basically we were able to show I think you should be able to see it on your screens.
基本上我们能够展示出来，我认为你们应该能在屏幕上看到它。

410
00:26:25,480 --> 00:26:29,510
The top left is with predictive, we are able to support a much higher rate of high
左上角是带有预测功能的，我们能够支持更高频率的高清分辨率帧。

411
00:26:29,510 --> 00:26:34,010
resolution frames than the bottom right, which is should look kind of grainy.
所以你在玩游戏时实际上可以看到，右下角应该看起来有点颗粒感。

412
00:26:34,010 --> 00:26:38,030
So you actually see this as you play the game,
所以你在玩游戏时实际上可以看到这一点，

413
00:26:38,030 --> 00:26:42,460
you can see that a good deal more is at a much higher resolution,
你可以看到相当多的内容分辨率更高。

414
00:26:42,460 --> 00:26:45,500
you can pretty much make sure that most of them are at high resolution.
你几乎可以确信它们中的大多数都是高分辨率的。

415
00:26:45,500 --> 00:26:48,320
Only a few will be at the lower resolution.
只有少数会是低分辨率的。

416
00:26:48,320 --> 00:26:52,470
So that was kind of so we were able to improve the end user quality of experience
所以这就是我们能够提高最终用户体验质量的原因。

417
00:26:52,470 --> 00:26:55,650
by tying in caching as well as the wireless.
通过结合缓存以及无线技术。

418
00:26:55,650 --> 00:26:58,830
And so the final thing I just mentioned the VR App,
所以我最后提到的就是VR应用，

419
00:26:58,830 --> 00:27:02,420
the high level goal of VR App in general was to cut the cord.
总体而言，VR应用的高级目标是实现无线化。

420
00:27:02,420 --> 00:27:06,640
So when I began this talk I talked about essentially Oculus, and
所以当我开始这个演讲时，我主要谈论的是Oculus，以及

421
00:27:06,640 --> 00:27:12,170
the fact that you need a cable between the edge rendering box and your headset.
事实上，你需要一根电缆将边缘渲染盒子和你的头戴设备连接起来。

422
00:27:12,170 --> 00:27:16,410
The goal was to actually eliminate that via smart wireless scheduling and
目标实际上是通过智能无线调度来消除这种情况。

423
00:27:16,410 --> 00:27:17,310
prefetching.
预取。

424
00:27:17,310 --> 00:27:21,467
So that via the use of NDN, basically for
所以通过使用NDN，基本上是为了

425
00:27:21,467 --> 00:27:26,120
this kind of communication, right.
这种通信方式，对。

426
00:27:26,120 --> 00:27:30,850
Now finally, of course, we needed this whole system to be secured by design.
现在最终，当然，我们需要这整个系统从设计上就是安全的。

427
00:27:30,850 --> 00:27:34,960
So essentially, we needed the questions of access control security and
所以本质上，我们需要解决访问控制安全问题和

428
00:27:34,960 --> 00:27:36,350
information security.
信息安全。

429
00:27:36,350 --> 00:27:37,452
And the information security,
信息安全，

430
00:27:37,452 --> 00:27:41,120
the first two bullet points there, indicate that we need latency guarantees.
前两个要点表明，我们需要延迟保证。

431
00:27:41,120 --> 00:27:43,990
Because we do not have infinite time we only have about 14 or
因为我们没有无限的时间，我们大约只有14或

432
00:27:43,990 --> 00:27:47,470
so milliseconds before the next frame shows up at the headset.
所以在下一帧显示在头显上之前，我们大约只有14或15毫秒的时间。

433
00:27:47,470 --> 00:27:53,050
So, essentially the if we realized we can't afford to spend two or
因此，本质上如果我们意识到我们不能花费两个或者

434
00:27:53,050 --> 00:27:55,470
three milliseconds in encryption decryption.
我们在加密解密中不能花费三毫秒。

435
00:27:55,470 --> 00:27:58,200
So, we wanted lightweight encryption schemes, and
因此，我们需要轻量级的加密方案，

436
00:27:58,200 --> 00:28:01,560
that was pretty much the focus of Lisa Martino's group.
这基本上是丽莎·马蒂诺小组的关注焦点。

437
00:28:01,560 --> 00:28:05,570
As well as looking at essentially access control methods, she focused primarily
她主要关注的是基本的访问控制方法。

438
00:28:05,570 --> 00:28:10,150
on LTE because we realize going forward 5G is going to be based on LTE.
因为我们意识到未来的5G将会基于LTE，所以我们专注于LTE。

439
00:28:10,150 --> 00:28:13,190
And many of our scheduling algorithms etcetera,
在很多方面，我们的调度算法等等，

440
00:28:13,190 --> 00:28:15,840
would have a natural home in 5G in some sense.
在某种意义上，会在5G中找到一个自然的归宿。

441
00:28:15,840 --> 00:28:19,770
Although as things have developed over the past three years, it's
尽管在过去三年的发展中，事情是这样的，

442
00:28:19,770 --> 00:28:24,240
even Wi-Fi has moved towards a scheduling based scheme, Wi-Fi 6 and so on.
即使Wi-Fi也已经转向了基于调度的方案，比如Wi-Fi 6等。

443
00:28:24,240 --> 00:28:29,250
I love scheduling, so it's kind of interesting that both Wi-Fi and
我喜欢调度，所以Wi-Fi和

444
00:28:29,250 --> 00:28:33,090
LTE or 5G are moving strongly towards the scheduled scheme of things as
LTE或5G正在大力推进计划化的方案，因为

445
00:28:33,090 --> 00:28:35,090
opposed to random access.
相对于随机接入而言。

446
00:28:35,090 --> 00:28:37,810
So the main results from the security side.
所以主要的结果来自于安全方面。

447
00:28:37,810 --> 00:28:43,100
The first few all have to do with access security, essentially looking for schemes,
前几项主要与接入安全有关，本质上是在寻找方案，

448
00:28:43,100 --> 00:28:48,340
which are kind of poorly developed with respect to the security angle in LTE.
它们在LTE中的安全角度来说发展得相当不充分。

449
00:28:48,340 --> 00:28:53,920
The latter few are related to essentially signature schemes, encryption, decryption
后面几个主要与签名方案、加密、解密有关。

450
00:28:53,920 --> 00:28:58,180
and that's really what I want to focus on as my kind of candidates slide.
这正是我想要专注的候选人展示方面。

451
00:28:58,180 --> 00:29:00,881
So this basically indicates, >> If you could surely fast if you could
所以这基本上意味着，>>如果你能肯定地快速地如果你能

452
00:29:00,881 --> 00:29:02,570
wrap up shortly, that would be great.
如果你能尽快结束，那就太好了。

453
00:29:02,570 --> 00:29:04,290
>> I'm done with the last slide basically.
>> 我基本上完成了最后一张幻灯片。

454
00:29:04,290 --> 00:29:04,920
>> Okay.
>> 好的。

455
00:29:04,920 --> 00:29:06,160
>> Oops, sorry.
>> 哎呀，抱歉。

456
00:29:06,160 --> 00:29:12,070
So essentially what we had, we wanted to say that we had lightweight signature
所以本质上我们想要说的是，我们拥有轻量级签名

457
00:29:12,070 --> 00:29:16,390
schemes, wherein you can actually encrypt decrypt much more quickly.
方案中，你实际上可以更快地进行加密解密。

458
00:29:16,390 --> 00:29:21,350
So I have a slide on that actual system how it looked in terms of a access point,
所以我有一个幻灯片是关于那个实际系统的样子，就是从接入点的角度来看的，

459
00:29:21,350 --> 00:29:22,560
and multiple hosts.
和多个主机。

460
00:29:22,560 --> 00:29:26,079
And finally, this has to do with a little bit more on the system architecture, but
最后，这还涉及到系统架构方面的一些内容，但是

461
00:29:26,079 --> 00:29:27,719
I'll wrap up there and say thank you.
我就说到这里，谢谢大家。

462
00:29:29,742 --> 00:29:31,654
>> Terrific, thank you.
>> 太棒了，谢谢。

463
00:29:31,654 --> 00:29:32,795
Are there any questions?
有什么问题吗？

464
00:29:36,816 --> 00:29:38,510
>> It says somebody I need a highlight.
>> 它说有人需要一个重点。

465
00:29:38,510 --> 00:29:39,489
I don't want the paint.
我不想要油漆。

466
00:29:42,871 --> 00:29:47,120
>> I don't know what the highlight is either [LAUGH].
我也不知道重点是什么[笑]。

467
00:29:47,120 --> 00:29:51,510
But actually, can you tell us where the work is going next?
但实际上，你能告诉我们接下来的工作将怎么进行吗？

468
00:29:52,550 --> 00:29:56,600
>> So one aspect is we asked for a no cost extension and
我们申请了无成本延期，这是其中一个方面，

469
00:29:56,600 --> 00:29:59,490
we got some funds from the power testbeds
我们从电力测试平台获得了一些资金。

470
00:29:59,490 --> 00:30:03,440
to try out some of these ideas over the air over reasonable ranges.
尝试通过空中在合理的距离内试验这些想法。

471
00:30:03,440 --> 00:30:08,750
So we basically as far as this extension to power is a platform for
所以我们基本上就是将这个扩展作为一个电力平台。

472
00:30:08,750 --> 00:30:10,280
advanced wireless research.
我们在那里所做的是与犹他测试基地进行先进无线研究。

473
00:30:10,280 --> 00:30:13,790
And what we're doing there is working with the Utah test bed
我们在那里所做的是与犹他测试基地进行合作。

474
00:30:13,790 --> 00:30:18,440
wherein they have got USRPs and SRSNT operating all of them.
其中他们有USRP和SRSNT操作所有这些。

475
00:30:18,440 --> 00:30:21,615
Where we want to try out this combination of low latency scheduling and
我们希望尝试将低延迟调度与此相结合。

476
00:30:21,615 --> 00:30:25,980
NDN with the idea that if you think of things like autonomous vehicles and so on.
我们将NDN与自动驾驶汽车等概念结合起来。

477
00:30:25,980 --> 00:30:30,370
You are going to be operating them in the field, with these long range links.
您将在野外使用这些远程链接来操作它们。

478
00:30:30,370 --> 00:30:35,000
And the question was what kind of performance gains can we get using NDN for
我们可以通过使用NDN获得哪些类型的性能提升？

479
00:30:35,000 --> 00:30:38,430
as a field reconstruction in the context of autonomous vehicles.
作为自动驾驶车辆环境中的领域重构。

480
00:30:38,430 --> 00:30:41,105
That is one one train of thought which is continuing.
这是一个持续发展的思路。

481
00:30:42,210 --> 00:30:46,200
This same idea we believe is valuable also in
我们也相信这个想法在……方面同样有价值。

482
00:30:46,200 --> 00:30:51,140
I think that was mentioned in the last session as well.
我认为那在上一次会议中也提到过。

483
00:30:51,140 --> 00:30:55,245
Essentially, it looks like it's the whole concept of ICN and
从本质上来说，看起来它是整个ICN（信息中心网络）的概念，以及

484
00:30:55,245 --> 00:30:59,440
NDN specifically seems to be quite valuable in the context of sharing
NDN在共享背景下似乎特别有价值。

485
00:30:59,440 --> 00:31:03,390
information with a lot of commonality in the context of autonomous vehicles.
信息在自动驾驶车辆的背景下具有很多共性。

486
00:31:03,390 --> 00:31:03,930
So that's
~!@#$%^&*()

487
00:31:03,930 --> 00:31:05,230
something which we think is valuable and something to look forward too.
我们认为有价值并值得期待的事物。

488
00:31:05,230 --> 00:31:09,430
>> Thank you very much for your insights.
>> 非常感谢您的见解。

489
00:31:09,430 --> 00:31:10,366
That was terrific.
那真是太棒了。

490
00:31:10,366 --> 00:31:12,375
>> Thank you.
>> 谢谢。

491
00:31:12,375 --> 00:31:18,970
>> Okay, we're gonna hand over the floor to Jeff Burke, who's gonna speak to us.
>> 好的，我们将把讲话权交给Jeff Burke，他将向我们发言。

492
00:31:18,970 --> 00:31:23,170
He's going to give us an update on ICN-Enabled Secure Edge Networking
他将向我们提供有关ICN支持的安全边缘网络的最新进展。

493
00:31:23,170 --> 00:31:27,150
with Augmented Reality the ICE-AR project.
他将会介绍增强现实技术在ICE-AR项目中的应用。

494
00:31:27,150 --> 00:31:30,260
And for those of you who don't know him already,
对于那些还不认识他的人来说，

495
00:31:30,260 --> 00:31:34,310
Jeff Burke is a Professor in Residence at the UCLA Department of Theater.
Jeff Burke 是加州大学洛杉矶分校戏剧系的常驻教授。

496
00:31:34,310 --> 00:31:37,160
He co directs REMAP, the Center for Research and
他共同指导了REMAP，即研究与工程媒介表现的中心。

497
00:31:37,160 --> 00:31:39,260
Engineering Medium Performance.
工程媒介表现联合中心，这是加州大学洛杉矶分校戏剧、电影与电视学院的一部分。

498
00:31:39,260 --> 00:31:41,540
Joint Center of the UCLA School of Theater, Film and
加州大学洛杉矶分校戏剧、电影与电视学院联合中心

499
00:31:41,540 --> 00:31:45,010
Television and the Samueli School of Engineering.
电视与塞缪利工程学院。

500
00:31:45,010 --> 00:31:48,890
REMAP has conducted application research in NDN since 2010,
REMAP自2010年以来一直在进行NDN的应用研究，

501
00:31:48,890 --> 00:31:53,978
and Jeff is a COPI in the NSF Intel Supported ICE-AR Program.
杰夫是NSF Intel支持的ICE-AR项目的合作主要研究者。

502
00:31:53,978 --> 00:31:55,417
All yours, Jeff.
全权交给你了，杰夫。

503
00:31:55,417 --> 00:31:57,110
>> Great, thanks to you.
太好了，多亏了你。

504
00:31:58,200 --> 00:32:02,090
So this is collaborative work by the PI's that are listed in
所以这是列在幻灯片底部的负责人们共同完成的工作，他们中的几位也参与了这次通话。

505
00:32:02,090 --> 00:32:05,650
the bottom of this slide and several of them are also on this call.
这张幻灯片的底部列出了他们的名字，其中几位也参与了这次通话。

506
00:32:05,650 --> 00:32:08,520
So at the end if you have questions, they're here as well.
如果你们最后有问题，他们也在这里。

507
00:32:10,150 --> 00:32:15,506
I am going to give a quick overview of the ICE-AR program,
我将快速概述ICE-AR项目，

508
00:32:15,506 --> 00:32:20,440
and talk a bit about the lessons that we've learned.
并谈谈我们学到的一些教训。

509
00:32:20,440 --> 00:32:25,279
And these are things that we've gone back and forth internally on quite a bit,
这些都是我们内部反复讨论过很多次的事情，

510
00:32:25,279 --> 00:32:28,442
both to share with Intel and NSF, and now with you.
既是为了与英特尔和美国国家科学基金会共享，现在也与您分享。

511
00:32:28,442 --> 00:32:35,395
There are four research thrusts, one in applications that really led to API and
这里有四个研究重点，其中一个是在应用领域，这个领域真正引领了API的发展，并且

512
00:32:35,395 --> 00:32:39,546
library development as a big part of the project
作为项目的重要组成部分的库开发

513
00:32:39,546 --> 00:32:44,451
as we navigated what exactly are applications needed.
在我们探索究竟需要哪些应用程序时。

514
00:32:44,451 --> 00:32:49,508
One on security at the edge, one on information-centric wireless,
一个关于边缘安全性的，一个关于信息中心无线技术的，

515
00:32:49,508 --> 00:32:54,050
so the impact of a data centric NDN based approach on lower layer
因此，基于数据中心的NDN方法对底层的影响。

516
00:32:54,050 --> 00:32:57,239
wireless technology in this edge context.
无线技术在这种边缘环境中。

517
00:32:57,239 --> 00:33:00,348
And then the use of acceleration as a service, and
以及作为一项服务的加速应用，还有

518
00:33:00,348 --> 00:33:03,974
all of these were driven by the use of augmented reality and
所有这些都是由增强现实的使用所推动的，以及

519
00:33:03,974 --> 00:33:08,710
layered mixed reality to drive research on NDN at the wireless edge.
分层混合现实技术推动了无线边缘处的NDN（命名数据网络）研究。

520
00:33:08,710 --> 00:33:12,800
So on the website, there is a significant amount of code and
因此，在网站上有大量的代码和

521
00:33:12,800 --> 00:33:14,680
more detailed publications.
更详细的出版物。

522
00:33:14,680 --> 00:33:17,660
I'm gonna go pretty quickly through everything here.
我会很快地讲解这里的所有内容。

523
00:33:17,660 --> 00:33:20,280
And so there's a lot more of a technical detail there.
所以那里有更多的技术细节。

524
00:33:20,280 --> 00:33:23,913
So the original driver was decentralized augmented reality.
所以最初的驱动力是去中心化的增强现实。

525
00:33:23,913 --> 00:33:27,541
So the basic idea is that for AR in the future,
所以基本的想法是，对于未来的AR来说，

526
00:33:27,541 --> 00:33:31,850
we may move from applications that are centralized.
我们可能会从集中式的应用程序转变过来。

527
00:33:31,850 --> 00:33:35,920
And they're delivered in a stovepipe context, both for the apps and
并且它们是在一个独立的上下文中交付的，无论是对于应用程序还是

528
00:33:35,920 --> 00:33:40,905
the content to a decentralized approach, where individuals share their context,
内容采用了一种去中心化的方法，其中个人分享他们的上下文，

529
00:33:40,905 --> 00:33:43,910
things like location, camera view, and so on.
诸如位置、摄像头视角等信息。

530
00:33:43,910 --> 00:33:47,872
And in return, get content offers from many sources.
并且作为回报，从多个来源获得内容提供。

531
00:33:47,872 --> 00:33:52,723
And that there are edge processing nodes that participate in both
并且有边缘处理节点参与其中。

532
00:33:52,723 --> 00:33:57,307
the calculation of the context or figuring out a deeper notion
计算上下文或者理解更深层的概念。

533
00:33:57,307 --> 00:34:01,537
of context from the raw sensor readings on the phone, and
从手机上的原始传感器读数中提取上下文信息，并且

534
00:34:01,537 --> 00:34:07,260
also then delivering customized content to an eventual AR experience.
还将定制内容传送至最终的增强现实体验中。

535
00:34:07,260 --> 00:34:11,765
And over the course of the project, I think we shifted on the application side
在项目过程中，我认为我们在应用方面进行了调整。

536
00:34:11,765 --> 00:34:16,200
to not only looking at AR, but really looking at a more general shift in media
不仅仅关注增强现实技术，而是真正考虑到媒体的更广泛转变。

537
00:34:16,200 --> 00:34:20,706
and experience and delivery from an old model in which computation was kind of
在旧模式中，计算在某种程度上是

538
00:34:20,706 --> 00:34:23,717
isolated at each stage of the production process.
在生产过程的每个阶段都是孤立的。

539
00:34:23,717 --> 00:34:28,593
From envisioning the media, to making it, to delivering it, and experiencing it,
从构想媒体，到制作媒体，再到传递媒体，以及体验媒体，

540
00:34:28,593 --> 00:34:33,151
to really a realtime model that's inspired by certainly the way the web works.
转变为一个真正的实时模型，这种模型无疑是受到了网络运作方式的启发。

541
00:34:33,151 --> 00:34:37,635
But also now, game engines, and some of the realtime 3D rendering tools
但现在，游戏引擎和一些实时3D渲染工具也在影响着增强现实、虚拟现实和电影制作等领域。

542
00:34:37,635 --> 00:34:40,963
that are influencing AR VR cinematic production and so
正在影响着增强现实、虚拟现实和电影制作等领域。

543
00:34:40,963 --> 00:34:45,811
on, which presents a lot of interesting opportunities for edge computation,
在这方面，为边缘计算带来了许多有趣的机会，

544
00:34:45,811 --> 00:34:49,980
in which media is customized at the last possible moment.
在这种情况下，媒体内容在最后可能的时刻被定制。

545
00:34:49,980 --> 00:34:54,570
So the first of the ICE-AR thrusts was this application focus,
因此，ICE-AR项目的首个重点是这个应用程序的焦点。

546
00:34:54,570 --> 00:34:57,860
and I'm actually not gonna discuss too much the AR and
我实际上不打算过多讨论增强现实技术。

547
00:34:57,860 --> 00:35:02,718
MR integration tests that were really driving our hands on experimentation.
MR集成测试真正推动了我们进行实际操作实验。

548
00:35:02,718 --> 00:35:06,750
And just wanna focus for this presentation on four outcomes,
并且只想在这次演讲中专注于四个成果，

549
00:35:06,750 --> 00:35:09,720
in terms of new APIs and libraries for the community.
在新的API和社区库方面。

550
00:35:09,720 --> 00:35:13,555
The first is called the Common Name Library, NDN-CNL.
第一个被称为通用名称库，NDN-CNL。

551
00:35:13,555 --> 00:35:18,980
And this is a collection oriented API for NDN that kind of moves one layer up
这是一个面向NDN的集合导向型API，它在某种程度上提升了一个层次。

552
00:35:18,980 --> 00:35:24,600
from the interest data exchange that most of the existing APIs that handle.
它提供了一种替代基于套接字的思维方式，这种方式专注于处理大多数现有API所涉及的兴趣数据交换。

553
00:35:24,600 --> 00:35:29,379
And presents an alternative to a socket based way of thinking that focuses on
它提供了一种替代基于套接字的思维方式，这种方式专注于处理

554
00:35:29,379 --> 00:35:33,350
name based collections as the API for the application itself.
名称基于集合作为应用程序本身的API。

555
00:35:34,720 --> 00:35:39,820
The second was a integration of our previous work on realtime
第二个是我们之前关于实时工作的整合。

556
00:35:39,820 --> 00:35:44,800
video into a visual programming language called touch designer.
这被称为TouchNDN，所以你会看到一点将视频转换成一种名为Touch Designer的视觉编程语言。

557
00:35:44,800 --> 00:35:49,966
This was called TouchNDN, so you'll see a little
这被称为TouchNDN，所以你会看到一点

558
00:35:49,966 --> 00:35:56,980
bit in the video that probably is not playing very smoothly for you.
在视频中的一小部分可能没有为你播放得很流畅。

559
00:35:56,980 --> 00:35:59,654
But you get a rough idea of his visual programming environment for
但你大概了解了他的视觉编程环境。

560
00:35:59,654 --> 00:36:01,900
experimenting with data centric media.
实验数据中心媒体。

561
00:36:01,900 --> 00:36:07,240
Then on the lower right is a stack diagram for NDN-Lite, which is the latest
然后在右下角是NDN-Lite的堆栈图，这是最新的

562
00:36:07,240 --> 00:36:13,870
generation IoT framework kind of taking into account the needs of both easy and
世代物联网框架在考虑到既要简单又要满足需求的同时，

563
00:36:13,870 --> 00:36:19,430
cross platform deployment of NDN for IoT, and AR support context.
跨平台部署适用于物联网的NDN，以及支持AR上下文环境。

564
00:36:19,430 --> 00:36:20,200
But also,
但同时，

565
00:36:20,200 --> 00:36:24,390
trying to build on a lot of IoT work that's happened in the community before.
试图在此前社区中发生的大量物联网（IoT）工作的基础上进行拓展。

566
00:36:24,390 --> 00:36:28,306
And then finally, some approaches to remote procedure calls that would
最后，一些远程过程调用的方法将会

567
00:36:28,306 --> 00:36:31,655
be used to generalize the way that we invoke remote services.
被用来推广我们调用远程服务的方式。

568
00:36:31,655 --> 00:36:38,053
And some demonstration of how to modify existing video codecs to take advantage
以及一些如何修改现有视频编解码器以利用

569
00:36:38,053 --> 00:36:44,354
of NDNs consumer driven approach to being able to select video both in space and
NDN消费者驱动方法的优势，能够在空间和

570
00:36:44,354 --> 00:36:49,728
time at the level of an individual, and the interest using names.
在个体层面上选择视频的时间，以及利用名称表达兴趣。

571
00:36:49,728 --> 00:36:50,854
And of course,
当然，

572
00:36:50,854 --> 00:36:56,932
we're looking at security as being built into the applications into the network.
我们正在研究将安全性内置于应用程序和网络之中。

573
00:36:56,932 --> 00:37:01,737
But really, from an NDN research point of view, focusing on continuing
但实际上，从命名数据网络（NDN）研究的角度来看，重点在于持续发展。

574
00:37:01,737 --> 00:37:06,640
the effort to dymatize security relationships through the use of names.
努力通过使用命名来动态化安全关系。

575
00:37:06,640 --> 00:37:11,940
And so there are several examples listed on this slide that range from
因此，在这张幻灯片上列举了一些例子，这些例子涵盖了不同的范围。

576
00:37:11,940 --> 00:37:17,930
new certificate schemes like Coalesce for efficient shortlived keys on IoT,
新的证书方案，例如用于物联网上高效的短暂密钥的Coalesce方案，

577
00:37:17,930 --> 00:37:21,950
to continued work on our certificate infrastructure.
继续在我们的证书基础设施上进行工作。

578
00:37:21,950 --> 00:37:25,950
Do some applications of attribute based cryptography that
提供了一些基于属性的加密应用，这些应用可以在我们能够在名称中指定的内容和...之间提供一个良好的桥梁，

579
00:37:25,950 --> 00:37:30,690
provide a nice bridge between what we can specify in a name,
提供了一个很好的桥梁，连接了我们在名称中所能指定的内容，

580
00:37:30,690 --> 00:37:35,380
in terms of the attributes that might allow verification
在可能允许验证的属性方面

581
00:37:36,860 --> 00:37:44,400
of data with essentially policy in a way baked into the ABS certificates,
数据基本上在ABS证书中以一种内置政策的方式进行处理，

582
00:37:44,400 --> 00:37:51,250
to access control of that context exchange that I mentioned earlier.
以及我之前提到的那种上下文交换的访问控制。

583
00:37:51,250 --> 00:37:54,670
And looking also finally at availability, and
以及最后审视可用性，还有

584
00:37:54,670 --> 00:37:57,690
how to handle DDoS in these circumstances.
如何在这些情况下处理DDoS攻击。

585
00:37:57,690 --> 00:38:00,530
So some of the security APIs are on the call, and
有些安全API正在通话中，

586
00:38:00,530 --> 00:38:03,640
I think might be interested in answering detailed questions if you'd like to
我认为如果您愿意的话，可能会对回答详细问题感兴趣。

587
00:38:03,640 --> 00:38:08,610
know more about the security work, sorry.
了解更多关于安全工作的信息，抱歉。

588
00:38:08,610 --> 00:38:17,160
And then the third area of research was focused on the impact of an information,
再然后，第三个研究领域集中在信息影响上，

589
00:38:17,160 --> 00:38:20,370
or data centric way of thinking on the wireless layer.
或者是在无线层面上的以数据为中心的思维方式。

590
00:38:20,370 --> 00:38:25,317
And if you think about NDNs intrinsic multicast behavior, it's well suited for
如果你考虑到NDN天生的多播行为，它非常适合用于

591
00:38:25,317 --> 00:38:28,880
wireless media, or at least, it should be well suited for
无线媒体，或者至少，它应该很适合用于

592
00:38:28,880 --> 00:38:31,514
a media that is intrinsically broadcast.
一种本质上是广播的媒体。

593
00:38:31,514 --> 00:38:35,936
But the common implementations of WiFi have been focused on unicast behavior.
但是WiFi的常见实现集中在单播行为上。

594
00:38:35,936 --> 00:38:41,221
So a lot of the effort in this thrust to the project was to find ways to actually
因此，该项目的很大一部分努力是为了找到实际上的方法。

595
00:38:41,221 --> 00:38:46,426
take advantage and create high performance link layer wireless multicast
利用可用的NDN兴趣和数据名字，创建高性能的链路层无线组播。

596
00:38:46,426 --> 00:38:51,780
that is leveraging the names that are available in NDN interest and data.
这是利用在NDN兴趣和数据中可用的名字。

597
00:38:51,780 --> 00:38:57,122
And at the same time, to take further advantage of those names to start doing
并且同时，进一步利用这些名字开始进行

598
00:38:57,122 --> 00:39:02,311
runtime learning and reasoning about different types of failure modes.
运行时学习和推理关于不同类型的故障模式。

599
00:39:02,311 --> 00:39:07,190
So both to look at the traffic patterns based on the names themselves, but also,
因此，既要根据名称本身来观察交通模式，也要，

600
00:39:07,190 --> 00:39:10,085
things that can be encoded in interest as well.
同时也要编码进兴趣中的东西。

601
00:39:10,085 --> 00:39:14,895
And so some of the experimental results from the wireless group are listed below,
因此，无线组的一些实验结果如下所述，

602
00:39:14,895 --> 00:39:20,610
and include higher performance multicast, improved application speeds for AR and VR.
并包括更高性能的多播、增强现实和虚拟现实应用程序速度的提升。

603
00:39:20,610 --> 00:39:25,244
And decreased packet loss in these high performance multicast situations,
以及在这些高性能多播情况下减少了数据包丢失，

604
00:39:25,244 --> 00:39:29,093
as well as some implementation additions to Android WiFi direct
以及对Android WiFi直连进行了一些实现上的补充。

605
00:39:29,093 --> 00:39:33,814
that were important to the future of the applications that we were looking at.
这些对于我们正在研究的应用程序的未来非常重要。

606
00:39:33,814 --> 00:39:40,329
And then finally, as a kinda key example of an edge service well supported by NDN.
然后最后，作为一个由NDN很好支持的边缘服务的关键例子。

607
00:39:40,329 --> 00:39:44,367
We looked at FPGA based acceleration taking,
我们研究了基于FPGA的加速技术，

608
00:39:44,367 --> 00:39:50,475
in this particular case, an interest in trying to ingest at the edge,
在这个特定情况下，对于尝试在边缘进行数据摄取表现出了兴趣，

609
00:39:50,475 --> 00:39:56,065
low latency content from the camera that's carried on a phone or
低延迟的内容来自手机上的摄像头，或者

610
00:39:56,065 --> 00:39:59,920
a headset, and go from unprocessed video.
一个耳机，以及从未经处理的视频开始。

611
00:39:59,920 --> 00:40:02,590
That's something where there was some deep context about
这是某件事情，其中包含了一些深层次的背景。

612
00:40:02,590 --> 00:40:06,270
what was happening with the human beings in the scene?
在那个场景中，人类发生了什么事？

613
00:40:06,270 --> 00:40:10,450
So we're interested in pose recognition as an initial sort of basis for
所以我们对姿态识别感兴趣，作为一种初始的基础。

614
00:40:10,450 --> 00:40:13,320
understanding activity and human behavior.
理解活动和人类行为。

615
00:40:13,320 --> 00:40:18,883
>> And Jason Collins group at UCLA worked on a novel FPGA acceleration
杰森·科林斯在加州大学洛杉矶分校的小组致力于研究一种新颖的FPGA加速技术。

616
00:40:18,883 --> 00:40:24,561
with low power, sort of a nice low power and high frame rate result.
这就是一个例子，展示了如何将其插入到一个低功耗且高帧率的加速器中。

617
00:40:24,561 --> 00:40:29,442
That was an example of what can then be plugged into an acceleration
这就是一个可以随后插入到加速器中的例子。

618
00:40:29,442 --> 00:40:34,410
as a service model, leveraging the work from Alicia Shanks group on
作为一种服务模型，利用了Alicia Shanks小组的工作成果。

619
00:40:34,410 --> 00:40:37,999
this remote procedure call general mechanism.
这种远程过程调用的通用机制。

620
00:40:37,999 --> 00:40:43,458
So I'm gonna use just a few minutes now at the end to talk about contributions and
所以现在我要用最后的几分钟来谈谈贡献和

621
00:40:43,458 --> 00:40:44,772
lessons learned.
所学到的教训。

622
00:40:44,772 --> 00:40:47,956
Maybe focusing a little bit more on the lessons.
也许应该更多地关注所学到的教训。

623
00:40:47,956 --> 00:40:52,702
What we saw, we believe is a further validation of the architecture and
我们所见证的，我们相信是对架构的进一步验证，以及它在惠及这些无线边缘应用方面的方法。

624
00:40:52,702 --> 00:40:56,985
its approach in benefiting these wireless edge applications.
它在惠及这些无线边缘应用方面的方法。

625
00:40:56,985 --> 00:40:59,838
I wanna point out just one thing in particular,
我想特别指出一件事情。

626
00:40:59,838 --> 00:41:04,205
which is the middle bullet here on the network computation and storage.
这是网络计算和存储这里的中间要点。

627
00:41:04,205 --> 00:41:07,142
And I would add actually content producers and
实际上，我还要补充内容生产者和

628
00:41:07,142 --> 00:41:10,386
consumers as well are all supplying the same data.
消费者们也在提供相同的数据。

629
00:41:10,386 --> 00:41:15,266
And so through seamless integration into an ecosystem of new devices from
因此通过无缝集成到一个由新设备组成的生态系统中，

630
00:41:15,266 --> 00:41:19,909
IoT to media and I think one place where we saw that in a very concrete and
物联网到媒体，我认为我们在一个非常具体的地方看到了这一点，而且

631
00:41:19,909 --> 00:41:24,710
specific way in my are, which was focusing on applications was suddenly
在我的领域，一个特定的方式就是突然将重点放在应用程序上。

632
00:41:24,710 --> 00:41:29,142
being able to look at video from several different perspectives.
能够从几个不同的角度查看视频。

633
00:41:29,142 --> 00:41:32,999
Was it a bus that we could tap into a stream that we would receive in
我们能够接入的是一辆可以实时传输视频的公交车吗？

634
00:41:32,999 --> 00:41:34,214
a traditional way or
传统的方式或者

635
00:41:34,214 --> 00:41:38,947
essentially part of the key value store that really looked a lot like storage.
本质上是键值存储的一部分，这实际上非常类似于存储。

636
00:41:38,947 --> 00:41:42,361
It actually didn't matter how the video was produced,
实际上，视频是如何制作的并不重要，

637
00:41:42,361 --> 00:41:47,082
but by having it in the NDN packet format and on the network, we could use any of
但是将其放在NDN数据包格式中并置于网络上，我们可以使用任何一种

638
00:41:47,082 --> 00:41:51,803
those three approaches to access both live and historical video as an example
这三种方法作为一个例子，可以访问实时和历史视频。

639
00:41:51,803 --> 00:41:56,548
of the sort of impact of the architecture on how we think about applications.
这种架构对我们思考应用程序可能产生的影响。

640
00:41:56,548 --> 00:42:01,062
Also, the ICR project is definitely deepened our team's understanding of
此外，ICR项目无疑加深了我们团队的理解。

641
00:42:01,062 --> 00:42:05,164
the impact of the network architecture both upwards and downwards.
对网络架构向上和向下的影响。

642
00:42:05,164 --> 00:42:10,556
So impacting lower layer technologies that are now optimized to support IP and
因此影响了现在为支持IP而优化的底层技术。

643
00:42:10,556 --> 00:42:16,031
essentially point-to-point delivery mechanism most of the time as well as,
基本上大多数时间内都是点对点传输机制，以及，

644
00:42:16,031 --> 00:42:20,602
of course, the impact on upper layer apps in terms of how they think
当然，这对上层应用在它们的思考方式上的影响。

645
00:42:20,602 --> 00:42:22,725
about moving content around,
关于移动内容，

646
00:42:22,725 --> 00:42:27,983
making connections before they proceed with exchanging content and so on.
在他们进行内容交换等操作之前建立联系。

647
00:42:27,983 --> 00:42:34,930
Certainly there's impact in the middle and on the approach to security, as well.
当然，这也会对中间层以及安全性方法论产生影响。

648
00:42:34,930 --> 00:42:39,583
We saw I think from that impact on the upper and lower layers, some challenges
我们认为，从那种对上层和下层的影响中，我们看到了一些挑战。

649
00:42:39,583 --> 00:42:44,464
that we hadn't really expected on quantitative comparisons implementation.
我们确实没有预料到，在定量比较的实施上，会有一些我们没想到的好的性能结果。

650
00:42:44,464 --> 00:42:49,409
So certainly there are some nice performance results from the subareas that
所以毫无疑问，从各个子领域中我们确实获得了一些不错的性能结果。

651
00:42:49,409 --> 00:42:52,577
I mentioned briefly in the previous slides, but
我在之前的幻灯片中简要提到过，但是

652
00:42:52,577 --> 00:42:57,135
a lot of those took far more implementation effort than we'd expected
很多工作的实施努力超出了我们的预期。

653
00:42:57,135 --> 00:43:02,156
to access lower layers in the protocol stack or to modify the media formats and
访问协议堆栈中的较低层或修改媒体格式和

654
00:43:02,156 --> 00:43:06,431
protocols that are intertwined and increasingly complex ways.
协议以交织且日益复杂的方式运作。

655
00:43:06,431 --> 00:43:11,808
Bacon assumptions and certainly to start testing things in larger AR platforms and
贝肯的假设无疑是开始在更大的AR平台上测试事物的起点。

656
00:43:11,808 --> 00:43:13,726
game engines that are in, and
游戏引擎本身就是重要的软件工程项目。

657
00:43:13,726 --> 00:43:17,744
of themselves significant software engineering projects.
本身就是重要的软件工程项目。

658
00:43:17,744 --> 00:43:22,394
So there was a lot, I think that we learned about how to potentially
所以我认为我们学到了很多关于如何可能

659
00:43:22,394 --> 00:43:27,294
support this kind of experimentation a little better in the future and
支持这种实验在未来更好的进行。

660
00:43:27,294 --> 00:43:30,864
maybe lobby a bit for more access to the hardware and
也许可以适当游说以获取更多的硬件访问权限，

661
00:43:30,864 --> 00:43:36,370
operating system functionality that's needed to really demo NDN's value.
操作系统功能，这是真正展示NDN价值所必需的。

662
00:43:36,370 --> 00:43:39,033
So one of the common questions we got was well,
那么我们常见的一个问题是，嗯，

663
00:43:39,033 --> 00:43:41,232
can't we use the same thing using IP?
我们不能用IP做同样的事情吗？

664
00:43:41,232 --> 00:43:43,174
And there are a few answers here.
这里有一些答案。

665
00:43:43,174 --> 00:43:47,898
I won't go into all of them, but this is a nice conversation that we might be able to
我不会详述所有内容，但这是一个不错的对话，我们可能有机会

666
00:43:47,898 --> 00:43:51,742
have in some of the panels over the course of the next several days.
在接下来的几天里，我们将在一些小组讨论中有所涉猎。

667
00:43:51,742 --> 00:43:56,928
But then to wrap up here with a little bit more on our sort of understanding
但在此最后总结一下，关于我们对这方面理解的更多内容。

668
00:43:56,928 --> 00:44:02,725
is we were really looking for OS platforms to allow deeper access to the network.
我们真正寻求的是允许更深入访问网络的操作系统平台。

669
00:44:02,725 --> 00:44:07,852
And so that's a place that we need to maybe provide some support for
因此，那是我们可能需要提供一些支持的地方。

670
00:44:07,852 --> 00:44:09,053
researchers.
研究人员。

671
00:44:09,053 --> 00:44:13,789
Certainly we wanted to try to allow applications to implement a data centric
当然，我们希望尝试允许应用程序实现以数据为中心的

672
00:44:13,789 --> 00:44:16,749
paradigm directly in the application design,
范式直接集成到应用程序设计中，

673
00:44:16,749 --> 00:44:20,532
which was something that the Indian CNL library tries to do.
这是印度CNL图书馔尝试去做的事情。

674
00:44:20,532 --> 00:44:23,947
And in cases where we can with that type of library to allow
以及在我们可以使用那种类型的图书馆来允许

675
00:44:23,947 --> 00:44:27,932
that data centric designed to also operate at the network level and
那种以数据为中心的设计也旨在在网络层面上运作，并且

676
00:44:27,932 --> 00:44:32,772
provides something where there's not maybe as much of a semantic gap between how
提供了一种东西，在这里可能语义上的差距没有那么大，介于应用设计师的工作方式和NDN网络的运作方式之间。

677
00:44:32,772 --> 00:44:36,924
application designers are working, and how the NDN network works.
应用设计师的工作方式，以及NDN网络的运作方式。

678
00:44:36,924 --> 00:44:42,370
And this is guiding us towards, hopefully some future fruitful areas of focus.
这正引导我们朝着希望能够成为未来富有成效的关注领域前进。

679
00:44:42,370 --> 00:44:45,613
We're not trying to change everything all at once, but
我们不是试图一次性改变所有事情，而是

680
00:44:45,613 --> 00:44:50,102
work potentially bit by bit from the edge focusing on plug and play behavior.
逐步从边缘开始，专注于即插即用的行为。

681
00:44:50,102 --> 00:44:55,104
the NDN platform and greenfields where a lot of this previous sort of
NDN平台和绿地，在这些地方之前的许多类似的事情

682
00:44:55,104 --> 00:45:00,473
the previous emphasis and optimizations for IPR had less of a foothold.
之前对知识产权的重视和优化措施并没有太大的立足点。

683
00:45:00,473 --> 00:45:05,581
So some of the the future work is listed here and happy to talk about any of that.
所以一些未来的工作在这里列出了，我很乐意讨论其中的任何内容。

684
00:45:05,581 --> 00:45:08,051
>> Yeah, maybe I'll take one question if there is one.
如果有人提问的话，我可以回答一个问题。

685
00:45:08,051 --> 00:45:12,327
If not, then maybe a final comment on the most exciting future work as you see it.
如果没有问题的话，那么或许可以就您认为最激动人心的未来工作做一个最后的评论。

686
00:45:14,373 --> 00:45:16,393
Is there a question out there?
有没有什么问题？

687
00:45:16,393 --> 00:45:18,226
Thank you for a great presentation.
谢谢你精彩的演讲。

688
00:45:21,554 --> 00:45:26,152
Okay, final thoughts on exciting future.
好的，关于激动人心的未来的最后想法。

689
00:45:26,152 --> 00:45:30,663
>> I can tell you the final thought that's sort of the most exciting for
我可以告诉你最令人兴奋的最后一个想法是什么

690
00:45:30,663 --> 00:45:34,937
me which is plug and play sounds simple or maybe simplistic, but
我认为“即插即用”听起来很简单，甚至可能过于简化，但是

691
00:45:34,937 --> 00:45:39,845
I think the more that we can take this experience in the last three years and
我认为我们越是能够借鉴过去三年的经验，

692
00:45:39,845 --> 00:45:44,832
at each within each thrust look at ways to get these tools into the hands of as
在每一次推进中，寻找方法将这些工具交到尽可能多的研究人员和实验者手中。

693
00:45:44,832 --> 00:45:48,263
many researchers and experimenters as possible.
将这些工具交到尽可能多的研究人员和实验者手中。

694
00:45:48,263 --> 00:45:52,813
That seems to be one of the most exciting parts of the future work right now.
这似乎是当前未来工作中最激动人心的部分之一。

695
00:45:52,813 --> 00:45:56,673
>> And with that, you're focusing on the ease of configurability, I think.
>> 正因为此，我认为你专注于配置的便利性。

696
00:45:56,673 --> 00:46:01,271
>> Ease of configurability, but I think also trying to find ways to have
>> 便于配置，但我认为也在努力寻找方法来实现

697
00:46:01,271 --> 00:46:05,884
the API's present an easy to understand data centric perspective.
API提供了一个易于理解的以数据为中心的视角。

698
00:46:05,884 --> 00:46:12,062
So it's definitely making things work as simply as possible to experiment,
所以它确实在尽可能简化事物，以便于进行实验，

699
00:46:12,062 --> 00:46:18,430
but also trying to kind of help guide applications to a data centric perspective
但同时也试图以某种方式引导应用程序转向以数据为中心的视角。

700
00:46:18,430 --> 00:46:24,251
that allows them to take advantage of the network behavior underneath.
这使他们能够利用底层的网络行为。

701
00:46:24,251 --> 00:46:28,018
>> Great, can the organisers tell us,
>> 太好了，组织者能告诉我们吗？

702
00:46:28,018 --> 00:46:31,913
do we have time for one more question?
我们还有时间再问一个问题吗？

703
00:46:31,913 --> 00:46:33,142
>> Don't think so leave.
>> 我认为不要这么想就离开。

704
00:46:33,142 --> 00:46:34,970
>> Okay, we'll take it offline.
>> 好的，我们私下里讨论。

705
00:46:36,160 --> 00:46:36,840
>> Thank you so much.
>> 非常感谢您。

706
00:46:37,930 --> 00:46:40,205
>> Thank you all.
>> 谢谢大家。

707
00:46:40,205 --> 00:46:41,798
>> Thank you very much.
>> 非常感谢。

708
00:46:41,798 --> 00:46:45,435
The agenda has the next panel two, but
议程上接下来是第二个小组讨论，但是

709
00:46:45,435 --> 00:46:49,642
we have Ilya who missed the big recession and
我们有伊利亚，他错过了那次大衰退，而且

711
00:46:53,633 --> 00:46:58,737
So we're delaying panel two no more than ten minutes, Ilya.
所以我们将延迟第二个小组讨论不超过十分钟，伊利亚。

712
00:46:58,737 --> 00:47:01,015
>> Okay, great.
>> 好的，太好了。

713
00:47:01,015 --> 00:47:04,370
So yes, thank you for having me here today.
所以是的，感谢今天有我在此。

714
00:47:04,370 --> 00:47:10,230
I think my presentation be somewhat out of maybe not quite in context with everything
我认为我的演讲可能有些脱离了上下文。

715
00:47:10,230 --> 00:47:15,772
else that was discussed, because it's not specific to Indian architecture.
因为它并不特定于印度建筑，所以可能与讨论的其他内容不太相关。

716
00:47:15,772 --> 00:47:20,190
So fabric is a midscale research infrastructure.
所以织物是一种中等规模的研究基础设施。

717
00:47:20,190 --> 00:47:25,153
Project funded last year before years to build a nationwide
去年资助的项目旨在建立一个全国性的

718
00:47:25,153 --> 00:47:30,018
networking testbed that will allow experimentation with
网络测试平台，它将允许进行实验，涉及到

719
00:47:30,018 --> 00:47:34,882
a variety of distributed, verticals, applications and
各种分布式的、垂直的、应用程序和

720
00:47:34,882 --> 00:47:39,844
architectures with a key idea being that it is really kind of
架构的一个关键思想是它确实有点

721
00:47:39,844 --> 00:47:45,126
time to look at potentially putting more state in the network.
考虑在网络中增加更多状态的时机已经到来。

722
00:47:45,126 --> 00:47:49,340
And what form that state might take we as the builders of this
我们作为这一基础设施的构建者，应该考虑这种状态可能呈现的形式。

723
00:47:49,340 --> 00:47:53,219
infrastructure try not to have too much influence on,
基础设施尽量不要对此产生太多影响，

724
00:47:53,219 --> 00:47:58,730
rather just trying to create as many options there for experimenters to try.
而只是尽量为实验者创造更多的尝试选项。

725
00:48:00,080 --> 00:48:05,970
And of course, NDN architecture is one example of an open new
当然，NDN架构就是一个开放的新例子。

726
00:48:05,970 --> 00:48:11,010
internet architecture that has more state that requires storage and
互联网架构需要存储更多状态信息，

727
00:48:11,010 --> 00:48:12,680
processing capabilities out of the network.
需要将处理能力从网络中分离出来。

728
00:48:13,860 --> 00:48:17,680
But as I said, we ourselves as the builders of this infrastructure,
但正如我所说，作为这一基础设施的建设者，

729
00:48:17,680 --> 00:48:22,430
try to remain neutral to the various possibilities.
努力对各种可能性保持中立。

730
00:48:22,430 --> 00:48:26,490
That should the computing community has a chance to explore
计算机界应有机会去探索

731
00:48:26,490 --> 00:48:29,030
these various inflection points in the architecture and
这些架构中的各种拐点和

732
00:48:29,030 --> 00:48:33,140
then decide what works and what doesn't at a reasonable level of scale.
然后决定在合理的规模水平上什么有效，什么无效。

733
00:48:33,140 --> 00:48:36,610
So, just to briefly introduce the leadership team has myself and
所以，简单介绍一下领导团队，包括我自己和

734
00:48:36,610 --> 00:48:41,110
Nita Nicolaj from inner cylinder Urbana Champaign in the manga is the executive
内塔·尼科莱来自内圆筒城市厄巴纳-香槟，在漫画中是执行者。

735
00:48:41,110 --> 00:48:44,500
director of Department of Energy's energy sciences network.
能源部能源科学网络的主任。

736
00:48:44,500 --> 00:48:48,290
Jim Griffin from University of Kentucky, Casey Wang from Clemson.
吉姆·格里芬来自肯塔基大学，凯西·王来自克莱姆森大学。

737
00:48:48,290 --> 00:48:51,350
Tom layman, also Polo Roof and Zong Ling, Fei.
汤姆·莱曼，还有波罗·鲁夫和宗凌，飞。

738
00:48:53,150 --> 00:48:54,070
So what is fabric?
那么什么是fabric呢？

739
00:48:55,330 --> 00:49:00,900
As I mentioned, its goal to enable a new paradigm for
正如我所提到的，它的目标是为了启用一个新的范式来

740
00:49:00,900 --> 00:49:04,050
distributed protocols, applications and architectures.
分布式协议、应用程序和架构。

741
00:49:04,050 --> 00:49:06,960
The intent is to build a nationwide programmable network
旨在构建一个全国范围的可编程网络。

742
00:49:06,960 --> 00:49:11,190
with significant compute storage capabilities at each node within the core,
拥有在核心每个节点内的显著计算存储能力，

743
00:49:11,190 --> 00:49:13,330
not just at the edge, but in the core.
不仅在边缘，还在核心。

744
00:49:13,330 --> 00:49:18,200
Such that you have a continuum now of possibilities of where to put your storage
因此，你现在有了一个连续的可能性范围，用于决定在哪里放置你的存储。

745
00:49:18,200 --> 00:49:22,870
computation on data as it travels through the network.
计算可以在数据通过网络传输时进行。

746
00:49:22,870 --> 00:49:28,297
And the idea is that the computation can be supported by a variety of augmented
计算可以得到各种增强设备的支持。

747
00:49:28,297 --> 00:49:33,403
computing devices like GPU like FPGAs, network processors, etc etc.
计算设备，如GPU、FPGA、网络处理器等等。

748
00:49:33,403 --> 00:49:37,477
Quality of Service is important from repeatability, reproducibility of
服务质量从可重复性、可复制性的角度来看是很重要的。

749
00:49:37,477 --> 00:49:41,547
experience point of view, we shouldn't forget that this is a testbed, so
从经验的角度来看，我们不应该忘记这是一个试验平台，所以

750
00:49:41,547 --> 00:49:45,055
that's provided by dedicated hundred gigabit optical links.
这是由专用的百吉比特光纤链路提供的。

751
00:49:45,055 --> 00:49:49,514
And then also the ideas of fabric is not in itself a sandbox, but
而且所谓的网络结构并不是一个独立的沙盒环境，而是

752
00:49:49,514 --> 00:49:54,399
rather in connects incentives to interconnect other facilities HPC
而是将激励措施与连接其他设施的高性能计算(HPC)联系起来。

753
00:49:54,399 --> 00:49:59,536
centers cloud wireless test bits Public clouds, commercial clouds and
公共云、商业云以及

754
00:49:59,536 --> 00:50:04,166
a number of edge nodes such that the experimenter can pick what her
实验者可以选择所需的边缘节点数量，以便让她的

755
00:50:04,166 --> 00:50:08,880
kind of selection of resources is within her global experiment and
实验者可以在其全球实验中选择所需的资源种类，以及

756
00:50:08,880 --> 00:50:13,471
you know, pick the ones that are closest to what what she needs.
你知道的，选择那些最接近她所需的资源。

757
00:50:13,471 --> 00:50:17,717
Rather than having to kind of reinvent everything from scratch because fabric
因为面料的原因，我们没有必要从头开始重新发明一切。

758
00:50:17,717 --> 00:50:21,964
really can't and shouldn't try to reproduce the entirety of the ecosystem of
真的不能也不应该试图复制整个生态系统的完整性。

759
00:50:21,964 --> 00:50:25,589
computation on other resources available to researchers today.
而是在今天研究人员可用的其他资源上进行计算。

760
00:50:25,589 --> 00:50:27,990
Instead it's producing.
它反而在生产。

761
00:50:27,990 --> 00:50:31,930
It provides a separate way of transporting data between those
它提供了一种在它们之间传输数据的独立方式。

762
00:50:31,930 --> 00:50:34,500
while computing on it in flight, essentially.
在飞行过程中进行计算，基本上就是这样。

763
00:50:36,510 --> 00:50:40,150
This is our idea of what the topology will look like when it's completed.
这是我们对于拓扑结构完成时的样子的想法。

764
00:50:40,150 --> 00:50:43,430
Of course, subject to change over the next few years.
当然，这在接下来的几年中可能会有所改变。

765
00:50:43,430 --> 00:50:47,060
We're at the end of year one of the four year construction project.
我们已经完成了四年建设项目的第一年。

766
00:50:48,150 --> 00:50:52,570
All the blue links are dedicated hundred gig capacity.
所有蓝色链接都是专用的百吉比特容量。

767
00:50:52,570 --> 00:50:55,980
And then the yellow is what we call this terabit super core.
然后黄色的部分是我们所说的太比特超级核心。

768
00:50:55,980 --> 00:51:00,610
This is where we plan to have some version of a terabit network
这是我们计划建设某种形式的太比特网络的地方。

769
00:51:00,610 --> 00:51:04,890
either it's one terabit 1.2 terabit per second.
无论是一太比特还是每秒1.2太比特。

770
00:51:04,890 --> 00:51:08,330
Of course, there are locations where we will appear with public clouds using
当然，我们会在某些地方出现，使用公共云进行连接。

771
00:51:08,330 --> 00:51:09,930
internet to Cloud Connect system.
互联网到云连接系统。

772
00:51:11,510 --> 00:51:14,600
Such that, you can't really think of an experiment and
因此，你真的无法想象一个实验并

773
00:51:14,600 --> 00:51:18,140
infrastructure today that doesn't include some version of a public cloud.
如今的基础设施都会包含某种形式的公共云服务。

774
00:51:18,140 --> 00:51:19,950
So obviously that's that's a requirement and
所以很明显，这是一个需求。

775
00:51:19,950 --> 00:51:23,380
then you can see also all the facilities, at least the initial list of facilities,
然后你也可以看到所有的设施，至少是最初的设施列表，

776
00:51:23,380 --> 00:51:28,170
we're going to connect Do you see tag cloud love powder cosmos,
我们将要连接，你看到了标签云，爱情粉末，宇宙，

777
00:51:28,170 --> 00:51:31,670
the Pittsburgh supercomputing center mgh, PCC, etc, etc.
匹兹堡超级计算中心，MGH，PCC等等。

778
00:51:33,980 --> 00:51:35,670
A little bit about the hardware.
关于硬件方面的一点介绍。

779
00:51:35,670 --> 00:51:38,710
So the whole idea is that we want to interpose compute and
所以整个想法是我们想要在计算之间进行插入和

780
00:51:38,710 --> 00:51:40,400
storage, different types of compute and
存储、不同类型的计算和

781
00:51:40,400 --> 00:51:43,430
storage into the path of fast packet flows that are right in the network.
存储进入网络中快速数据包流动的路径。

782
00:51:44,520 --> 00:51:49,090
So, you know, each site is a rack of high performance servers,
因此，你知道，每个站点都是一组高性能服务器，

783
00:51:49,090 --> 00:51:54,100
dual dual CPU 32 core, have half a terabyte
双双CPU 32核心，拥有半个TB的RAM，在每个站点的服务器中有不同类型。

784
00:51:54,100 --> 00:51:58,440
of RAM, different flavors of servers in each site.
的RAM，在每个站点的服务器中有不同类型。

785
00:51:58,440 --> 00:52:03,360
Some have loaded with GPUs, some of FPGAs and network cards.
有些服务器装载了GPU，有些则装有FPGA和网卡。

786
00:52:03,360 --> 00:52:05,720
Storage of different tiers on
不同层次的存储设备上

787
00:52:05,720 --> 00:52:11,320
some experimental provisional NVMe drives as well as rotating storage at each site.
一些实验性的临时NVMe驱动器以及每个站点的旋转存储设备。

788
00:52:11,320 --> 00:52:16,280
And of course, everything connecting with to a to a to a switch that has
当然，一切都连接到一个交换机上，该交换机具有

789
00:52:16,280 --> 00:52:20,050
different types of Port speeds from 25 to 100 and above.
不同类型的端口速度从25到100甚至更高。

790
00:52:20,050 --> 00:52:21,020
Gigabits per second.
千兆比特每秒。

791
00:52:22,640 --> 00:52:28,600
FPGAs with support for P4, as is another goal and then mellanox Connect X-5 and
支持P4的FPGA，这是另一个目标，然后是Mellanox ConnectX-5。

792
00:52:28,600 --> 00:52:33,550
6 family cards as kind of hardware offload cards with OBS and things like that.
6系列卡作为具有OBS等功能的硬件卸载卡。

793
00:52:33,550 --> 00:52:38,890
And then the idea is that the experimenter essentially gets access to these devices.
然后，这个想法是实验者基本上能够访问这些设备。

794
00:52:38,890 --> 00:52:42,910
Primarily the mode we envision is using virtual machines with direct
我们主要设想的模式是使用具有直接连接的虚拟机。

795
00:52:42,910 --> 00:52:46,640
attached PCI devices for some high value experiments, we can see
将PCI设备直接连接到一些高价值实验的虚拟机中，我们可以看到

796
00:52:46,640 --> 00:52:50,580
dedicating entire servers to those and provisioning them for that experiment.
将整台服务器专门用于那些实验，并为那个实验配置它们。

797
00:52:50,580 --> 00:52:54,030
However, given the kind of the size of the facility,
然而，考虑到设施的大小，

798
00:52:54,030 --> 00:52:56,484
the amount of resources at each site,
我们认为为了使这成为一种成功的多用户设施，我们拥有的每个地点的资源数量，

799
00:52:56,484 --> 00:53:01,850
we think that In order to make this a kind of successful multi user facility, we have
我们认为为了使这成为一种成功的多用户设施，我们拥有的

800
00:53:01,850 --> 00:53:06,246
to rely on some level of virtualization to achieve a level of scale.
需要依赖某种程度的虚拟化来实现规模化。

801
00:53:07,962 --> 00:53:12,784
A typical experiment in fabric, this is absolutely unrealistic but
一个典型的在织物中进行的实验，这完全是不现实的，但

802
00:53:12,784 --> 00:53:17,935
it just sort of shows some of the ideas as purposely Showing on top of a map of
它只是在某种程度上展示了一些故意在地图上方展示的想法，

803
00:53:17,935 --> 00:53:23,087
the United States just to show the level of this distributed capacity or,
美国只是为了展示这种分布式能力的水平，或者说，

804
00:53:23,087 --> 00:53:28,571
you might connect some external resource like, a cluster attack or SDSC, for
您可能会连接一些外部资源，比如集群攻击或者SDSC，以便

805
00:53:28,571 --> 00:53:35,440
instance, and then maybe you're sampling traffic that's going through this link.
实例中，然后可能你正在抽样分析通过这个链接的流量。

806
00:53:35,440 --> 00:53:39,390
And you're using an SSD like an NVMe drive and
你正在使用像NVMe驱动器这样的固态硬盘。

807
00:53:39,390 --> 00:53:41,880
an FPGA to do some additional processing on the data and
它通常是像光纤或者电缆上的一个提升。

808
00:53:41,880 --> 00:53:45,530
it's usually it's it's like a bump in fiber or bump on wire.
它通常就像是光纤或电线上的一个凸起。

809
00:53:45,530 --> 00:53:49,290
Then maybe you want to build a virtual switch out of these different
那么也许你想要用这些不同的组件来构建一个虚拟交换机。

810
00:53:49,290 --> 00:53:51,970
network cards, some of them perhaps.
网络卡，也许有些是这样的。

811
00:53:51,970 --> 00:53:55,720
With the four capabilities, some of them just kind of OBS, or
有了这四种能力，其中一些可能只是类似OBS的东西，或者

812
00:53:55,720 --> 00:54:00,120
maybe you're hosting an application within the network that uses GPUs, and again,
也许你在网络中托管了一个应用程序，它使用了GPU，同样地，

813
00:54:00,120 --> 00:54:02,570
maybe fast drives for caching data, things like that.
也许是用于缓存数据的快速驱动器之类的东西。

814
00:54:02,570 --> 00:54:07,640
And we also have room for a small number of dedicated p for
我们还有空间用于少量专用的 p 用于

815
00:54:07,640 --> 00:54:11,500
switches if you really want very, very high port counts for density.
如果你真的需要非常非常高的端口数量来提高密度，那么可以使用交换机。

816
00:54:11,500 --> 00:54:15,910
Comparatively high port density in a few locations, you could also do that.
在少数几个位置你也可以实现相对较高的端口密度。

817
00:54:15,910 --> 00:54:22,010
Yeah, this was kind of a conceptual idea of what a fabric now it looks like.
是的，这是对现在所谓网络结构外观的一种概念性想法。

818
00:54:22,010 --> 00:54:22,660
There's a head node or
这里有一个头节点或者说主节点。

819
00:54:22,660 --> 00:54:28,460
something that will workers equipped with different flavours of these PCI devices.
用于装备有这些不同类型PCI设备的工作节点。

820
00:54:28,460 --> 00:54:32,610
two switches management switch for external access one data plane switch for
两台交换机，一台管理交换机用于外部访问，一台数据平面交换机用于

821
00:54:32,610 --> 00:54:36,150
accessing the actual topology that you create As an experimenter,
访问您作为实验者创建的实际拓扑。

822
00:54:38,280 --> 00:54:40,930
just some of the examples of the use cases that that
这只是一些使用案例的例子，这些案例就是

823
00:54:42,070 --> 00:54:44,460
might be useful particularly to this community, right?
可能特别对这个社区有用，对吧？

824
00:54:44,460 --> 00:54:50,290
So with NDN wanting to do storage and processing of data in the network.
所以，NDN希望在网络中进行数据的存储和处理。

825
00:54:50,290 --> 00:54:53,970
This is kind of part and parcel here of the architecture for
这是架构的一部分，也是其本质所在。

826
00:54:53,970 --> 00:54:59,220
fabric You can do sort of direct pass through just the switch.
如果你想直接穿过交换机，你可以进行直接通行。

827
00:54:59,220 --> 00:55:03,240
If you just want to bypass the site, you can pop the traffic into the site and
如果你只是想绕过站点，你可以将流量直接引入站点内并

828
00:55:03,240 --> 00:55:07,900
do some processing within the site storage or processing on the fly.
在站点存储中进行一些处理或即时处理。

829
00:55:07,900 --> 00:55:15,080
You can host the entire application and again have avid serve.
您可以托管整个应用程序，并再次让Avid服务器提供服务。

830
00:55:15,080 --> 00:55:17,910
Packet flows coming in from multiple points.
数据包从多个点进入流动。

831
00:55:17,910 --> 00:55:20,870
So line rate stateful.
因此是线速状态保持的。

832
00:55:20,870 --> 00:55:24,920
And again, we don't know dictate what the state represents so within this case.
而且，我们并不确定状态代表了什么，所以在这种情况下。

833
00:55:25,920 --> 00:55:29,130
It could be the data caches, it could be some control plane state,
它可能是数据缓存，也可能是某些控制平面状态，

834
00:55:29,130 --> 00:55:31,120
some combination of the two.
可能是这两者的某种组合。

835
00:55:31,120 --> 00:55:32,889
That's up to the experimenter to decide.
这取决于实验者来决定。

836
00:55:34,560 --> 00:55:37,460
We're also paying a lot of attention to measurement capabilities.
我们也非常关注测量能力。

837
00:55:37,460 --> 00:55:43,210
So, each site likely was going to have a just GPS discipline clock for PTP.
所以，每个站点可能都会有一个仅用于PTP的GPS授时钟。

838
00:55:43,210 --> 00:55:45,890
But so that you can take kind of
但这样你就可以进行某种

839
00:55:45,890 --> 00:55:51,390
Packet Tracer spec of snapshots across the network with millisecond accuracy.
Packet Tracer 可以以毫秒级精度捕获网络中的快照。

840
00:55:51,390 --> 00:55:53,860
And have some idea of what's going through the network.
并且能够了解网络中正在传输的内容。

841
00:55:53,860 --> 00:55:57,150
Now obviously, it's very high packet rates like hundred gigabits per second,
显然，这是非常高的数据包传输率，比如每秒一百千兆比特，

842
00:55:57,150 --> 00:56:00,240
you won't be able to hold a whole lot of traffic in these.
这些设备无法处理太多的流量。

843
00:56:00,240 --> 00:56:05,200
But nonetheless, it's a possibility that it opens up to do this.
但尽管如此，这确实为我们提供了这样做的可能性。

844
00:56:06,560 --> 00:56:11,110
We will have smart videos as well as the server's themselves instrumented for
我们将会对智能视频以及服务器本身进行仪器化处理，用于

845
00:56:11,110 --> 00:56:13,563
measuring power consumption.
监测功耗。

846
00:56:13,563 --> 00:56:17,638
Some optical layer measurements were available, now this facility will not have
一些光层测量数据曾是可用的，现在这个设施将不会拥有这些数据。

847
00:56:17,638 --> 00:56:20,880
an edge optical layer, that's not part of the architecture.
边缘光层，并不是架构的一部分。

848
00:56:20,880 --> 00:56:25,292
However, some level of measurements from the optical layer should be available.
然而，应该能够获取来自光层的一些级别的测量数据。

849
00:56:25,292 --> 00:56:30,087
And of course, the traditional utilization measures from CPU, memory,
当然，还有来自CPU、内存的传统利用率测量指标。

850
00:56:30,087 --> 00:56:32,154
disk etc, for their accounts.
磁盘等资源的使用情况也将被纳入他们的账户。

851
00:56:32,154 --> 00:56:34,266
Port mirroring will be supported as well, so
端口镜像也将得到支持，所以

852
00:56:34,266 --> 00:56:36,500
that you can capture certain flows if you want.
你可以捕获特定的流量，如果你想的话。

853
00:56:38,390 --> 00:56:39,626
And I think that's it.
我认为就是这样。

854
00:56:39,626 --> 00:56:43,581
I wanted to keep it short and perhaps leave a little bit of room for
我想保持简短，或许留一些空间给

855
00:56:43,581 --> 00:56:44,906
questions instead.
问题。

856
00:56:44,906 --> 00:56:49,740
I'm gonna stop sharing maybe for now and wait for questions.
我现在可能会停止分享，等待问题。

857
00:56:49,740 --> 00:56:55,501
There's a question of how users conduct experiments, can you hear me?
有一个关于用户如何进行实验的问题，你能听见我吗？

858
00:56:55,501 --> 00:56:57,060
Can you hear me okay?
你能听清楚我说的吗？

859
00:56:57,060 --> 00:56:58,560
>> Yes, we heard you.
是的，我们听到你说的了。

860
00:56:58,560 --> 00:57:02,810
>> Yeah, so, the users define the topology of what they want to do,
是的，所以用户定义了他们想要做的拓扑结构，

861
00:57:02,810 --> 00:57:04,870
they define the properties of that topology,
他们定义了那个拓扑结构的属性。

862
00:57:04,870 --> 00:57:07,390
they define the elements of the topology in the configuration.
他们在配置中定义了拓扑结构的元素。

863
00:57:09,000 --> 00:57:13,820
Essentially, it's either going through the portal or using the API's.
本质上，它要么通过门户进行操作，要么使用API。

864
00:57:13,820 --> 00:57:15,865
The user interface is going to,
用户界面将要，

865
00:57:15,865 --> 00:57:20,274
a primary user interface is likely to be through Jupiter notebooks.
一个主要的用户界面很可能是通过Jupyter笔记本来实现的。

866
00:57:20,274 --> 00:57:24,976
So that you have a programmable kind of scriptable environment where you can
因此你会有一个可编程的、可脚本化的环境，在这里你可以

867
00:57:24,976 --> 00:57:28,579
launch your experiments, configure it, collect data,
启动你的实验，配置它，收集数据，

868
00:57:28,579 --> 00:57:33,150
process data and then hopefully get the results you're looking for the.
处理数据，然后希望得到你期望的结果。

869
00:57:33,150 --> 00:57:36,073
So this gonna rely on federated identity.
所以这将依赖于联合身份认证。

870
00:57:36,073 --> 00:57:40,214
So the researchers from the US institutions are part of in common
所以来自美国机构的研究人员是in common的一部分。

871
00:57:40,214 --> 00:57:43,601
federation should have no trouble accessing this.
联邦应该可以轻松访问这个。

872
00:57:43,601 --> 00:57:49,617
By the time we're done with the construction, we will have an AUP, as well
到我们完成建设的时候，我们也会有一个接受使用政策（AUP）。

873
00:57:49,617 --> 00:57:56,133
as other policies to help understand how best to use facility in the near future.
在不久的将来，我们还会制定其他政策来帮助理解如何最好地使用设施。

874
00:57:56,133 --> 00:58:00,174
And we're planning to open up a facility to early experimenters in the summer of
我们计划在夏季向早期实验者开放一个设施。

875
00:58:00,174 --> 00:58:00,790
2021.
2021年。

876
00:58:00,790 --> 00:58:06,197
It's going to be more of a kind of a first come first serve.
这将会是一种先到先得的模式。

877
00:58:06,197 --> 00:58:10,017
We will be working with some members of the research community to kinda help us
我们将与研究界的一些成员合作，以便为我们提供帮助。

878
00:58:10,017 --> 00:58:12,131
come in and kick the tires on the facility,
进来试试这个设施的性能。

879
00:58:12,131 --> 00:58:15,274
figure out what works, what doesn't, what can work better.
找出什么有效，什么无效，什么可以做得更好。

880
00:58:18,422 --> 00:58:22,653
So the answer is no, this is a construction project,
所以答案是否定的，这是一个建筑项目，

881
00:58:22,653 --> 00:58:27,261
we've only completed the first year as I just mentioned,
我们刚刚完成了第一年，正如我刚才提到的，

882
00:58:27,261 --> 00:58:34,139
the general availability is 2023, limited availability is next year 2021.
总体上市时间是2023年，有限上市时间是明年2021年。

883
00:58:34,139 --> 00:58:37,469
So how we can calculate participate in the fabric?
所以我们如何才能计算参与这个项目？

884
00:58:37,469 --> 00:58:40,814
So the first thing I would encourage you to do is to visit our website.
所以我首先建议您做的事情是访问我们的网站。

885
00:58:40,814 --> 00:58:43,518
What is fabric.net?
fabric.net是什么？在那里有一个按钮，你可以点击“参与进来”。

886
00:58:43,518 --> 00:58:48,933
What is fabric.net, there is a button there, you can click get involved and
fabric.net是什么，在那里有一个按钮，你可以点击“参与进来”并且

887
00:58:48,933 --> 00:58:54,120
you will get monthly or periodic anyways mailers as to what's going on.
你会定期收到邮件，了解正在发生的事情。

888
00:58:54,120 --> 00:58:58,183
We are hosting a number of workshops with different members of different
我们正在举办多个研讨会，与不同社区的不同成员合作，

889
00:58:58,183 --> 00:59:02,646
communities, trying to collect more requirements, ideas for experiments,
社区，试图收集更多的需求、实验的想法，

890
00:59:02,646 --> 00:59:05,594
tools that could be useful to other experimenters.
可能对其他实验者有用的工具。

891
00:59:05,594 --> 00:59:10,407
One of the things that we have in mind is being able to stand up kind of an on
我们考虑的一个方面是能够建立一种即开即用的

892
00:59:10,407 --> 00:59:14,283
demand NDN profile experiment within fabric such that.
需要在fabric中进行NDN配置实验。

893
00:59:14,283 --> 00:59:19,028
People who want to use NDN kind of out of the box can just kind of press the button
想要直接使用NDN的人可以简单地按下按钮。

894
00:59:19,028 --> 00:59:23,420
and launch in NDN network of the size that they want across the country.
并且可以在他们想要的全国范围内启动所需规模的NDN网络。

895
00:59:24,550 --> 00:59:28,752
So that idea of an experiment profile is pretty integral to our thinking.
因此，实验配置文件的概念对我们的思考至关重要。

896
00:59:40,488 --> 00:59:45,758
Yes, the idea of fabric is that you have dedicated resources.
是的，fabric的理念就是你拥有专用资源。

897
00:59:45,758 --> 00:59:49,435
The question was, would the experimenters have dedicated resources if necessary?
实验人员如有必要，会有专用资源吗？

898
00:59:49,435 --> 00:59:52,575
Yes, the whole idea is that you reserve the resources that you need, and
是的，整个想法就是你预留你需要的资源，然后

899
00:59:52,575 --> 00:59:56,070
we either tell you sorry we're not available help you with a calendar.
我们要么告诉你很抱歉我们没有空帮你管理日程安排。

900
00:59:56,070 --> 00:59:58,128
Schedule your experiment in the future or
安排你未来的实验或者

901
00:59:58,128 --> 01:00:01,082
provide your resources right away if they're available.
如果资源现成可用的话，请立即提供你的资源。

902
01:00:03,910 --> 01:00:09,068
But reproducibility which, reproducibility is the driver here,
但为了获得可重复性，可重复性才是这里的驱动力，

903
01:00:09,068 --> 01:00:15,232
but in order to get the reproducibility, you have to have dedicated resources.
但为了获得可重复性，你必须拥有专用的资源。

904
01:00:15,232 --> 01:00:16,564
Usually reserved for your use.
通常为您保留以供使用。

905
01:00:20,312 --> 01:00:25,435
Fabric will also offer a shared layer three capacity for
Fabric还将为层三提供共享的容量。

906
01:00:25,435 --> 01:00:30,231
those types of experiments where perhaps current IP
这些实验类型也许是目前的IP

907
01:00:30,231 --> 01:00:34,922
implementation is enough to move the data around.
实现起来足以移动数据。

908
01:00:34,922 --> 01:00:37,691
But the experimenter might be just interested
但实验者可能只是感兴趣

909
01:00:37,691 --> 01:00:41,668
in experimenting with higher level concepts and applications and
在实验更高层次的概念和应用时，

910
01:00:41,668 --> 01:00:46,579
they don't really want to rule the whole entire architecture or protocol stack.
他们并不真的想要掌控整个架构或协议栈。

911
01:00:46,579 --> 01:00:51,346
Or they just wanna experiment with applications, but in addition to that,
或者他们只是想要尝试一些应用程序，但除此之外，

912
01:00:51,346 --> 01:00:55,143
to that layer three default kind of best effort layer three,
将会有专门的容量可以在整个网络中预留。

913
01:00:55,143 --> 01:01:00,670
there will be dedicated capacity that will be reservable across the entire footprint.
将会有专门的容量可以在整个网络中预留。

914
01:01:03,950 --> 01:01:09,070
We also have an extension now, plans extension to Europe and Japan.
我们现在还扩展了业务，计划将业务扩展到欧洲和日本。

915
01:01:09,070 --> 01:01:12,473
So United Kingdom, Bristol,
所以英国，布里斯托尔，

916
01:01:12,473 --> 01:01:17,837
the Netherlands Interserve Amsterdam, Switzerland CERN,
荷兰Interserve阿姆斯特丹，瑞士欧洲核子研究中心（CERN），

917
01:01:17,837 --> 01:01:22,490
Interserve Tokyo, we will have sites there as well.
Interserve东京，我们也将在那里设立站点。

918
01:01:24,850 --> 01:01:31,380
>> Okay, I guess we're getting ready for the IoT and edge applications panel.
好的，我想我们正在为物联网和边缘应用小组讨论做准备。

919
01:01:31,380 --> 01:01:35,600
Maybe all the panelists can start to get ready.
也许所有的小组成员可以开始准备了。

920
01:01:35,600 --> 01:01:40,460
And I wanted to kind of start out just saying,
我想先从说开始。

921
01:01:40,460 --> 01:01:43,320
what distinguishes edge applications.
区分边缘应用程序的特点是什么。

922
01:01:43,320 --> 01:01:47,360
And it's nice that we had this earlier session where
我们很高兴我们之前有一个会议环节在哪里。

923
01:01:47,360 --> 01:01:51,210
we had people speaking about different edge applications.
我们有人谈论了不同的边缘计算应用。

924
01:01:51,210 --> 01:01:56,645
And we had that morning session, which was sort of the opposite and
我们还举行了早间会议，内容则与之相反，

925
01:01:56,645 --> 01:02:01,595
those applications made heavy use of caching and storage and
这些应用程序大量使用了缓存和存储功能，以及

926
01:02:01,595 --> 01:02:04,880
movement of persistent data.
持久数据的移动。

927
01:02:04,880 --> 01:02:09,944
And I think that in contrast to Ed's application is kind
与艾德的应用相比，我认为这种做法是出于善意的。

928
01:02:09,944 --> 01:02:14,685
of focus on using NDN as a communication protocol and
关注使用NDN作为通信协议。

929
01:02:14,685 --> 01:02:20,632
the data could be more affirmable although still maybe durable.
数据虽然可能更耐用，但也会更加确凿。

930
01:02:20,632 --> 01:02:26,474
And it makes really heavy use of security so that in the automotive applications and
它确实大量使用了安全措施，以便在汽车应用中能够

931
01:02:26,474 --> 01:02:31,110
really exploit that broadcast nature of the edge networks.
充分利用边缘网络的广播特性。

932
01:02:31,110 --> 01:02:36,790
And that was something that Jeff mentioned in his talk.
杰夫在他的演讲中提到了这一点。

933
01:02:36,790 --> 01:02:40,810
And I think it was particularly interesting how the Intel
我认为英特尔公司如何做到这一点特别有趣。

934
01:02:40,810 --> 01:02:44,340
person kind of set this up for us.
人们为我们安排好了这一切。

935
01:02:44,340 --> 01:02:50,060
And I think that NDN as a NSF project really did get
而我认为NDN作为一个NSF项目确实得到了

936
01:02:50,060 --> 01:02:54,780
started not looking at the edge because it was a future internet application.
开始之时并未关注边缘，因为它是一个未来的互联网应用。

937
01:02:54,780 --> 01:02:58,290
But it's interesting to note that the roots of this and
但有趣的是，这一切的根源是

938
01:02:58,290 --> 01:03:01,740
the new way to look at networking and some of the early work at
新的网络观点以及一些早期的工作在

939
01:03:01,740 --> 01:03:05,310
PARC really was focused on things you could do with the edge.
PARC 真的很专注于你可以在边缘做的事情。

940
01:03:05,310 --> 01:03:09,400
And when you do that, you don't have to worry so much about IP routing and
当你那样做的时候，你就不需要太担心IP路由和

941
01:03:09,400 --> 01:03:14,220
other elements of the infrastructure that we already have, and
你可以在边缘用NDN风格的通信解决那个问题。

942
01:03:14,220 --> 01:03:20,070
you can solve that problem at the edge with NDN style communications.
你可以在边缘用NDN风格的通信解决那个问题。

943
01:03:20,070 --> 01:03:23,720
So what we're gonna do here is I'm going to have these
所以我们要做的是我将要让这些

944
01:03:23,720 --> 01:03:25,830
four excellent panelists speak too.
四位出色的小组成员也将发言。

945
01:03:25,830 --> 01:03:29,705
We'll do it in the order of Justin Caswell,
接着是Justin Caswell，

946
01:03:29,705 --> 01:03:34,013
then Dan Massey, then and then Dang Hu.
然后是Dan Massey，接着是Dang Hu。

947
01:03:34,013 --> 01:03:38,330
And I wanna start with Justin.
我想从Justin开始。

948
01:03:38,330 --> 01:03:45,101
And what, I wanted to introduce Justin,
我本来想介绍Justin，

949
01:03:45,101 --> 01:03:50,909
but I lost that, my introduction.
但我把那个介绍弄丢了。

950
01:03:50,909 --> 01:03:55,512
I hope they get it.
我希望他们能明白。

951
01:03:59,325 --> 01:04:01,610
Okay, I do not have it anymore.
好吧，我已经没有了。

952
01:04:01,610 --> 01:04:03,548
Okay, well hang on a second.
好的，稍等一下。

953
01:04:03,548 --> 01:04:08,334
[LAUGH] All right, so Justin is the founder and CEO of Rakhine,
好的，所以贾斯汀是Rakhine的创始人和首席执行官，

954
01:04:08,334 --> 01:04:13,583
which is a company that focuses on blockchain network solutions for
是一家专注于区块链网络解决方案的公司，用于

955
01:04:13,583 --> 01:04:16,580
the telecommunications industry.
他在电信行业拥有20多年的经验，主要专注于无线通信系统。

956
01:04:16,580 --> 01:04:22,577
He's had 20 plus years and communication systems with a focus on wireless for
他在电信行业拥有20多年的经验，主要专注于无线通信系统。

957
01:04:22,577 --> 01:04:25,184
both terrestrial and satellite.
包括陆地和卫星通信。

958
01:04:25,184 --> 01:04:30,240
And that includes companies like ExxonMobil and FedEx.
这包括了像埃克森美孚和联邦快递这样的公司。

959
01:04:30,240 --> 01:04:35,290
Justin is a serial entrepreneur, a full stack developer and an innovative leader.
贾斯汀是一个连续创业者，全栈开发者和创新领导者。

960
01:04:35,290 --> 01:04:39,150
He works directly with network operators, data centers, governments and
他直接与网络运营商、数据中心、政府以及

961
01:04:39,150 --> 01:04:43,510
private industry in cutting edge technology operations.
他的工作特别聚焦于5G网络领域，涉及到尖端技术运营的私营产业。

962
01:04:43,510 --> 01:04:47,609
His work has a specific focus within 5G networks,
他的工作特别聚焦于5G网络领域，

963
01:04:47,609 --> 01:04:53,346
advanced communication systems, leveraging AI and of course, NDN.
高级通信系统，利用人工智能以及当然还有NDN（命名数据网络）。

964
01:04:53,346 --> 01:04:56,984
So, Justin, do you wanna go ahead and
那么，贾斯汀，你想不想继续并且……

965
01:04:56,984 --> 01:05:01,418
explain to us some of the issues that you see and
向我们解释一些你所看到的问题以及……

966
01:05:01,418 --> 01:05:06,500
things that will be interesting to the audience?
向我们解释一些你所看到的问题以及会引起观众兴趣的事情。谢谢。

967
01:05:06,500 --> 01:05:08,440
Thanks.
谢谢。

968
01:05:08,440 --> 01:05:12,161
>> Thanks, Kathy for the introduction, yeah, so
谢谢你的介绍，Kathy，是的，所以

969
01:05:12,161 --> 01:05:15,079
some of the things we're working on.
我们正在努力的一些事情。

970
01:05:15,079 --> 01:05:19,660
So just right out of the gate, I think what our involvement was with NDN is we
我们一开始参与NDN的工作，我认为我们的参与是

971
01:05:19,660 --> 01:05:23,469
wanted to use a blockchain application running on top of NDN.
想要在NDN之上运行一个区块链应用程序。

972
01:05:23,469 --> 01:05:28,184
Because there's [LAUGH] a lot of efficiencies you can you can
因为有很多效率你可以获得。

973
01:05:28,184 --> 01:05:29,982
glean from just that.
你可以从中学到的东西。

974
01:05:29,982 --> 01:05:35,356
But then we we moved into a little bit more of the core network operations and
但后来我们进一步深入到了核心网络运营领域。

975
01:05:35,356 --> 01:05:41,496
we started looking at saying, okay, well, how can we apply NDN in a 5G deployment or
我们开始考虑，好的，我们如何在5G部署中应用NDN呢，或者

976
01:05:41,496 --> 01:05:45,619
any kind of modern wireless network deployment really?
任何一种现代无线网络部署，不是吗？

977
01:05:45,619 --> 01:05:48,961
So we kind of started dialing in on the IoT aspects,
所以我们开始专注于物联网方面的事宜，

978
01:05:48,961 --> 01:05:55,490
the challenges wrapped around encryption, bringing that in through your gateway.
围绕加密的挑战，通过您的网关实现这一点。

979
01:05:55,490 --> 01:05:57,596
Lots of proprietary gateways and
许多专有网关和

980
01:05:57,596 --> 01:06:02,416
hardware out there that you have to overcome, so a lot of challenges there.
要克服的硬件问题很多，所以存在许多挑战。

981
01:06:02,416 --> 01:06:07,098
I think if we can work a little bit more with OEMs and get NDN integrated
我认为如果我们能与原始设备制造商（OEM）多合作一些，将NDN集成进去，

982
01:06:07,098 --> 01:06:13,110
directly into devices, I think that would be a substantial step forward.
直接集成到设备中，我认为这将是一个重大的进步。

983
01:06:13,110 --> 01:06:16,510
In addition to that, I think if we could get NDN,
除此之外，我认为如果我们能够得到NDN，

984
01:06:16,510 --> 01:06:20,050
working directly in the gateways for those devices.
直接在这些设备的网关中工作。

985
01:06:20,050 --> 01:06:22,300
That's another substantial challenge,
这是另一个重大的挑战，

986
01:06:22,300 --> 01:06:24,910
that I think that would bring a lot to the industry.
我认为这将为行业带来很多好处。

987
01:06:25,980 --> 01:06:30,360
Some of the other things that we started looking at moving away from just IoT, but
我们开始关注的其他事项之一，就是从仅仅关注物联网(IoT)转向其他领域，但是

988
01:06:30,360 --> 01:06:34,510
really looking at broad compute platforms, right?
我们真的在广泛考察计算平台，对吧？

989
01:06:34,510 --> 01:06:39,316
So how do you take all of these things at the edge, whether that's IoT devices or
那么，你是如何处理所有这些边缘设备的，无论是物联网设备还是

990
01:06:39,316 --> 01:06:43,361
you're taking autonomous vehicles, or UAV's or Smart Cities.
你正在处理的是无人驾驶汽车、无人航空器或智能城市。

991
01:06:43,361 --> 01:06:47,071
So there's a ton of data that you need to ingest, especially,
所以有大量的数据需要你去摄取，尤其是，

992
01:06:47,071 --> 01:06:49,950
whenever you start looking at 5G deployments.
当你开始关注5G部署时。

993
01:06:51,030 --> 01:06:54,625
So whenever you say, all right, we've got all these devices.
所以当你说，好的，我们有了这么多设备。

994
01:06:54,625 --> 01:06:57,998
We've got all these users just machine to machine,
我们有所有这些用户，只是机器对机器，

995
01:06:57,998 --> 01:07:00,229
some of its actual users to users.
有些是真正的用户对用户。

996
01:07:00,229 --> 01:07:03,939
And you've got all these different dynamic sets of information that you're
而你拥有所有这些不同的动态信息集合。

997
01:07:03,939 --> 01:07:04,572
pulling in.
正在吸收中。

998
01:07:04,572 --> 01:07:08,560
Now, you're not only having to deal with the baseband processing of that, right?
现在，你不仅要处理基带处理，对吧？

999
01:07:08,560 --> 01:07:09,117
But now,
但现在，

1000
01:07:09,117 --> 01:07:13,785
you have to take these these applications that are running on that 5G network.
你必须要处理那些运行在5G网络上的应用程序。

1001
01:07:13,785 --> 01:07:18,627
And then now, you have to say, okay, well, how are we gonna get it pushed through and
然后现在，你得说好，我们将如何推动它的实施呢？

1002
01:07:18,627 --> 01:07:23,020
actually meet the requirements of the low latency that 5G kind of requires?
实际上满足了5G所要求的低延迟需求吗？

1003
01:07:23,020 --> 01:07:27,536
So looking at that, we were working on an edge based solution.
所以看这个情况，我们正在研究一个基于边缘计算的解决方案。

1004
01:07:27,536 --> 01:07:31,671
It's a mobile edge compute platform that integrates NDN in the middle of
它是一个移动边缘计算平台，在中间集成了NDN。

1005
01:07:31,671 --> 01:07:33,180
the technology stack.
技术栈。

1006
01:07:33,180 --> 01:07:40,570
So we're using Mellanox NIC's programmable NIC's kind of under the network side.
所以我们在网络方面使用了Mellanox的可编程网卡。

1007
01:07:40,570 --> 01:07:42,637
So we're just layering that in, and
所以我们就在那个基础上逐层增加，然后

1008
01:07:42,637 --> 01:07:47,517
then we're using sub-frameworks to build out some intelligent routing platforms.
然后我们使用子框架来构建一些智能路由平台。

1009
01:07:47,517 --> 01:07:51,876
And we're just leveraging some AI and some other existing frameworks that are out
我们还在利用一些人工智能以及其他一些现有的框架。

1010
01:07:51,876 --> 01:07:55,172
there currently, but we're going to be expanding on those.
我们目前在那里已有一些基础，但我们将会在这些基础上进行扩展。

1011
01:07:55,172 --> 01:07:59,230
And so what we'll actually do is combine the baseband processing.
所以我们实际上要做的是结合基带处理。

1012
01:07:59,230 --> 01:08:01,214
We put NDN in the middle, right, and
我们将NDN放在中间，对，然后

1013
01:08:01,214 --> 01:08:04,490
then we can push the the next the Mellanox NIC's down below.
然后我们可以将下一个Mellanox网卡推到下面。

1014
01:08:04,490 --> 01:08:09,438
And what that's allowing us to do theoretically, we haven't proven this yet,
而这在理论上允许我们做的是，我们还没有证明这一点，

1015
01:08:09,438 --> 01:08:14,094
but what we're hoping to prove right, is that now we can intelligently move
但我们希望能证明的是，现在我们可以智能地移动

1016
01:08:14,094 --> 01:08:17,689
data across the RAND, or from edge or local data centers.
跨RAND或从边缘或本地数据中心传输数据。

1017
01:08:17,689 --> 01:08:20,614
Back out to these edge compute platforms and so
我们将数据回传到这些边缘计算平台，因此

1018
01:08:20,614 --> 01:08:24,144
we're looking at an efficiency level for for routing.
我们正在考察用于路由的效率水平。

1019
01:08:24,144 --> 01:08:28,826
But what we're also really considering here is having a data aware
但我们在这里真正考虑的还有拥有数据感知能力。

1020
01:08:28,826 --> 01:08:34,880
platform where now, you can deploy these these edge based applications.
平台上，现在你可以部署这些基于边缘的应用程序。

1021
01:08:34,880 --> 01:08:38,500
Would typically normally run at like a public cloud level.
通常会在公共云层级上运行。

1022
01:08:38,500 --> 01:08:43,143
And so now, if you can push that out onto this mobile edge compute platform that can
然后将其推送到这个可以支持移动边缘计算的平台上，

1023
01:08:43,143 --> 01:08:45,518
then be tied into a 5G wireless network.
然后将其与5G无线网络相连。

1024
01:08:45,518 --> 01:08:48,946
It doesn't have to be a 5G wireless network, but obviously,
它不一定要是5G无线网络，但显然，

1025
01:08:48,946 --> 01:08:51,872
you get a lot of benefits if you if it's tied in there.
如果它与那里相连，你会得到很多好处。

1026
01:08:51,872 --> 01:08:55,278
And so the idea right is that now you can have operators running their
所以这个想法是，现在你可以让操作员在这个计算平台上运行他们的

1027
01:08:55,278 --> 01:08:57,389
applications on this compute platform.
你可以让开发者在这个计算平台上运行应用程序。

1028
01:08:57,389 --> 01:09:01,996
You can have developers running application on this compute platform.
你可以让开发者在这个计算平台上运行应用程序。

1029
01:09:01,996 --> 01:09:06,318
But you're also really getting a lot of network efficiencies on both
但你也确实在两边都获得了很多网络效率上的提升。

1030
01:09:06,318 --> 01:09:09,679
the RAND side, and then your hardline network side.
在RAND方面，然后是你的硬线网络方面。

1031
01:09:09,679 --> 01:09:12,678
And so those are kind of the main things that we're looking at,
所以这些是我们主要关注的几个方面。

1032
01:09:12,678 --> 01:09:14,610
we've got a lot of interest on on those.
我们对这些领域有很大的兴趣。

1033
01:09:14,610 --> 01:09:19,513
We're doing some test beds here in the United States, down in Texas, and
我们在美国这边做了一些测试平台，在德克萨斯州下面，还有

1034
01:09:19,513 --> 01:09:22,282
then also in a couple of other countries,
然后还在其他几个国家，

1035
01:09:22,282 --> 01:09:25,941
where they're interested in this type of a solution.
他们对这类解决方案感兴趣的地方。

1036
01:09:25,941 --> 01:09:30,750
That being said, we're also launching some of our own applications on that mobile
也就是说，我们还在那个移动平台上推出了一些自己的应用程序。

1037
01:09:30,750 --> 01:09:32,200
edge compute platform.
边缘计算平台。

1038
01:09:33,260 --> 01:09:36,900
And so that's tying it to more of like a gaming use case,
因此，这更多地将其与游戏用例联系起来。

1039
01:09:36,900 --> 01:09:39,578
just working with kind of NVIDIA and some others in that room.
所以我们正在与NVIDIA以及该领域的其他一些公司合作。

1040
01:09:41,450 --> 01:09:44,320
So we've got some pretty substantial challenges on our side.
所以我们这边面临着一些相当大的挑战。

1041
01:09:45,340 --> 01:09:49,148
Everything is pretty new right now, we're still figuring out a lot of the the 5G
现在一切都相当新颖，我们还在摸索很多关于5G的事情。

1042
01:09:49,148 --> 01:09:51,286
infrastructure build out and deployments.
基础设施建设和部署。

1043
01:09:51,286 --> 01:09:53,743
Especially, whenever you look,
尤其是，无论你何时看。

1044
01:09:53,743 --> 01:09:57,906
just at the global kind of 5G evolution that's going on.
正处于全球正在进行的5G发展之中。

1045
01:09:57,906 --> 01:10:03,280
But we believe that where the real unlocking potential is at the edge.
但我们认为真正的解锁潜力在于边缘计算。

1046
01:10:04,502 --> 01:10:09,286
We feel the networks will come up to par, right,
我们认为网络性能将会达到标准。

1047
01:10:09,286 --> 01:10:14,318
through the evolution of 5G on the wireless side.
通过无线端5G的演进。

1048
01:10:14,318 --> 01:10:15,803
And then the data centers,
而数据中心，

1049
01:10:15,803 --> 01:10:19,743
and the networks themselves there, we also feel are gonna be upgraded as
和那里的网络本身，我们也认为将会得到升级，

1050
01:10:19,743 --> 01:10:22,984
well over the coming years to meet those demands of the 5G.
在未来几年内，为了满足5G的需求，我们将大幅度地进行升级。

1051
01:10:22,984 --> 01:10:27,807
And so sitting at the edge with a mobile edge compute platform that
提供了一个移动边缘计算平台，这样就坐在边缘上，

1052
01:10:27,807 --> 01:10:29,920
delivers NDN out of the box.
提供开箱即用的NDN服务。

1053
01:10:29,920 --> 01:10:33,413
Is our goal and I think that's our first step and
我们的目标，我认为那是我们的第一步，

1054
01:10:33,413 --> 01:10:38,579
really trying to commercialize NDN at least from our optics, right?
我们真的在努力将NDN商业化，至少从我们的视角来看，对吗？

1055
01:10:38,579 --> 01:10:44,095
And then applying the the NDN blockchain application solution on top of that
然后在此基础上应用NDN区块链应用解决方案。

1056
01:10:44,095 --> 01:10:49,626
to bring in some more automation if you will, so we can validate data flows.
以便我们引入更多的自动化，从而可以验证数据流。

1057
01:10:49,626 --> 01:10:53,636
Now, you can validate analytics, immutable records for audits, and tracing and
现在，您可以验证分析数据、不可变的审计记录以及追踪和

1058
01:10:53,636 --> 01:10:55,189
all kinds of different things.
各种不同的事物。

1059
01:10:55,189 --> 01:10:59,889
So that's really where we sit, we've got a lot of challenges like I said,
所以这正是我们所处的位置，就像我说的，我们面临着很多挑战，

1060
01:10:59,889 --> 01:11:00,718
ahead of us.
在我们前方。

1061
01:11:00,718 --> 01:11:06,942
But we're getting more and more interest from industry, both in the telecom side.
但我们从工业界得到的兴趣越来越多，包括电信行业。

1062
01:11:06,942 --> 01:11:12,037
But then also private industry for hardware and software applications.
但同时也包括了硬件和软件应用的私营行业。

1063
01:11:16,021 --> 01:11:19,847
>> Okay, thanks, Justin, let's go through everybody, and
好的，谢谢，贾斯汀，我们来看看每个人的情况，然后

1064
01:11:19,847 --> 01:11:24,930
then we'll take some questions at the end or you can even question each other.
然后我们最后会留些时间回答问题，或者你们甚至可以互相提问。

1065
01:11:24,930 --> 01:11:30,153
So next up is Dan Massey and Dan is the program lead to
接下来是Dan Massey，Dan是项目负责人，负责的是

1066
01:11:30,153 --> 01:11:36,966
the operate through portion of the DODs 5G to next G initiatives.
该项目是国防部从5G到下一代技术（Next G）计划的运作部分。

1067
01:11:36,966 --> 01:11:41,956
He was previously a faculty member at Colorado Boulder and
他之前是科罗拉多博尔德的一名教职员工，并且

1068
01:11:41,956 --> 01:11:46,344
program manager for the Cyber Security Division Science and
负责网络安全事业部科学与

1069
01:11:46,344 --> 01:11:49,628
Technology directorate, that's the CST.
技术总监，那是CST。

1070
01:11:49,628 --> 01:11:54,629
Yeah, and in the Department of Homeland Security as a CSP program manager,
是的，在国土安全部担任CSP项目经理，

1071
01:11:54,629 --> 01:11:59,634
he developed and manage programs where researchers from both academics and
他开发并管理了一些项目，这些项目中既有学术界的研究人员，也有来自工业界的研究人员，共同识别、解决并部署网络安全解决方案，以应对来自

1072
01:11:59,634 --> 01:12:04,482
industry, identify, address and deploy cyber security solutions that
行业界的研究人员，共同识别、解决并部署网络安全解决方案，以提高互联网的安全性和韧性。

1073
01:12:04,482 --> 01:12:08,740
improves the security and resilience of the Internet.
提高互联网的安全性和韧性。

1074
01:12:08,740 --> 01:12:13,690
And Dan was one of the original NSF FIA NDN project.
丹是最初的NSF FIA NDN项目之一。

1075
01:12:13,690 --> 01:12:16,290
Okay, Dan.
好的，丹。

1076
01:12:16,290 --> 01:12:17,070
Great. Well, thank you.
非常好。谢谢你。

1077
01:12:17,070 --> 01:12:20,930
I really appreciate the opportunity to be here.
我非常感梨有机会来到这里。

1078
01:12:20,930 --> 01:12:24,170
And I've got some, I think interesting, new stuff to talk about.
而且我有一些我认为很有趣的新东西要谈。

1079
01:12:24,170 --> 01:12:26,510
So as Kathy was just pointing out,
所以正如凯西刚才所指出的，

1080
01:12:26,510 --> 01:12:31,780
I've just come on board in the DODs, 5G, the next G initiative.
我刚刚加入了美国国防部的5G和下一代通信技术计划。

1081
01:12:31,780 --> 01:12:35,534
And so I'm the program manager for something called can operate through.
所以我是一个名为“能够穿透操作”的项目的项目经理。

1082
01:12:35,534 --> 01:12:40,310
And I wanted to kind of say a little bit about what that is and, why I think that's
我想稍微谈谈那是什么，以及我为什么认为那是

1083
01:12:40,310 --> 01:12:44,826
particularly relevant to NDN and why we should be talking about that here?
特别与NDN相关，以及为什么我们应该在这里讨论这个问题？

1084
01:12:44,826 --> 01:12:49,627
So as you guys already know, right, as already mentioned in
所以正如你们已经知道的，对吧，正如已经提到的，在

1085
01:12:49,627 --> 01:12:55,160
Justin stock just a little bit is 5G is coming up pretty quick.
5G的发展正迅速到来。

1086
01:12:55,160 --> 01:12:57,920
It's giving us a lot of new opportunities.
它为我们提供了许多新的机会。

1087
01:12:57,920 --> 01:13:04,489
And so from the DOD side, we're very interested in how we can leverage that,
因此，从国防部这边来说，我们非常感兴趣的是如何利用这一点，

1088
01:13:04,489 --> 01:13:10,775
and how we can do that without thinking in terms of the traditional model.
以及我们如何在不考虑传统模式的情况下做到这一点。

1089
01:13:10,775 --> 01:13:15,970
Which I'll claim devolved from the good old Paul Baran multipaths
我将声称这源自保罗·巴兰的多路径理论。

1090
01:13:15,970 --> 01:13:20,882
many ways to get there to what, but now is often more of a circuit
有很多方法可以达到目标，但现在通常更多的是一种环路。

1091
01:13:20,882 --> 01:13:25,990
based connection and all too often we've relied on that.
我们过于依赖基于连接的方式。

1092
01:13:25,990 --> 01:13:31,090
As this community knows well the securing the channel rather than securing the data.
这个社区很清楚，我们更注重保护通道而不是保护数据。

1093
01:13:31,090 --> 01:13:35,559
That all goes away if we do it with 5G.
如果我们使用5G来实现，所有这些问题都将不复存在。

1094
01:13:35,559 --> 01:13:40,263
So in our vision of 5G in the operate through vision of 5G,
在我们对5G的愿景中，在通过5G的操作视角中，

1095
01:13:40,263 --> 01:13:42,991
we're gonna say we have to come and
我们将会说我们必须来到这里并且

1096
01:13:42,991 --> 01:13:48,845
we have to operate through existing 5G networks that we don't operate.
我们必须通过我们不运营的现有5G网络来进行操作。

1097
01:13:48,845 --> 01:13:52,166
We don't trust, but we need to get sensitive,
我们不信任，但我们需要获取敏感的，

1098
01:13:52,166 --> 01:13:57,530
possibly even classified information across those networks.
可能甚至是在那些网络上交换机密信息。

1099
01:13:57,530 --> 01:14:00,780
In an environment where I don't know what the network is,
在一个我不知道网络是什么的环境里，

1100
01:14:00,780 --> 01:14:02,180
I don't have the network equipment.
我没有网络设备。

1101
01:14:02,180 --> 01:14:10,050
The network equipment is manufactured by who knows who's operating it.
网络设备是由谁制造的，谁在操作它我们无从得知。

1102
01:14:10,050 --> 01:14:14,080
And so can we operate through that kind of network?
我们能通过那种网络进行操作吗？

1103
01:14:14,080 --> 01:14:15,940
That's the SD idea and
这就是SD的想法。

1104
01:14:15,940 --> 01:14:20,020
it fits here I think into the edge piece because a lot of this communication
它适合放在边缘部分，因为很多通信工作都是在这里进行的。

1105
01:14:20,020 --> 01:14:23,820
in the 5G world especially, there's a lot of interesting stuff on the edge.
在5G世界中，尤其是边缘部分有很多有趣的东西。

1106
01:14:23,820 --> 01:14:28,610
Once I get that inside a secure DOD network, that's a different matter.
一旦我把它接入到一个安全的国防部网络中，那就是另外一回事了。

1107
01:14:28,610 --> 01:14:32,030
But I've got all these things on the 5G network.
但我已经把所有这些东西都接入到了5G网络中。

1108
01:14:32,030 --> 01:14:35,760
At the edge that are gonna need to communicate, they can be vehicles,
在边缘需要进行通信的可以是车辆，

1109
01:14:35,760 --> 01:14:37,120
this was discussed earlier.
这个问题之前已经讨论过了。

1110
01:14:38,160 --> 01:14:40,110
Earlier today there's a lot of interesting stuff for
今天早些时候有很多有趣的事情要讨论。

1111
01:14:40,110 --> 01:14:43,610
those vehicles are gonna be on on 5G networks.
这些车辆将会使用5G网络。

1112
01:14:43,610 --> 01:14:46,080
So how does that communication work?
那么这种通信是如何工作的呢？

1113
01:14:46,080 --> 01:14:49,610
And how do you do that securely in a zero trust environment?
在零信任环境中，您如何安全地进行这种通信呢？

1114
01:14:50,840 --> 01:14:55,754
And I'm gonna, and I think this group might have some answers to that.
我认为这个团队可能对此有一些答案。

1115
01:14:55,754 --> 01:15:00,552
So when we say zero trust, I wanna make a slight shift from the really good stuff,
所以当我们谈到零信任时，我想稍微转变一下那些真正好的东西，

1116
01:15:00,552 --> 01:15:02,893
thank you to NIST for hosting all this.
感谢NIST主持了这一切。

1117
01:15:02,893 --> 01:15:07,470
And NIST has some great documents out there on zero trust.
NIST已经发布了一些关于零信任的优秀文档。

1118
01:15:07,470 --> 01:15:11,060
We wanna take a slightly different spin on zero trust in that
我们想对零信任采取略有不同的角度来看待，即

1119
01:15:11,060 --> 01:15:16,030
often zero trust is focused on, I operate the network but
通常零信任着重于我操作网络，但

1120
01:15:16,030 --> 01:15:20,110
I don't necessarily I don't want to build a wall around my network.
我不一定想在我的网络周围建立一堵墙。

1121
01:15:20,110 --> 01:15:23,780
In our case, I wanna take zero trust a step further and
在我们的情况下，我想进一步推进零信任安全模型。

1122
01:15:23,780 --> 01:15:26,710
so may even say this is already covered in the NIST documents and
有些人甚至可能会说这已经在NIST文件中有所涉及。

1123
01:15:26,710 --> 01:15:31,590
it maybe in this case, I don't even operate the network.
在这种情况下，我甚至可能都不操作网络。

1124
01:15:31,590 --> 01:15:33,340
I'm just a user on the network.
我只是网络上的一个用户。

1125
01:15:35,160 --> 01:15:41,230
There's all these different paths, all these different knobs I can tune with 5G.
有这么多不同的路径，有这么多不同的旋钮我可以调整来使用5G。

1126
01:15:42,780 --> 01:15:48,160
And how do I do that, and somebody posted into, Dave ran posted in,
有人发帖进来，戴夫·兰发帖进来，

1127
01:15:48,160 --> 01:15:52,230
do we care about traffic analysis absolutely, right.
我们当然非常关心流量分析。

1128
01:15:52,230 --> 01:15:56,340
In fact, I think that's one of our biggest interesting challenges.
实际上，我认为这是我们面临的最大的有趣挑战之一。

1129
01:15:56,340 --> 01:16:00,620
And so one thing that we've talked about a lot is, so,
我们经常讨论的一个问题是，所以，

1130
01:16:00,620 --> 01:16:05,620
when I talk about securely operating across an untrusted 5G network.
当我谈论在不可信的5G网络上安全操作时。

1131
01:16:05,620 --> 01:16:07,612
I'm gonna assume the data is encrypted.
我会假设数据是加密的。

1132
01:16:07,612 --> 01:16:10,330
I'm gonna assume that someone can exfiltrate the data but,
我会假设有人能够泄露这些数据，但是，

1133
01:16:10,330 --> 01:16:12,360
they can't break the encryption.
他们无法破解加密。

1134
01:16:12,360 --> 01:16:17,496
So I'm not too worried about, me sending a confidential
所以我不太担心，我发送一个机密的

1135
01:16:17,496 --> 01:16:23,060
message to Justin encrypted with a appropriate cryptography
信息给贾斯汀，用合适的加密技术加密。

1136
01:16:23,060 --> 01:16:28,203
that we both share, so who is gonna to get access to that?
我们都有份，那么谁能够获得访问权限呢？

1137
01:16:28,203 --> 01:16:29,617
But he's not gonna be able to decrypt it.
但他无法解密它。

1138
01:16:29,617 --> 01:16:33,162
>> [LAUGH] I'm the bad guy.
>> [笑] 我是坏人。

1139
01:16:33,162 --> 01:16:34,015
>> Yeah.
是的。

1140
01:16:34,015 --> 01:16:36,645
We could set defense, we can kind of pick it up.
我们可以设立防御，我们可以尝试去解决它。

1141
01:16:39,335 --> 01:16:44,555
But what I am worried about is that traffic analysis.
但我担心的是流量分析。

1142
01:16:44,555 --> 01:16:48,891
The analogy we've been using is the pizza deliveries to the pentagon, right?
我们一直在用的比喻是送披萨到五角大楼，对吧？

1143
01:16:48,891 --> 01:16:54,180
So, the thought there is by sitting out at the pentagon sitting parking lot across
所以，那里的想法是坐在五角大楼对面的停车场里。

1144
01:16:54,180 --> 01:16:59,018
the street from the pentagon and just counting food deliveries in and out.
你可能会通过计算进出五角大楼的食物配送数量来推断出相当多的关于作战节奏的信息。

1145
01:16:59,018 --> 01:17:03,192
You may be able to infer quite a bit about operational tempo, right.
你可能会根据这些信息推断出相当多关于作战节奏的事情，对吧。

1146
01:17:03,192 --> 01:17:06,878
Friday night, a number of pizzas show up that could be Bob or
周五晚上，出现了一些可能是Bob点的披萨。

1147
01:17:06,878 --> 01:17:08,900
Alice's retirement party.
艾丽斯的退休派对。

1148
01:17:08,900 --> 01:17:11,640
That could be that means, people are working late and
可能是指，人们在加班工作，还有

1149
01:17:11,640 --> 01:17:14,160
there's some kind of hop going on.
可能正在进行某种跳跃活动。

1150
01:17:14,160 --> 01:17:16,230
So we're worried about that in this scenario,
所以我们担心在这种情况下，

1151
01:17:16,230 --> 01:17:20,210
which is can I operate through this network without revealing too much
我们担心在这种情况下，我是否能够在不泄露太多信息的情况下通过这个网络进行操作，或许有很多方法可以做到这一点，但是。

1152
01:17:22,280 --> 01:17:26,690
and maybe there's a bunch of ways I could do that, but.
或许有很多方法可以做到这一点，但是。

1153
01:17:26,690 --> 01:17:30,805
But certainly traffic analysis volume metrics are of interest.
但是，流量分析的体量指标肯定会引起人们的兴趣。

1154
01:17:30,805 --> 01:17:36,810
And we want to see how that can work.
我们想看看那是如何运作的。

1155
01:17:36,810 --> 01:17:39,781
But even more so than on the confidentiality piece,
但比起保密方面，我们更加关注的是——

1156
01:17:39,781 --> 01:17:43,167
the availability piece is really the exciting part for us.
我们对可用性部分真的感到很兴奋。

1157
01:17:43,167 --> 01:17:48,213
And so with all these different paths, how can I make this work, right.
所以有了这些不同的路径，我该如何使它工作，对吧。

1158
01:17:48,213 --> 01:17:52,583
We can do dynamic spectrum allocations, right.
我们可以进行动态频谱分配，对吧。

1159
01:17:52,583 --> 01:17:57,312
So unlike our traditional wireless where we're on channel five or channel seven or
所以不像我们传统的无线通信，我们会使用频道五或频道七或者

1160
01:17:57,312 --> 01:18:01,159
whatever, we can hop around 5G gives us the ability to hop around,
我们可以在不同频道间跳转，5G赋予我们这种在频道间跳转的能力，

1161
01:18:01,159 --> 01:18:03,680
it gives us all these other possibilities.
它为我们提供了所有这些其他的可能性。

1162
01:18:03,680 --> 01:18:06,340
It gives us the opportunity to relay but
它给了我们传递信息的机会，但是

1163
01:18:06,340 --> 01:18:10,240
I'll tell you that's really hard to do with a circuit, right.
我会告诉你，用电路来做这个真的很难。

1164
01:18:10,240 --> 01:18:12,080
There may be some other approach.
也许有其他的方法。

1165
01:18:12,080 --> 01:18:15,080
I don't know, maybe there's some other type of networking.
我不知道，可能还有其他类型的网络。

1166
01:18:16,740 --> 01:18:18,080
I think, yeah.
我想，是的。

1167
01:18:18,080 --> 01:18:21,500
Could be about names or data or something instead of, but so
可能是关于名称或数据或其他的东西，而不是，但是这样。

1168
01:18:21,500 --> 01:18:23,740
I think there could be some interesting things there.
我认为那里可能有一些有趣的东西。

1169
01:18:23,740 --> 01:18:26,310
So that's just sort of the big picture challenge.
所以那只是一种大局面的挑战。

1170
01:18:26,310 --> 01:18:32,160
I wanted to, I wanted to paint is just to say, what
我想要，我只是想要表达的是，什么

1171
01:18:32,160 --> 01:18:37,520
about 5G and what about specifically, availability and 5G and
关于5G，具体来说是关于可用性和5G以及

1172
01:18:37,520 --> 01:18:42,510
if I can get additional confidentiality and integrity in 5G, that's a bonus.
如果我能在5G中获得额外的保密性和完整性，那就是额外的好处。

1173
01:18:42,510 --> 01:18:46,670
But, but I think there's some interesting ways to look at that.
但是，我认为有一些有趣的方式来看待这个问题。

1174
01:18:46,670 --> 01:18:50,250
And you'll see last thing and then I'll pass it on to the next panel.
你会看到最后一件事，然后我会把它交给下一个小组。

1175
01:18:50,250 --> 01:18:53,370
So you'll see three things coming out of this program.
所以你会看到这个项目带来了三个成果。

1176
01:18:53,370 --> 01:18:55,600
It's a brand new program.
这是一个全新的项目。

1177
01:18:57,200 --> 01:19:02,790
So we've just added Professor Roy from the University of Washington,
所以我们刚刚邀请了来自华盛顿大学的罗伊教授，

1178
01:19:02,790 --> 01:19:04,130
who's a 5G expert.
他是一位5G专家。

1179
01:19:04,130 --> 01:19:06,962
So he's running something called Beyond 5G.
所以他在负责一个名为“超越5G”的项目。

1180
01:19:06,962 --> 01:19:10,026
What do we do after 5G?
我们在5G之后该做什么？

1181
01:19:10,026 --> 01:19:12,060
Cuz 5G won't be the end.
因为5G不会是终点。

1182
01:19:12,060 --> 01:19:15,200
I'm running the operate through portion, which is to say, hey,
我正在运行操作部分，也就是说，嘿，

1183
01:19:15,200 --> 01:19:18,770
how do I operate on that existing 5G network?
我该如何在现有的5G网络上进行操作？

1184
01:19:18,770 --> 01:19:22,500
And there's a group that's currently out there called accelerate,
目前有一个名为accelerate的团队正在那里活动，

1185
01:19:22,500 --> 01:19:27,700
which is helping get this adoption into government systems.
它正在帮助推动这种技术在政府系统中的应用。

1186
01:19:27,700 --> 01:19:30,730
All three of which, I think could potentially be interesting to NDN.
这三个方面，我认为可能对NDN都有潜在的兴趣。

1187
01:19:30,730 --> 01:19:35,570
So I just wanted to kind of put that out there to the group and,
所以我只是想把这些信息告诉大家，

1188
01:19:35,570 --> 01:19:37,390
of course the answer any questions.
当然会回答任何问题。

1189
01:19:37,390 --> 01:19:38,909
That's it. I think that's it for me.
那就这样吧。我想对我来说就到此为止了。

1190
01:19:38,909 --> 01:19:40,280
>> Okay. >> Kathy, I will pass it on the next.
>> 好的。>> 凯西，我会在下一次传递它。

1191
01:19:41,470 --> 01:19:41,990
>> Okay, great.
>> 好的，太好了。

1192
01:19:41,990 --> 01:19:42,750
Thank you, Dan.
谢谢你，丹。

1193
01:19:42,750 --> 01:19:46,110
We'll get back to probably with some questions.
我们可能会提出一些问题再回复您。

1194
01:19:46,110 --> 01:19:50,344
Next I'd like to introduce Sokwoo Rhee and he's an entrepreneur and
接下来我想介绍Sokwoo Rhee，他是一位企业家和

1195
01:19:50,344 --> 01:19:54,651
executive with expertise in the internet of things, smart cities and
高管，他在物联网、智能城市和无线网络方面拥有专业知识，这些网络适用于商业、工业和军事应用。

1196
01:19:54,651 --> 01:19:59,469
wireless networks for commercial, industrial and military applications.
适用于商业、工业和军事应用的无线网络。

1197
01:19:59,469 --> 01:20:02,229
He's one of the pioneers who have initiated and
他是最早发起和

1198
01:20:02,229 --> 01:20:05,474
grown the IoT industry since the early 2,000's.
推动物联网产业自21世纪初期以来的增长。

1199
01:20:05,474 --> 01:20:10,388
He is currently Associate Director for the cyber physical systems innovation
他目前是网络物理系统创新的副主任。

1200
01:20:10,388 --> 01:20:15,035
at the National Institute of Standards and Technology are hosting this.
国家标准技术研究院正在主办这个。

1201
01:20:15,035 --> 01:20:17,685
And he's been covering enough.
他已经报道得够多了。

1202
01:20:17,685 --> 01:20:20,860
Station programs for IoT and Smart Cities.
他负责物联网和智能城市的站点项目。

1203
01:20:20,860 --> 01:20:26,050
He manages the global city teams challenge, a US federal government
他管理着全球城市团队挑战赛，这是美国联邦政府的一个项目。

1204
01:20:26,050 --> 01:20:31,910
program to develop a global ecosystem of major business and technology stakeholders
旨在发展一个由主要商业和技术利益相关者组成的全球生态系统的项目。

1205
01:20:31,910 --> 01:20:37,340
to create replicable and scalable IoT Smart City projects.
旨在创建可复制和可扩展的物联网智能城市项目。

1206
01:20:37,340 --> 01:20:41,012
Prior to joining US government, he was co-founder and
在加入美国政府之前，他是联合创始人并且是

1207
01:20:41,012 --> 01:20:43,050
CTO of Millennial dot Net Inc.
在Millennial dot Net Inc.担任首席技术官。

1208
01:20:43,050 --> 01:20:46,252
One of the first to successfully commercialize low
率先成功商业化低端~!@#$%^&*()

1209
01:20:46,252 --> 01:20:50,680
power wireless sensor networks and IoT technologies from Academia.
他的工作和成就已经在包括学术界的多个委员会中得到认可。

1210
01:20:50,680 --> 01:20:56,083
His work and achievements have been recognized in multiple boards including
他的工作和成就已经在包括学术界的多个委员会中得到认可。

1211
01:20:56,083 --> 01:21:00,917
MIT technology reviews top innovators under 35 and he went to MIT.
MIT科技评论评选的35岁以下顶尖创新者之一，他也曾就读于麻省理工学院。

1212
01:21:00,917 --> 01:21:06,840
And I would like to give him a chance to speak now, thank you.
我现在想给他一个机会发言，谢谢。

1213
01:21:08,760 --> 01:21:10,220
>> Thank you, Kathy, by the way,
>> 谢谢你，顺便说一下，Kathy，

1214
01:21:10,220 --> 01:21:13,900
I didn't expect you to read through my whole bio, that wasn't really intention.
我没想到你会把我的整个简历都读一遍，那真的不是我的本意。

1215
01:21:15,510 --> 01:21:20,010
And also, I am now much older than 35, that was a long time ago.
而且，我现在比35岁大多了，那是很久以前的事了。

1216
01:21:20,010 --> 01:21:23,498
So don't get me wrong for anyone, I don't look like 35.
所以别误会，我看起来不像35岁。

1217
01:21:23,498 --> 01:21:28,424
So I didn't even have to say it, so thank you for the intro.
所以我甚至都不需要说了，感谢你的介绍。

1218
01:21:28,424 --> 01:21:34,732
So I work on Smart City, I work on large scale IoT in general,
所以我从事智慧城市方面的工作，我通常处理大规模的物联网项目，

1219
01:21:34,732 --> 01:21:39,459
but currently Smart Cities is my focus area.
但目前我的重点领域是智慧城市。

1220
01:21:39,459 --> 01:21:46,941
Now, I'd like to provide a little bit of perspectives on how sparsity and
现在，我想就稀疏性这一概念提供一些观点，以及它是如何

1221
01:21:46,941 --> 01:21:52,858
new networking technologies including edge computing,
新的网络技术包括边缘计算，

1222
01:21:52,858 --> 01:21:56,375
can work together or may not work.
可以协同工作，也可能不行。

1223
01:21:56,375 --> 01:22:00,304
So there are a lot of buzz about edge computing these days.
如今，边缘计算领域有很多热议。

1224
01:22:00,304 --> 01:22:02,775
And then even in the Smart City area,
并且即使在智慧城市领域，

1225
01:22:02,775 --> 01:22:08,100
a lot of people are talking about how to use edge computing concepts.
很多人正在讨论如何使用边缘计算概念。

1226
01:22:08,100 --> 01:22:11,700
In the context of a Smart City and in many cases,
在智慧城市的背景下，在很多情况下，

1227
01:22:11,700 --> 01:22:17,570
that what I see is technologies like me for companies.
我看到的是像我这样的技术被公司所使用。

1228
01:22:17,570 --> 01:22:21,219
Basically, bringing this new concept and
基本上，是将这个新概念带入

1229
01:22:21,219 --> 01:22:26,688
try to push to the cities and the city officials, in many cases,
努力推广至各个城市及市政官员，在许多情况下，

1230
01:22:26,688 --> 01:22:32,789
municipalities are perplex any cases, always gonna help me, right?
市政当局在许多情况下都感到困惑，你总是会帮助我，对吧？

1231
01:22:32,789 --> 01:22:38,051
So there's a huge gap between this the actual users, it was Smart City or the,
所以在实际用户与智慧城市之间存在着巨大的差距，或者说，

1232
01:22:38,051 --> 01:22:43,345
for lack of a better word, customers that was Smart City technologies.
为了更恰当地表达，可以称之为智慧城市技术的客户。

1233
01:22:43,345 --> 01:22:47,610
And the suppliers, and that question is done new here,
供应商也是如此，这个问题在这里已经得到了解决。

1234
01:22:47,610 --> 01:22:50,260
it's been around for a long time.
它已经存在很长时间了。

1235
01:22:50,260 --> 01:22:55,335
But when it comes to new emerging technologies such as 5G or
但当涉及到5G或者这类新兴技术时，

1236
01:22:55,335 --> 01:23:00,320
edge computing, that problem is amplified much bigger.
边缘计算会将那个问题放大很多。

1237
01:23:00,320 --> 01:23:05,290
Because edge computing conceptually, the way that typically,
由于从概念上讲，边缘计算的典型方式，

1238
01:23:05,290 --> 01:23:07,729
the companies explain that is,
公司解释说，这是，

1239
01:23:07,729 --> 01:23:12,537
use that computing you can reduce the bandwidth requirement.
使用那种计算，你可以减少带宽需求。

1240
01:23:12,537 --> 01:23:16,722
And the companies make it a big deal, and then say, so
而公司们把它当作一件大事，然后说，所以

1241
01:23:16,722 --> 01:23:21,651
you have to install edge computing capabilities in a city, and
你必须在一个城市中安装边缘计算能力，而且

1242
01:23:21,651 --> 01:23:27,055
then city officials go, okay, why should I worry about it?
然后城市官员会说，好吧，我为什么要担心这个问题呢？

1243
01:23:27,055 --> 01:23:30,833
Only reason I should worry about is because I got to pay more for
我唯一需要担心的原因是因为我得付更多的钱。

1244
01:23:30,833 --> 01:23:33,435
the cell network, cell bandwidth.
移动网络，蜂窝带宽。

1245
01:23:33,435 --> 01:23:39,820
That's really, then question comes down to, okay, if I install this devices,
那真的是，然后问题归结为，好的，如果我安装这些设备，

1246
01:23:39,820 --> 01:23:45,980
are you saying that I don't need to use cell network to get to the edge compute?
您是在说我不需要使用蜂窝网络就能连接到边缘计算吗？

1247
01:23:45,980 --> 01:23:48,668
So the last mile problem is still not solved,
所以最后一公里的问题仍然没有解决，

1248
01:23:48,668 --> 01:23:51,571
because you cannot use WiFi because there's too
因为WiFi信号太弱，所以你不能使用WiFi。

1249
01:23:51,571 --> 01:23:55,550
short in city environment in a whole environment, it may be okay.
在整个城市环境中可能还可以，但在局部城市环境中信号就弱了。

1250
01:23:55,550 --> 01:23:59,904
But it gets down to broad Metropolitan environment,
但在更广泛的大都市环境中，

1251
01:23:59,904 --> 01:24:04,549
you still cannot really avoid relying on a cell network,
你仍然无法真正避免依赖蜂窝网络，

1252
01:24:04,549 --> 01:24:07,756
even if your edge devices are built in.
即使你的边缘设备是内置的。

1253
01:24:07,756 --> 01:24:12,648
So the point I'm making is this, in Smart City area,
所以我要表达的观点是，在智慧城市领域，

1254
01:24:12,648 --> 01:24:16,760
edge computing is a 5G's buzzwords.
边缘计算是5G的热门词汇。

1255
01:24:16,760 --> 01:24:20,799
I think there is still time and there is a gap in adoption,
我认为还有时间，而且在采纳方面还存在差距。

1256
01:24:20,799 --> 01:24:23,420
especially, it's computing 5G.
尤其是它的5G计算技术。

1257
01:24:23,420 --> 01:24:28,483
I think is gonna happen much quicker, because Apple no matter what, and
我认为这将会发生得更快，因为无论如何，苹果公司……

1258
01:24:28,483 --> 01:24:33,309
frankly speaking, the carriers will not want to let us not have 5G.
坦白说，运营商是不会允许我们不使用5G的。

1259
01:24:33,309 --> 01:24:37,530
They wanna simply just keep manufacturing devices on 5G, replace it with
他们只是想简单地继续生产支持5G的设备，用它来替换掉

1260
01:24:37,530 --> 01:24:41,560
the 4G device and we weren't enough, I have a lot of choice out there.
我们不满足于4G设备，我有很多其他的选择。

1261
01:24:41,560 --> 01:24:45,371
But when you come into the municipal network or municipalities,
但当你进入市政网络或市政当局时，

1262
01:24:45,371 --> 01:24:49,607
who are probably the bigger customer, that's a little bit different.
他们可能是较大的客户，这有一点不同。

1263
01:24:49,607 --> 01:24:54,587
Because they may still, although, networks are still operating in 2G network.
因为他们可能仍然在使用，尽管网络仍在2G网络下运行。

1264
01:24:54,587 --> 01:24:57,938
A lot of people, many people, not many people know why, but
很多人，许多人，并不是很多人知道为什么，但是

1265
01:24:57,938 --> 01:25:01,177
a lot of them are still running on 2G or even 3G networks.
很多人仍在使用2G甚至3G网络。

1266
01:25:01,177 --> 01:25:05,101
So point as for edge computing and NDN too,
这些新概念，如边缘计算和NDN（命名数据网络），也想要进入主流。

1267
01:25:05,101 --> 01:25:10,552
these kinda new concepts to wanna get into the mainstream.
这些新概念也想要进入主流。

1268
01:25:10,552 --> 01:25:14,476
I think we need to have a very clear pitch, and
我认为我们需要有一个非常清晰而有说服力的信息。

1269
01:25:14,476 --> 01:25:17,692
very clear and convincing message.
非常清晰而有说服力的信息。

1270
01:25:17,692 --> 01:25:22,698
Why this new technologies we're gonna help municipalities to operate and
这些新技术将帮助市政机构运作并且

1271
01:25:22,698 --> 01:25:26,364
deliver their services, and fulfill their mission.
提供他们的服务，并完成他们的使命。

1272
01:25:26,364 --> 01:25:28,626
I'm gonna stop there for now.
我现在就先停在这里。

1273
01:25:30,716 --> 01:25:35,590
>> Okay, thank you, and thanks for introducing this idea that maybe
好的，谢谢你，也感谢你提出这个想法，或许

1274
01:25:35,590 --> 01:25:40,378
we need to think about creating applications which have some pull
我们需要考虑创建一些具有吸引力的应用程序。

1275
01:25:40,378 --> 01:25:45,270
instead of trying to push them on people who might not want them.
而不是试图将它们强加给那些可能不需要它们的人。

1276
01:25:45,270 --> 01:25:45,969
So maybe we're looking in the wrong places, so-
所以也许我们在错误的地方寻找，所以-

1277
01:25:45,969 --> 01:25:48,890
>> Wow, you summarized it, I spent 10
哇，你总结了它，我花了10分钟讲了很多，你却在[笑声] [听不清]中把它概括得太棒了。

1278
01:25:48,890 --> 01:25:54,570
minutes talking a lot, you summarized it in [LAUGH] [INAUDIBLE], awesome.
分钟讲了很多，你却在[笑声] [听不清]中把它概括得太棒了。

1279
01:25:54,570 --> 01:25:57,218
>> No, no, you are very good, thank you.
不，不，你做得非常好，谢谢你。

1280
01:25:57,218 --> 01:26:01,746
Next, I'd like to introduce Dr. Geng Wu and he's an Intel fellow and
接下来，我想介绍吴耿博士，他是英特尔的资深院士，同时也是

1281
01:26:01,746 --> 01:26:05,990
a Chief Technologist for wireless technologies and standards.
他是无线技术和标准的首席技术专家。

1282
01:26:05,990 --> 01:26:12,360
He leads Intel's 5G and 6G technology development and ecosystem collaboration.
他领导英特尔的5G和6G技术开发以及生态系统合作。

1283
01:26:12,360 --> 01:26:15,709
Okay, that's what comes after 5G, I guess,
好吧，我猜那就是5G之后的事情了。

1284
01:26:15,709 --> 01:26:19,578
he serves as the head of Intel's delegation to 3GPP.
他担任英特尔公司代表团的团长，参与3GPP。

1285
01:26:19,578 --> 01:26:24,654
And he's a director of the board of the IOWN Global Forum,
他还是IOWN全球论坛董事会的一员。

1286
01:26:24,654 --> 01:26:31,820
the multi-fire alliance and the automotive edge computing consortium.
多火盟和汽车边缘计算联盟。

1288
01:26:35,276 --> 01:26:39,475
everything at the edge, go ahead, your turn.
一切尽在掌握之中，往前走，轮到你了。

1289
01:26:39,475 --> 01:26:45,100
>> Thank you very much, so it is my great honor to be here and
非常感谢，能来到这里是我的莫大荣幸，

1290
01:26:45,100 --> 01:26:49,172
well, if there's no virus situation,
嗯，如果没有病毒情况的话，

1291
01:26:49,172 --> 01:26:56,146
we would be having a drink with the co-panelists after the session.
我们会在会议结束后和其他小组成员一起喝一杯。

1292
01:26:56,146 --> 01:27:00,818
Excited to be here, so let's me just
很高兴来到这里，所以让我简单地

1293
01:27:00,818 --> 01:27:05,356
say a few words about why I'm here.
说几句关于我为什么会来这里的原因。

1294
01:27:05,356 --> 01:27:12,273
So the topic that this particular session is addressing,
所以这个特定的会议要讨论的主题是，

1295
01:27:12,273 --> 01:27:16,517
it's actually very interesting.
这实际上非常有趣。

1296
01:27:16,517 --> 01:27:20,704
Internet of Things and edge,
物联网和边缘计算，

1297
01:27:20,704 --> 01:27:27,915
both are very much to the heart of the 5G industry.
这两者都是5G行业的核心所在。

1298
01:27:27,915 --> 01:27:34,313
And also the next upgrade platform upgrade that in the next ten years,
我们还在致力于下一个十年的平台升级。

1299
01:27:34,313 --> 01:27:38,982
we're working certainly on the next generation.
我们当然也在致力于下一代的工作。

1300
01:27:38,982 --> 01:27:44,949
So there's some fundamental technology drivers supposes,
所以有一些基础技术驱动假设存在，

1301
01:27:44,949 --> 01:27:49,767
for example, the need for network performance,
例如，对网络性能的需求，

1302
01:27:49,767 --> 01:27:55,160
as well as the localization of machine intelligence and
以及机器智能的本地化与

1303
01:27:55,160 --> 01:28:00,553
machine learning are really driving the networking and
机器学习确实在推动网络发展，

1304
01:28:00,553 --> 01:28:04,820
computing functions for the network edge.
为网络边缘提供计算功能。

1305
01:28:06,480 --> 01:28:11,160
Having said so, there is also assumption,
已经这么说了，也存在着假设，

1306
01:28:11,160 --> 01:28:14,940
kind of in common between these two important,
这两个重要的东西之间有某种共通之处，

1307
01:28:14,940 --> 01:28:20,770
probably the most important aspect of the technology development for
可能是技术发展最重要的方面是

1308
01:28:20,770 --> 01:28:25,280
this and the next generation, which is that
这一代和下一代最重要的是，

1309
01:28:25,280 --> 01:28:30,230
The solutions are well we do see,
我们确实看到了解决方案是，

1310
01:28:30,230 --> 01:28:35,300
in both cases we have the fragmented the design and
在这两种情况下，我们都将设计进行了碎片化处理，

1311
01:28:35,300 --> 01:28:41,935
the solutions and so basically basically different optimizations.
解决方案以及基本上不同的优化。

1312
01:28:41,935 --> 01:28:47,285
And quite often we see the issues that
我们经常会看到这些问题，

1313
01:28:47,285 --> 01:28:51,305
yes, these solutions are hard to scale and
是的，这些解决方案很难扩展，并且

1314
01:28:51,305 --> 01:28:57,750
some of the panelists the colleagues here already mentioned that.
一些在场的小组成员和同事们已经提到了这一点。

1315
01:28:57,750 --> 01:29:04,590
So basically, how do we actually horizontalise the technology and
那么基本上，我们如何实际上将技术横向扩展，

1316
01:29:04,590 --> 01:29:09,277
more importantly the market at the industry?
更重要的是，行业市场怎么样？

1317
01:29:09,277 --> 01:29:14,750
That's probably one of the key issues that we need to address.
这可能是我们需要解决的关键问题之一。

1318
01:29:14,750 --> 01:29:21,030
If you look deeper from a purely technology viewpoint,
如果你从纯粹技术的角度更深入地看，

1319
01:29:21,030 --> 01:29:27,580
I think most of the issues really come in from the fact that we
我认为大多数问题实际上都源自我们所处理的事情，它们涉及到计算和发展。

1320
01:29:27,580 --> 01:29:34,250
are dealing with a evolve the computing and
涉及到计算和发展演变。

1321
01:29:34,250 --> 01:29:39,550
networking and data model.
网络和数据模型。

1322
01:29:39,550 --> 01:29:44,510
So that's a particular model actually, that drives the way we design the network,
所以这实际上是一个特定的模型，它引导了我们设计网络的方式。

1323
01:29:44,510 --> 01:29:46,270
we did our platform.
我们开发了我们的平台。

1324
01:29:46,270 --> 01:29:49,280
We did our applications as part of actually evolving.
我们开发我们的应用程序作为实际进化的一部分。

1325
01:29:50,760 --> 01:29:56,070
To be more specific, for example, we do expect
为了更具体一点，例如，我们确实期待

1326
01:29:56,070 --> 01:30:01,940
the next generation system to be platform to be at least order for
下一代系统将是一个平台，至少要比现在快一个数量级。

1327
01:30:01,940 --> 01:30:06,290
magnitude faster than what we have today.
要比我们现在拥有的快一个数量级。

1328
01:30:06,290 --> 01:30:15,300
We are seeing that the network,
我们正在看到网络，

1329
01:30:15,300 --> 01:30:21,370
the switching fabric for example, increasingly programmable even today,
例如，交换网络，即使在今天，也越来越可编程，

1330
01:30:21,370 --> 01:30:25,330
we can easily do one single part.
我们可以轻松完成单一部分。

1331
01:30:25,330 --> 01:30:31,970
This terabit is for multi terabits per second, fully programmable switching.
这个太比特是用于每秒多太比特的全可编程交换。

1332
01:30:31,970 --> 01:30:33,450
So that's not an issue.
所以那不是问题。

1333
01:30:33,450 --> 01:30:40,160
So there's it, that's a tremendous the technology opportunities there.
所以就是这样，那里有巨大的技术机遇。

1334
01:30:40,160 --> 01:30:42,830
We also see the challenges.
我们也看到了挑战。

1335
01:30:42,830 --> 01:30:47,729
We need to have a deeper understanding of
我们需要对此有更深入的了解。

1336
01:30:47,729 --> 01:30:51,620
the computer communication and
计算机通信和

1337
01:30:51,620 --> 01:30:55,940
the data model, what that means and
数据模型是什么意思以及

1338
01:30:55,940 --> 01:31:03,017
how the NDN play a critical enabling role in this new word?
NDN在这个新世界中扮演了怎样关键的启用角色？

1339
01:31:03,017 --> 01:31:07,773
Network obviously is no longer just a communication pipe that
显然，网络不再仅仅是一个通信管道，它还能够

1340
01:31:07,773 --> 01:31:09,606
connects the two ends.
连接两端。

1341
01:31:09,606 --> 01:31:15,666
Is so tremendous your networking, computing and data processing.
你的网络、计算和数据处理能力是如此巨大。

1342
01:31:15,666 --> 01:31:20,433
So those things are actually the cool thing is that NDN was
实际上很酷的是，NDN是

1343
01:31:20,433 --> 01:31:25,714
actually very much designed from the very beginning to serve.
实际上从一开始就非常精心设计来服务。

1344
01:31:25,714 --> 01:31:29,820
To actually assume that the network is suggesting not just
实际上假设网络不仅仅是在暗示

1345
01:31:29,820 --> 01:31:34,450
a collection of communication pipes, so that's important.
一系列的通讯管道，这很重要。

1346
01:31:34,450 --> 01:31:40,009
I think Dan touched on the fact that the zero
我认为丹提到了零信任是因为NDN的设计方式。

1347
01:31:40,009 --> 01:31:46,039
trust was because of the way NDN was designed.
信任是因为NDN的设计方式。

1348
01:31:46,039 --> 01:31:49,542
That there are some unique capabilities,
这是因为有一些独特的能力，

1349
01:31:49,542 --> 01:31:55,379
that security capabilities that enable us to do something different,
那些安全能力使我们能够做一些不同的事情，

1350
01:31:55,379 --> 01:31:59,660
and those are the areas that we are looking forward to
和那些是我们期待的领域。

1351
01:31:59,660 --> 01:32:04,038
work with the research community and to to address and
与研究社区合作以解决和应对

1352
01:32:04,038 --> 01:32:09,000
that's the reason why we are very much a strong supporter and
这就是为什么我们非常支持并且

1353
01:32:09,000 --> 01:32:12,820
passionate about the technology.
对技术充满热情。

1354
01:32:12,820 --> 01:32:14,000
Back to you, Nicole.
回到你这里，Nicole。

1355
01:32:17,650 --> 01:32:23,900
>> Okay, what I guess I should there's one question I have here this very
好的，我想我应该在这里有一个问题，这个问题非常

1356
01:32:23,900 --> 01:32:28,790
specifically for Justin and let's do that and we'll see if any others come up and
专门针对贾斯汀，我们就这么做，然后我们会看看是否还有其他问题出现。

1357
01:32:28,790 --> 01:32:32,570
see what we can talk about what among ourselves.
看看我们能讨论些什么。

1358
01:32:32,570 --> 01:32:38,004
If we'd like to know how far along is the NDN plus block chain solution and
如果我们想了解NDN加区块链解决方案的发展进度，以及

1359
01:32:38,004 --> 01:32:43,990
what aspects are furthest along development, prototype,s deployed, etc?
哪些方面的开发进展最快，已部署原型等？

1360
01:32:45,670 --> 01:32:50,400
>> Yeah, so we finished we finished the minimum viable product and
是的，所以我们完成了最小可行产品并且

1361
01:32:50,400 --> 01:32:54,550
kind of proof of concept early last year.
去年早些时候我们完成了一种概念验证。

1362
01:32:54,550 --> 01:32:59,550
So we've been continuing to develop that product, though, so that the original
所以我们一直在继续开发那个产品，以便原始的

1363
01:32:59,550 --> 01:33:05,110
genesis block was created over a year ago, almost a year and a half ago now.
创世区块是在一年多前创建的，现在几乎一年半了。

1364
01:33:06,210 --> 01:33:10,777
And so now we're at the stage where we're actually deploying that in test beds,
所以现在我们正处于一个阶段，即实际上在测试环境中部署该应用。

1365
01:33:10,777 --> 01:33:14,539
like I said, so we're gonna be taking part of that application and
像我说的，所以我们将会把那个应用的一部分

1366
01:33:14,539 --> 01:33:17,453
deploying it in our mobile edge compute platform.
部署在我们的移动边缘计算平台上。

1367
01:33:17,453 --> 01:33:21,718
And then we also have a separate standalone application that's primarily
我们还有一个独立的应用程序，它主要是

1368
01:33:21,718 --> 01:33:25,330
just gonna be used for localized payment processing.
仅用于本地化支付处理。

1369
01:33:25,330 --> 01:33:28,250
And so, we're doing that.
所以，我们正在做这个。

1370
01:33:28,250 --> 01:33:32,607
So where you can actually take and just install this on like a Raspberry Pi or
所以你实际上可以把它安装在类似树莓派这样的设备上。

1371
01:33:32,607 --> 01:33:33,790
whatever, right?
无论如何，对吧？

1372
01:33:33,790 --> 01:33:37,274
And then but the idea right is that you have everything localized your web server,
然后，但是想法是，你已经将你的网页服务器全部本地化了，

1373
01:33:37,274 --> 01:33:39,810
your APIs, everything's localized right?
你的API也全部本地化了，对吧？

1374
01:33:39,810 --> 01:33:44,319
And eventually where we wanna get to with this is we wanna have the entire
最终我们想要达到的目标是我们想要拥有一个完整的

1375
01:33:44,319 --> 01:33:47,336
front end application built with NDN, right?
基于NDN构建的前端应用程序，对吗？

1376
01:33:47,336 --> 01:33:48,357
Built on top of NDN.
基于NDN之上构建的。

1377
01:33:48,357 --> 01:33:50,960
And so right now we're just using it as kind of like a middleware.
所以现在我们只是将它作为一种中间件来使用。

1378
01:33:50,960 --> 01:33:53,704
And we're just passing it through the satellite network and
我们只是通过卫星网络传输它。

1379
01:33:53,704 --> 01:33:56,197
or any other network that we're kinda using, right?
或者我们正在使用的任何其他网络，对吗？

1380
01:33:56,197 --> 01:34:01,173
But we're trying to prove out that we can use NDN across a satellite link here
但我们正在尝试证明我们可以在这里通过卫星链路使用NDN。

1381
01:34:01,173 --> 01:34:05,410
in the next couple of weeks with our block-chain application.
在接下来的几周里，我们将使用我们的区块链应用程序。

1382
01:34:05,410 --> 01:34:10,105
And then I think the next steps for that right is that to kinda go
接下来，我认为正确的步骤是继续去做。

1383
01:34:10,105 --> 01:34:14,271
back to kinda some of the things Dan brought up as well.
我们也要回到丹提出的一些问题上。

1384
01:34:14,271 --> 01:34:17,517
We're looking at that blockchain application in the mobile edge compute
我们正在研究移动边缘计算中的区块链应用。

1385
01:34:17,517 --> 01:34:19,920
platform for auditing, primarily, right?
主要是用于审计的平台，对吧？

1386
01:34:19,920 --> 01:34:22,005
Assurance is a big one.
保证是一个重要的方面。

1387
01:34:22,005 --> 01:34:24,440
On-boarding is another huge one.
引入新用户是另一个非常重要的方面。

1388
01:34:24,440 --> 01:34:28,060
So, we've got to be able to take that blockchain application and
所以，我们必须能够将那个区块链应用程序进行调整，

1389
01:34:28,060 --> 01:34:32,618
have it vanilla enough to where we can apply it to those types of scenarios.
将其设计得足夜通用，以便我们能够将其应用到那些类型的场景中。

1390
01:34:32,618 --> 01:34:37,320
Or now we we can say, hey look, we can use zero knowledge proofs to validate
或者现在我们可以说，嘿看，我们可以使用零知识证明来验证

1391
01:34:37,320 --> 01:34:41,980
that the identity of this user is who they say they are without exposing their entire
身份信息，确保这个用户就是他们所声称的那个人，而无需暴露他们的全部

1392
01:34:41,980 --> 01:34:47,160
privacy, but also at the same time validating that the traffic and
隐私，同时还要验证通过网络的数据是稳定的。

1393
01:34:47,160 --> 01:34:50,750
the data that's coming through the network is not volatile.
通过网络的数据不是易失的。

1394
01:34:50,750 --> 01:34:52,790
It's not gonna cause problems.
它不会引起问题。

1395
01:34:52,790 --> 01:34:53,990
It's not gonna take the network down.
它不会导致网络瘫痪。

1396
01:34:53,990 --> 01:34:59,040
It doesn't have kinda some nasty payloads and some stuff in there as well.
它里面也没有包含一些恶意的负载和其他东西。

1397
01:34:59,040 --> 01:35:01,740
And that really speaks more to the military and
这实际上更多地涉及到军事方面。

1398
01:35:01,740 --> 01:35:05,300
government applications we're that seeing for requests for
我们正在看到政府应用程序的请求，用于

1399
01:35:05,300 --> 01:35:10,160
a verifiable trace routes, auditing assurance for whether you're
可验证的追踪路径，无论你是否在进行审计保证，

1400
01:35:10,160 --> 01:35:15,040
spinning up applications or Kubernetes clusters or whatever that case might be.
部署应用程序或Kubernetes集群，或者其他任何可能的情况。

1401
01:35:15,040 --> 01:35:16,600
But All those RF
但所有那些射频

1402
01:35:17,640 --> 01:35:21,410
kind of like spectrum analytics are gonna have to have auditing trails as well.
这些类似于频谱分析的技术也将不得不有审计追踪。

1403
01:35:21,410 --> 01:35:23,260
The FCC is pushing for that.
美国联邦通信委员会（FCC）正在推动这一进程。

1404
01:35:23,260 --> 01:35:27,710
So a lot of these different mandates that are coming down from not just governments,
这些不同的法令不仅仅来自政府，

1405
01:35:27,710 --> 01:35:30,430
but also from private industry as well.
还包括私营行业的法令。

1406
01:35:30,430 --> 01:35:34,060
And then also the the governing bodies like 3GPP and all these other things.
还有3GPP和其他这些管理机构。

1407
01:35:34,060 --> 01:35:35,390
So we're looking at that.
所以我们正在研究这个问题。

1408
01:35:35,390 --> 01:35:39,300
We're saying hey, you know, next steps for us is we really have to make
我们在说，嘿，你知道的，我们的下一步真的必须要做的是

1409
01:35:39,300 --> 01:35:43,100
the blockchain application deployed on the mobile edge compute platform.
将区块链应用部署在移动边缘计算平台上。

1410
01:35:43,100 --> 01:35:46,920
And now we can really open it up to all those IoT based applications to
现在我们确实可以将其全面开放给所有基于物联网的应用程序。

1411
01:35:46,920 --> 01:35:48,260
start off with.
我们可以从这里开始。

1412
01:35:48,260 --> 01:35:52,298
Now, because there's a huge developer pool out there that we're pulling in from
现在，因为外面有一个庞大的开发者群体，我们正在吸引他们加入。

1413
01:35:52,298 --> 01:35:54,419
Nvidia and Intel and some others, right?
英伟达、英特尔还有一些其他公司，对吗？

1414
01:35:54,419 --> 01:35:57,240
So we're gonna be able to enable those applications to run at the edge.
所以我们将能够使那些应用程序在边缘运行。

1415
01:35:57,240 --> 01:36:01,190
And then that's gonna give us the ability to work with industry and regulating
然后这将使我们有能力与行业和监管机构合作。

1416
01:36:01,190 --> 01:36:07,160
bodies and everybody involved, to really make sure that we can go to the DOD and
向所有相关机构和每一个参与者确保我们能够前往国防部。

1417
01:36:07,160 --> 01:36:11,080
say, Hey, here's an option for you if you want to deploy this on network.
说，嘿，如果你想在网络上部署这个，这里有一个选项可以提供给你。

1418
01:36:12,510 --> 01:36:17,274
To verify your routes, you can, are all the different analytics that you need or
为了验证你的路由，你可以使用所有你需要的不同分析工具。

1419
01:36:17,274 --> 01:36:20,373
zero proof knowledge kind of applications as well.
零知识证明类型的应用程序也是如此。

1420
01:36:23,820 --> 01:36:24,980
Thanks, Justin.
谢谢，贾斯汀。

1421
01:36:24,980 --> 01:36:27,870
There was a question that I think you already answered, Dan,
有一个问题我认为你已经回答了，丹，

1422
01:36:27,870 --> 01:36:31,860
that came up from Dave around about the traffic analysis.
但那引出了戴夫关于交通分析的一些问题。

1423
01:36:31,860 --> 01:36:34,320
But that brought up something for
但那引出了一些问题，

1424
01:36:34,320 --> 01:36:39,245
me that back when Van was first talking about what became NDN.
这让我想起了早先范首次提到后来成为NDN的事情时的情形。

1425
01:36:40,510 --> 01:36:45,930
I was consulting to this Airforce thing called TMOS,
我曾为一项名为TMOS的空军项目提供咨询服务，

1426
01:36:45,930 --> 01:36:50,360
which was a satellite based network that was servicing all these military networks.
该项目是一个基于卫星的网络，用于服务所有这些军用网络。

1427
01:36:50,360 --> 01:36:55,158
And the chief architect of that was really interested in this idea because of
他说，你可以发送流量的这个有些违反直觉的想法，因为这位总设计师对此非常感兴趣。

1428
01:36:55,158 --> 01:37:00,370
the somewhat counter-intuitive idea that he said, you can send traffic
他说，你可以发送流量的这个有些违反直觉的想法

1429
01:37:00,370 --> 01:37:04,420
in all different directions, not just where you want it to go.
向各个不同的方向发送，而不仅仅是你想要它去的地方。

1430
01:37:04,420 --> 01:37:07,480
So I guess it'd be like you sending pizzas all over DC or
所以我猜这就像你把披萨送遍整个华盛顿特区一样，或者

1431
01:37:07,480 --> 01:37:13,150
something [LAUGH] or sending pizzas every Friday.
或者每周五送披萨之类的事情。

1432
01:37:13,150 --> 01:37:16,690
And I mean that's sort of, we think about efficiency.
我是说，这在某种程度上，我们考虑的是效率。

1433
01:37:16,690 --> 01:37:20,320
But I mean what do you think about that idea is that that's sort of
但我是说，你对那个观点怎么看？就是说，这在某种程度上是

1434
01:37:20,320 --> 01:37:24,340
the opposite of efficiency, but it's sort of obscuring what's really going on.
效率的反面，但在某种程度上它模糊了真正发生的事情。

1435
01:37:25,360 --> 01:37:28,990
>> Yeah, I think that's a great example.
是的，我认为那是一个很好的例子。

1436
01:37:28,990 --> 01:37:34,150
I think there's a lot of interesting potential there where, and
我认为那里存在很多有趣的潜力，其中，

1437
01:37:34,150 --> 01:37:39,090
back to sort of what I've always taken sort of as the NDN mantra is it's very
回到我一直认为的NDN的口头禅，那就是它非常

1438
01:37:39,090 --> 01:37:44,315
hard to hide that volumetrics when it's a point to point circuit, right.
难以隐藏那种体积度量，当它是点对点电路的时候，对吧。

1439
01:37:44,315 --> 01:37:48,060
Cuz it's hard to say, but as you point out, right, we could
因为这很难说，但正如你所指出的，我们可以

1440
01:37:49,700 --> 01:37:54,180
with 5G there may be applications where I've got enough bandwidth and
在5G环境下，可能会有一些应用场景，我拥有足够的带宽并且

1441
01:37:54,180 --> 01:37:56,580
I actually don't care if I'm burning some additional bandwidth.
实际上，我并不介意如果我消耗了一些额外的带宽。

1442
01:37:57,590 --> 01:38:01,540
So I don't care if I'm sending data in random directions.
所以我并不在乎我是否在向随机的方向发送数据。

1443
01:38:01,540 --> 01:38:06,290
I like your example of I might just call up Domino's in Arlington,
我可能会打电话给阿灵顿的Domino's。

1444
01:38:06,290 --> 01:38:10,677
Virginia and send pizzas to 20 different directions and who knows.
弗吉尼亚可能会向20个不同的方向发送披萨，谁知道呢。

1445
01:38:13,000 --> 01:38:16,022
So that's a real possibility.
所以那是一个真正的可能性。

1446
01:38:16,022 --> 01:38:19,480
And so
我们正在试图摆脱那种能够轻易识别出来源的想法。

1447
01:38:19,480 --> 01:38:25,100
we're trying to get away from that idea of being able to easily identify the source.
我们正在试图摆脱那种能够轻易识别出来源的想法。

1448
01:38:25,100 --> 01:38:29,890
Another example that's come up is, yeah, I have all these devices,
另一个出现的例子是，是的，我有所有这些设备，

1449
01:38:29,890 --> 01:38:35,230
they could serve as relays, they could serve as.
它们可以作为中继站，它们可以作为。

1450
01:38:35,230 --> 01:38:39,830
I could talk to Kathy via anyone on this conference,
我可以通过这次会议上的任何人与Kathy交谈，

1451
01:38:39,830 --> 01:38:42,430
maybe via 20 of you on this conference, and then.
也许通过在这次会议上的你们中的20个人，然后。

1452
01:38:44,620 --> 01:38:49,230
So it's interesting to see what you could hide if you put aside
所以，如果你把某些东西放在一边，看看你能隐藏些什么，这是很有趣的。

1453
01:38:49,230 --> 01:38:55,110
the goal of I don't have limited bandwidth, I have plenty of bandwidth.
我的目标不是拥有有限的带宽，而是拥有充足的带宽。

1454
01:38:55,110 --> 01:38:58,711
I don't have a small number of paths, I have plenty of paths.
我不是拥有少量的路径，而是拥有很多的路径。

1455
01:38:58,711 --> 01:39:02,496
Does that give me some new advantages?
这是否给了我一些新的优势？

1456
01:39:02,496 --> 01:39:05,556
Maybe it does.
也许它确实如此。

1457
01:39:05,556 --> 01:39:06,662
And yeah.
是的。

1458
01:39:07,760 --> 01:39:08,845
>> Done on mute.
>> 静音完成。

1459
01:39:08,845 --> 01:39:13,110
Sokwoo, it looks like you wanted to say something.
Sokwoo，看起来你好像想说点什么。

1460
01:39:13,110 --> 01:39:13,830
>> Yes, thank you.
是的，谢谢。

1461
01:39:13,830 --> 01:39:16,450
I want to say because this is fascinating idea.
我想说这是一个迷人的想法。

1462
01:39:16,450 --> 01:39:20,080
By the way, Dan, welcome back to federal government, by the way,
顺便说一句，丹，欢迎回到联邦政府。

1463
01:39:20,080 --> 01:39:22,498
good to have you back.
很高兴你回来了。

1464
01:39:22,498 --> 01:39:27,260
So from DOD perspective, it may not be,
从国防部的角度来看，可能不是这样的，

1465
01:39:27,260 --> 01:39:32,490
you may not need to be in the situation that you have a lot of bandwidth.
你可能不需要处于你有大量带宽的情况。

1466
01:39:32,490 --> 01:39:34,050
You may have still limited bandwidth but
你可能仍然有限的带宽，但

1467
01:39:34,050 --> 01:39:38,112
you were willing to pay for it because it may be more secure in certain cases.
你愿意为此付费，因为在某些情况下它可能更安全。

1468
01:39:38,112 --> 01:39:43,570
It's like military is not always inexpensive,
军事并不总是便宜的，

1469
01:39:43,570 --> 01:39:49,156
the way you need the best and you need the most secure, most powerful.
你需要最好的，也需要最安全、最强大的。

1470
01:39:49,156 --> 01:39:54,660
So especially for DOD title applications, makes perfect sense.
所以特别是对于国防部头衔应用来说，这是完全合理的。

1471
01:39:54,660 --> 01:39:59,920
Well, you don't have to really think about efficiency as much as partial world.
嗯，你不必像部分世界那样真的过分考虑效率。

1472
01:39:59,920 --> 01:40:06,270
And probably you don't want to prioritize efficiency over other important factors.
可能你不想把效率置于其他重要因素之上。

1473
01:40:06,270 --> 01:40:11,185
So makes perfect sense, and actually just wanted, I mean this is intriguing you
这完全有道理，实际上我只是想说，我的意思是这真的很有趣。

1474
01:40:11,185 --> 01:40:17,720
interpret that always [LAUGH] because we've been always thinking about this
解释这总是因为我们一直在思考这个问题。[笑]

1475
01:40:17,720 --> 01:40:23,510
we have to talk to talk about the security of the device or the manufacturer.
我们必须讨论设备或制造商的安全性。

1476
01:40:23,510 --> 01:40:29,530
That's why we're having all this discussions about, you know what.
这就是为什么我们要就这个话题进行所有这些讨论。

1477
01:40:29,530 --> 01:40:31,880
But that's sort of like a whack a mole game.
但这有点像打地鼠游戏。

1478
01:40:31,880 --> 01:40:36,130
I mean, about validate one device is secure, but
我是说，关于验证一个设备的安全性，但是

1479
01:40:36,130 --> 01:40:40,150
there may be other manufacturers that you may not be able to validate as secure.
可能还有其他制造商的设备你无法验证其安全性。

1480
01:40:40,150 --> 01:40:41,340
So you cannot, and
所以你不能够。

1481
01:40:41,340 --> 01:40:45,780
this is sort of like an endless dilemma that you're gonna eventually face.
这就像是一个你最终将不得不面对的无休止的困境。

1482
01:40:45,780 --> 01:40:47,835
So probably the better approach,
所以可能更好的方法是，

1483
01:40:47,835 --> 01:40:51,300
Dan, as you mentioned is let's assume that everybody's insecure.
丹，正如你提到的，让我们假设每个人都不安全。

1484
01:40:51,300 --> 01:40:54,060
Let's assume all devices are insecure.
让我们假设所有设备都是不安全的。

1485
01:40:54,060 --> 01:40:59,500
Let's find a way still do our job on top of this
让我们找到一种方法在这种情况下仍然完成我们的工作。

1486
01:40:59,500 --> 01:41:02,290
less secure, assumed less secure network.
较不安全的，假定是不安全的网络。

1487
01:41:02,290 --> 01:41:04,250
That's a fascinating approach.
这是一个引人入胜的方法。

1488
01:41:05,270 --> 01:41:08,980
That could solve, if you could come up with something really, really real,
这可能会有所解决，如果你能想出一些真正非常真实的东西，

1489
01:41:08,980 --> 01:41:13,610
that could solve a lot of the dilemma that we have right now.
这可能会解决我们现在面临的许多困境。

1490
01:41:13,610 --> 01:41:15,390
>> Thank you.
>> 谢谢。

1491
01:41:15,390 --> 01:41:19,622
And a lot of this credit goes to my boss, Joe Evans, who Dr.
很多功劳要归于我的老板，Joe Evans博士，他……

1492
01:41:19,622 --> 01:41:23,420
Joe Evans, who's put the big structure for the program in place.
Joe Evans博士，他为该项目建立了整体架构。

1493
01:41:23,420 --> 01:41:30,790
But I do think this is a, I do think there's a interesting way to
但我确实认为，我确实认为有一种有趣的方式来

1494
01:41:30,790 --> 01:41:33,980
think about this a little bit differently and to get out of the old mode.
思考这个问题有一点不同，跳出旧有的模式。

1495
01:41:33,980 --> 01:41:39,490
And that's why I'm particularly interested in talking on this group,
这也是我特别感兴趣想在这个群里交谈的原因，

1496
01:41:39,490 --> 01:41:42,870
right, because I think it
对，因为我认为它

1497
01:41:42,870 --> 01:41:47,870
also helps to have an architecture that's thinking along different lines.
它还有助于拥有一个沿着不同思路设计的架构。

1498
01:41:47,870 --> 01:41:53,040
And it's a whole different matter to say how do I hide
而说到如何隐藏这件事，则是另外一回事了。

1499
01:41:53,040 --> 01:41:58,160
the fact that source A is talking to destination B, when I've kind of got rid
关于源头A正在与目的地B对话这一事实，当我某种程度上摆脱了源头与目的地这一概念，并且更多地转向了内容时。

1500
01:41:58,160 --> 01:42:03,470
of the idea of source and destination and I've changed more to content.
所以，我认为这里有一些真正有趣的潜力。

1501
01:42:03,470 --> 01:42:09,260
So yeah, so I think there's some real interesting potential.
所以，我认为这里有一些真正有趣的潜力。

1502
01:42:09,260 --> 01:42:13,620
So hopefully, hopefully there'll be some fun stuff that comes out of this and
所以希望，希望这一切能带来一些有趣的东西。

1503
01:42:13,620 --> 01:42:15,980
we hope to get some interest.
我们希望能够引起一些兴趣。

1504
01:42:15,980 --> 01:42:19,785
But even if it's not for a DOD setting, and Sokwoo is exactly right,
但即使不是为了国防部的设置，Sokwoo 说得完全正确，

1505
01:42:19,785 --> 01:42:26,170
at a DOD setting they can pay for, security is worth the price there.
在国防部的环境中，他们能够支付得起，那里的安全是值得付出代价的。

1506
01:42:26,170 --> 01:42:29,120
So we can pay for some of those resources.
所以我们可以支付那些资源的费用。

1507
01:42:29,120 --> 01:42:31,050
But even in not a VOD setting, right,
但即便不是在视频点播的环境中，对吧，

1508
01:42:31,050 --> 01:42:34,820
this idea of the added agility in the 5G network.
这个关于5G网络增加敏捷性的想法。

1509
01:42:34,820 --> 01:42:37,220
And can we take advantage of that?
我们能够利用这一点吗？

1510
01:42:37,220 --> 01:42:40,624
And again, with this panel being focused on the edge,
而且再次强调，由于这个小组专注于边缘计算，

1511
01:42:40,624 --> 01:42:46,028
a lot of that communication in those smart cities, in the vehicles, in the blockchain
在智慧城市中、车辆中、区块链上的许多通信，

1512
01:42:46,028 --> 01:42:51,300
authentication is really going to, can really happen substantially at the edges.
认证实际上将会、确实可以在边缘处大量发生。

1513
01:42:53,330 --> 01:42:55,700
And how does that work?
这是如何运作的？

1514
01:42:55,700 --> 01:43:00,290
And it doesn't work well if I put it in a centralized model where it will all go
如果我把它放在一个中心化模型里，它就不会工作得很好。

1515
01:43:00,290 --> 01:43:05,020
back to the, let's send it all back to the central server and let's do it.
回到那个问题，让我们把所有数据都发送回中央服务器，然后再处理。

1516
01:43:05,020 --> 01:43:07,898
It works well in a distributed manner,
它在分布式环境下运行得很好，

1517
01:43:07,898 --> 01:43:12,793
which I think is well suited to do a lot of what the NDN communities.
我认为它非常适合完成许多NDN社区的工作。

1518
01:43:15,460 --> 01:43:19,063
>> Do any of you have maybe just any particular
您中有人有没有什么特别的想法？

1519
01:43:19,063 --> 01:43:24,050
charges that you would say to the NDN research community?
您认为对NDN研究社区特别重要的问题是什么？

1520
01:43:24,050 --> 01:43:29,521
Things that you feel like would be particularly
您觉得会特别

1521
01:43:29,521 --> 01:43:35,002
good to look at that seem to be neglected areas?
您觉得会特别值得关注的似乎被忽视了的领域？

1522
01:43:35,002 --> 01:43:38,144
Go back to that push versus pull model,
回到那个推与拉的模型，

1523
01:43:38,144 --> 01:43:43,394
what things would pull you in if you saw somebody working on that?
如果你看到有人在做那件事，什么东西会吸引你？

1524
01:43:43,394 --> 01:43:45,470
It would make you kind of go, wow.
它会让你有种“哇”的感觉。

1525
01:43:46,970 --> 01:43:47,770
That's a great thing.
这是一件很棒的事情。

1526
01:43:49,960 --> 01:43:51,806
>> I've got some.
>> 我有一些。

1527
01:43:51,806 --> 01:43:52,880
>> Yeah. >> Wait, let's see.
>> 是的。 >> 等等，我们看看。

1528
01:43:52,880 --> 01:43:56,970
Let's start with Geng Wu, he hasn't spoken for us yet.
我们从耿武开始吧，他还没为我们发言呢。

1529
01:43:56,970 --> 01:43:58,300
>> Okay, thank you.
好的，谢谢。

1530
01:43:58,300 --> 01:44:01,190
So there's several things.
所以有几件事情。

1531
01:44:01,190 --> 01:44:10,750
First of all, I would like to echo the and dance comments.
首先，我想回应一下之前的评论。

1532
01:44:10,750 --> 01:44:14,270
In fact, even for commercial systems,
实际上，即使对于商业系统来说，

1533
01:44:15,310 --> 01:44:21,150
the security is increasingly critical due to the nature of the network and
网络的性质使得安全性变得日益重要，由于

1534
01:44:21,150 --> 01:44:26,280
also the fact that the We are seeing the rapid
我们正在见证迅速

1535
01:44:26,280 --> 01:44:32,180
growth of private network, enterprise network and
私有网络、企业网络的快速增长，以及

1536
01:44:32,180 --> 01:44:36,340
mission critical even from a commercial point of view.
对于商业角度来说，这也是至关重要的。

1537
01:44:36,340 --> 01:44:39,230
So, how to actually make
那么，如何实际去做呢？

1538
01:44:40,640 --> 01:44:45,530
the insight of secure the session security connection?
如何确保会话安全连接的洞察？

1539
01:44:45,530 --> 01:44:50,720
How about directly security data snd how about protecting privacy?
如何直接保护数据安全以及如何保护隐私？

1540
01:44:50,720 --> 01:44:55,670
So those are the one of the things that really,
所以那些是真正重要的事情之一，

1541
01:44:55,670 --> 01:45:00,008
we need a research community is how to father and son.
我们需要一个研究社区来探讨父与子的关系。

1542
01:45:00,008 --> 01:45:05,860
There are 2, there's a section for Nikko side to the question I said,
您有两个问题，其中一个是关于日光方面的问题。

1543
01:45:05,860 --> 01:45:10,160
What's the otherwise you have for the research community?
您对研究社区还有什么其他建议吗？

1544
01:45:10,160 --> 01:45:14,430
I think there's 2 ways to look at it.
我认为可以从两个角度来看待这个问题。

1545
01:45:14,430 --> 01:45:19,520
One way is to understand
从一个角度是去理解

1546
01:45:19,520 --> 01:45:24,180
the opportunities that I think that Dan actually touched on that,
我认为丹实际上提到了的那些机会，

1547
01:45:26,160 --> 01:45:31,730
the next generation we are going to upgrade dramatically
我们将对下一代进行大幅升级。

1548
01:45:31,730 --> 01:45:36,721
the network performance from device to network and to fabric.
设备到网络再到架构的网络性能。

1549
01:45:36,721 --> 01:45:43,310
So instead of trying to save every bit and then.
所以不是试图节省每一点然后。

1550
01:45:43,310 --> 01:45:47,610
What would it be Indians technology potential,
印度的技术潜力会是什么呢？

1551
01:45:47,610 --> 01:45:50,900
because the way is doing things are dramatically different.
因为做事的方式截然不同。

1552
01:45:50,900 --> 01:45:56,250
What would the diet gave us assuming that you are running
如果你在跑步，那么这种饮食会给我们带来什么假设？

1553
01:45:56,250 --> 01:45:58,440
the next generation network.
下一代网络。

1554
01:45:58,440 --> 01:46:00,690
So that's the last aspect.
所以那是最后一个方面。

1555
01:46:00,690 --> 01:46:02,630
To be more specific.
要更具体一些。

1556
01:46:02,630 --> 01:46:10,390
The other aspect is the things that we were very much interested in.
另一个方面是我们非常感兴趣的事情。

1557
01:46:10,390 --> 01:46:18,790
Is to look at Indian as a tool as an opportunity
是将印第安作为一个工具、一个机会来看待。

1558
01:46:18,790 --> 01:46:24,140
for the network to go a status and professionalize.
为了使网络达到一种状态并专业化。

1559
01:46:24,140 --> 01:46:30,890
There's this are 2 separate things but people often call the London together.
这是两个不同的事物，但人们常常把它们统称为伦敦。

1560
01:46:30,890 --> 01:46:36,530
Stay less means that since your service are more localized and
停留时间短意味着你的服务更加本地化，而且

1561
01:46:36,530 --> 01:46:43,130
you're going at the edge, etc, etc so and also we're going very high frequency band,
你正在边缘进行操作等等，所以我们也在使用非常高的频段，

1562
01:46:43,130 --> 01:46:46,870
they have a millimeter wave, they have a terahertz coming up and
他们有毫米波，他们还在研发太赫兹技术，

1563
01:46:46,870 --> 01:46:54,075
then the connectivity really is not always there.
那么连接性并不总是存在的。

1564
01:46:54,075 --> 01:46:56,085
Is probably more opportunistic.
可能更多的是机会主义的。

1565
01:46:56,085 --> 01:47:01,165
And then the question is, what are the technology really to make that work?
那么问题就是，到底需要什么技术来实现这一切呢？

1566
01:47:01,165 --> 01:47:07,010
And so the night one devices need to go stay less and session, less.
那么夜间设备需要变得更加省电和更少的会话。

1567
01:47:07,010 --> 01:47:11,130
Well, can you actually build the security around?
那么，你真的可以围绕它构建安全措施吗？

1568
01:47:13,620 --> 01:47:17,780
More independent from the session itself inside of?
它在会话本身内部更加独立吗？

1569
01:47:17,780 --> 01:47:19,880
So there's many, many benefits.
所以有很多很多的好处。

1570
01:47:19,880 --> 01:47:27,970
I think that my co-panelists already addressed so I wouldn't, so, repeater.
我认为我的联席专家们已经讨论过了，所以我不会重复他们的话。

1571
01:47:27,970 --> 01:47:34,210
So I think, one thing we probably want to work on to the research
所以我认为，我们可能想要在研究上努力工作的一件事是

1572
01:47:34,210 --> 01:47:40,340
community to help us is to understand the new computing communication data model.
社区帮助我们理解新的计算通信数据模型。

1573
01:47:40,340 --> 01:47:45,250
And assuming you have a next generation platform, and
假设你有一个下一代平台，以及……

1574
01:47:45,250 --> 01:47:51,040
how you latter would make the MDN divinely help us to
如何让MDN在以后能够神圣地帮助我们……

1575
01:47:51,040 --> 01:47:55,960
build the next generation system and that benefit everyone.
构建下一代系统，使每个人都能从中受益。

1576
01:47:57,760 --> 01:47:58,260
Thank you.
谢谢您。

1577
01:47:58,260 --> 01:47:58,990
>> Yeah, thank you.
是的，谢谢您。

1578
01:48:00,030 --> 01:48:03,400
>> Does anybody else have something to add on that one?
>> 还有谁想对这个问题补充点什么吗？

1579
01:48:04,750 --> 01:48:08,010
>> Yeah, let me go next, and then I know Justin wanna jump in too.
>> 嗯，让我接下来说，然后我知道贾斯汀也想插话。

1580
01:48:08,010 --> 01:48:12,320
But I talk a lot, Justin, just smile, I like your smile.
但我话挺多的，贾斯汀，你就笑笑吧，我喜欢你的笑容。

1581
01:48:12,320 --> 01:48:17,060
And [LAUGH] so gain, I work on smart cities.
所以，再次强调，我研究智能城市。

1582
01:48:17,060 --> 01:48:24,020
So one of the biggest issues in our city especially from the perspective of data,
所以从数据的角度来看，我们城市面临的最大问题之一，

1583
01:48:24,020 --> 01:48:31,250
is this lack of interoperability even inside of the city operation.
这种缺乏互操作性甚至存在于城市运营的内部。

1584
01:48:31,250 --> 01:48:35,680
So what I mean by that is that the transportation department may have their
所以我的意思是交通部门可能有他们自己的

1585
01:48:35,680 --> 01:48:43,132
own data sets and their own communication, and connectivity mechanisms.
自己的数据集合以及他们自己的通信和连接机制。

1586
01:48:43,132 --> 01:48:45,140
But the packets and
但是数据包和

1587
01:48:45,140 --> 01:48:48,370
data are not necessarily packed in that there's no content.
数据并不一定是打包的，也就是说并非没有内容。

1588
01:48:49,600 --> 01:48:52,800
So typically if you use this communicate or
所以通常情况下，如果你使用这种沟通方式或者

1589
01:48:52,800 --> 01:48:59,100
system if just inside of department is okay because it's not from the when
如果只是在部门内部使用还可以，因为它并不是来自于那个时候。

1590
01:48:59,100 --> 01:49:03,780
want to create a smart city system which is cutting across all different sectors?
想要创建一个跨越所有不同领域的智能城市系统？

1591
01:49:03,780 --> 01:49:10,960
Suddenly it the data format, or the the packing of the data becomes a big issue.
突然间，数据的格式或者数据打包成了一个大问题。

1592
01:49:11,960 --> 01:49:15,770
So, I'm not necessarily getting down to the network layer or
所以，我不一定要深入到网络层，或者

1593
01:49:15,770 --> 01:49:20,020
even below I'm not getting the data by more talking about application level.
甚至更低层次，我也不是通过更多的交谈来获取数据，而是更多地谈论应用层级。

1594
01:49:20,020 --> 01:49:24,000
But one of the biggest problems we are seeing is data packets,
但我们看到的最大问题之一是数据包，

1595
01:49:24,000 --> 01:49:28,280
which is typically the tag with IP address,
通常是带有IP地址的标签，

1596
01:49:28,280 --> 01:49:34,940
some kind of address and the context over the content is completely separate.
某种类型的地址以及内容上下文是完全分开的。

1597
01:49:34,940 --> 01:49:39,550
And that is causing a lot of problems in developing a more holistic,
这正在导致在开发更全面的方面出现很多问题，

1598
01:49:39,550 --> 01:49:41,970
smart city data exchange network.
智能城市数据交换网络。

1599
01:49:43,390 --> 01:49:48,320
So I'm not necessarily thing that is the problem and
所以我不一定认为那是问题所在。

1600
01:49:48,320 --> 01:49:52,160
the network is going to be able to solve like a silver bullet.
网络将能够像银色子弹一样解决问题。

1601
01:49:52,160 --> 01:49:57,150
But point is, that's the problem I'm seeing from the Smart Cities perspective.
但问题是，从智慧城市的角度来看，这正是我所看到的问题。

1602
01:49:57,150 --> 01:50:00,920
If there is anything that end in network can contribute.
如果有任何事情是网络可以贡献的。

1603
01:50:00,920 --> 01:50:08,170
Addressing it, perhaps bring that concept into data exchange platform that is
解决这个问题，或许可以将这个概念引入到数据交换平台。

1604
01:50:08,170 --> 01:50:13,940
being developed by so many different cities and states and governments.
正在被众多不同的城市、州和政府开发。

1605
01:50:13,940 --> 01:50:16,690
That could potentially change the game.
这可能会改变游戏规则。

1606
01:50:16,690 --> 01:50:18,420
I'm just throwing that out.
我只是随便说说的。

1607
01:50:21,508 --> 01:50:23,690
That's right, Justin [LAUGH] >> Yeah,
对，Justin [笑声] >> 是的，

1608
01:50:24,890 --> 01:50:28,610
I'll be brief I totally agree with you guys and
我会简短地说，我完全同意你们的观点，

1609
01:50:28,610 --> 01:50:33,350
I think it's really important for us to focus on on the bigger picture.
我认为我们专注于更宏观的大局非常重要。

1610
01:50:33,350 --> 01:50:37,720
Whenever we're looking forward right and so anywhere we can we can pull those
无论何时我们都在向前看，因此我们可以利用任何机会去拉动那些把手，通过这样的方式在小范围内甚至大范围内改善事物。

1611
01:50:37,720 --> 01:50:42,980
levers and kind of improve things on a small scale or even on a big scale.
杠杆，并且在小规模甚至大规模上改善事物。

1612
01:50:42,980 --> 01:50:45,170
That's really where we should be focused.
这确实是我们应该集中关注的地方。

1613
01:50:45,170 --> 01:50:50,370
And I think for me, right, because I'm up in the weeds for the most part right now
而且我认为，对我来说，是这样的，因为目前我大部分时间都在处理琐碎的事务。

1614
01:50:50,370 --> 01:50:56,450
currently, but I think the forwarder is kind of our biggest challenge right now.
但我认为目前最大的挑战是货运代理。

1615
01:50:56,450 --> 01:50:58,380
And so if we could look at it, you know,
如果我们能够仔细看看这个问题，你知道的，

1616
01:50:58,380 --> 01:51:02,640
I think it was hit on some of the previous discussions where we can, you know, it.
我认为这在之前的一些讨论中已经被提及过，我们可以，你知道的，它。

1617
01:51:02,640 --> 01:51:06,390
And the reason I say that is because if you look at how 5G works and
而我之所以这么说，是因为如果你研究一下5G是如何工作的，以及

1618
01:51:06,390 --> 01:51:08,770
dynamic slot you know just the slicing are long right and
动态时隙，你知道的，就是长时间的切片，还有

1619
01:51:08,770 --> 01:51:12,050
like we're looking at dynamic slicing, you've got a bunch of other things
像我们在看动态切片，你还得考虑许多其他事项。

1620
01:51:12,050 --> 01:51:16,050
that go into the like the the slicing aspects of it to right?
这些都是进入切片方面需要考虑的，对吗？

1621
01:51:16,050 --> 01:51:19,730
But moving forward into 5G and moving forward into those types of
但展望未来，进入5G以及那些类型的

1622
01:51:19,730 --> 01:51:22,840
networks where you've got slicing and you've got CBR s in there too, right?
网络中有分片技术，也有CBR，对吧？

1623
01:51:22,840 --> 01:51:27,680
Where you've got different allocations for different uses.
在那里，你有不同的分配用于不同的用途。

1624
01:51:27,680 --> 01:51:32,880
So we're really, we're getting down to network utilization spectrum utilization,
所以我们真的在深入研究网络利用率、频谱利用率。

1625
01:51:32,880 --> 01:51:36,210
but whenever you look at that from a forwarder standpoint.
但是当你从一个转发器的角度来看这个问题时。

1626
01:51:36,210 --> 01:51:42,250
Being able to create dynamic faces on the fly for thousands or millions of devices,
能够即时为成千上万的设备创建动态面孔，

1627
01:51:42,250 --> 01:51:45,420
or thousands of millions of users, and being able to do that and
在成千上万甚至数以百万计的用户中做到这一点，并且能够做到这一点，

1628
01:51:45,420 --> 01:51:50,660
update the entire network very rapidly and very quickly in like a 32nd time frame or
在短短32秒的时间框架内非常迅速地更新整个网络。

1629
01:51:50,660 --> 01:51:53,790
less right for new policies and everything else.
对于新政策和其他事务的权利较少。

1630
01:51:53,790 --> 01:51:56,540
I think that's where our substantial challenges are at
我认为那是我们面临的主要挑战所在。

1631
01:51:56,540 --> 01:51:58,390
just with the Florida right now.
就在佛罗里达现在。

1632
01:51:58,390 --> 01:52:03,450
And looking at, you know, how do we solve that in the in the 5g challenge,
在考虑，你知道的，在5G挑战中，我们如何解决这个问题，

1633
01:52:03,450 --> 01:52:06,220
not just from an identity perspective, right?
不仅仅是从身份认同的角度来看，对吧？

1634
01:52:06,220 --> 01:52:10,680
Because this really comes back to fundamentally an identity
因为这确实从根本上回到了身份认同的问题。

1635
01:52:10,680 --> 01:52:12,440
problem in my mind.
我脑海中的问题。

1636
01:52:12,440 --> 01:52:14,190
Right? And that is how do you identify the user?
对吧？那么问题是你如何识别用户？

1637
01:52:14,190 --> 01:52:15,160
How do you identify the node?
你如何识别节点？

1638
01:52:15,160 --> 01:52:18,000
How do you identify the traffic and so
如何识别交通流量呢？所以~!@#$%^&*()

1639
01:52:18,000 --> 01:52:23,860
really saying If we have a trustful source, or a trustful destination,
如果我们有一个可信的来源或一个可信的目的地，

1640
01:52:23,860 --> 01:52:27,510
right, it's everything in between that we have to fix to get it there and
对，我们需要解决中间的所有问题才能达到那个目标。

1641
01:52:27,510 --> 01:52:33,360
I think Indian is a huge leap forward to get you know, to get as 90% there.
我认为印度式的进步是一个巨大的飞跃，可以让你知道，达到那里的90%。

1642
01:52:33,360 --> 01:52:35,680
I think that there's just a little bit more we can do
我认为我们还能做更多一点点的事情。

1643
01:52:36,980 --> 01:52:41,010
on the forwarder to really dial in the identity aspects.
在转发器上，我们还需要进一步精确地调整身份识别方面的细节。

1644
01:52:41,010 --> 01:52:43,385
And then create the faces dynamically as well.
同时还需要动态地创建面部特征。

1645
01:52:43,385 --> 01:52:46,680
Just,take that load off of developers.
只是，减轻开发者的负担。

1646
01:52:48,615 --> 01:52:52,850
>> Dan, you have anything you want to add?
>> 丹，你还有什么想补充的吗？

1647
01:52:52,850 --> 01:52:56,270
>> I think a lot of it's already been said I'll just add a quick thing in there
>> 我认为已经有很多内容被提及了，我只简炼地补充一点。

1648
01:52:56,270 --> 01:52:58,520
that agree with all the comments there.
我同意所有的评论。

1649
01:52:58,520 --> 01:53:03,460
I think it's particularly interesting to see how does availability change and
我认为看到可用性如何变化特别有趣，

1650
01:53:03,460 --> 01:53:07,770
can I get a highly available network in a session less stateless environment and
我能在一个无状态的无会话环境中获得一个高可用性的网络吗，还有

1651
01:53:07,770 --> 01:53:10,160
I think that gives me a lot of
我认为这为我提供了很多

1652
01:53:10,160 --> 01:53:12,230
new opportunities I couldn't have explored before.
新的机会，这是我以前无法探索的。

1653
01:53:12,230 --> 01:53:17,050
So I, I think, a lot of interesting directions to pursue here.
所以我认为，这里有很多有趣的方向可以追求。

1654
01:53:19,320 --> 01:53:22,150
Okay, well, I don't see any other questions.
好的，我没有看到其他问题。

1655
01:53:22,150 --> 01:53:26,670
So I guess Dave had around had a follow up about
所以我猜Dave大概有后续的问题。

1656
01:53:26,670 --> 01:53:31,370
wondering whether we were requiring that all the NBN routers be physically and
想知道我们是否要求所有的NBN路由器都要进行物理上的安全保护。

1657
01:53:31,370 --> 01:53:34,820
logically secured but I don't think that I think that.
我不认为我们只是需要逻辑上的安全保护。

1658
01:53:34,820 --> 01:53:39,750
As I heard several of you talk about it, it was more, you know, how do we work
当我听你们中的一些人谈论这个问题时，更多的是，你知道，我们该如何工作

1659
01:53:39,750 --> 01:53:45,010
in current environments, and that did not seem to be the requirement.
在当前环境中，那似乎并不是要求。

1660
01:53:45,010 --> 01:53:50,100
But so anyway, I was thinking maybe we would just go ahead and wrap up and
但无论如何，我在想也许我们应该继续，然后结束这件事。

1661
01:53:50,100 --> 01:53:55,130
I don't know if a lot peace on this we still take a half hour
我不知道是否因为这件事我们还需要再花半个小时。

1662
01:53:55,130 --> 01:53:59,620
break or less Somebody want to give us some guidance?
是否有人想给我们一些指导？

1663
01:54:01,010 --> 01:54:05,666
>> Yeah, I think we were supposed to come back at 3:15.
是的，我认为我们应该在3点15分回来。

1664
01:54:05,666 --> 01:54:08,530
So we'll take it 20 minutes and
那么我们将休息20分钟。

1665
01:54:08,530 --> 01:54:14,319
come back at 3:20 >> Great.
回来的时间是3点20分 >> 很好。

1666
01:54:14,319 --> 01:54:16,539
>> All right, it was very nice meeting you guys.
>> 好的，很高兴见到你们。

1667
01:54:16,539 --> 01:54:17,759
>> All right, see you guys later.
>> 好的，稍后见。

1668
01:54:17,759 --> 01:54:18,579
>> Nice meeting you.
>> 很高兴认识你。

1669
01:54:18,579 --> 01:54:21,479
>> Thank you very much to all the panelists.
>> 非常感谢所有的小组成员。

1670
01:54:21,479 --> 01:54:22,969
>> Thank you. >> Thank you.
>> 谢谢。>> 谢谢。

1671
01:54:22,969 --> 01:54:23,469
>> Bye.
>> 再见。

1672
01:54:23,469 --> 01:54:23,969
>> Bye.
>> 再见。

