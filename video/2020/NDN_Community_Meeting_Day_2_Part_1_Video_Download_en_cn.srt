1
00:00:04,044 --> 00:00:10,260
Welcome everyone to day two of the Name Data Networking Community Meeting.
欢迎大家来到命名数据网络社区会议的第二天。

2
00:00:10,260 --> 00:00:15,280
And today's agenda starts with session three on routing and
今天的议程从第三场关于路由和转发的会议开始，由来自佛罗里达国际大学的Alex Athanasian领头。

3
00:00:15,280 --> 00:00:21,190
forwarding, headed by Alex Athanasian from Florida International University.
转发部分，由来自佛罗里达国际大学的Alex Athanasian领头。

4
00:00:21,190 --> 00:00:23,550
Alex, go ahead.
亚历克斯，请开始。

5
00:00:23,550 --> 00:00:28,240
>> Sure, sure, so in this session, we're gonna have three talks and
当然，当然，所以在这个环节中，我们将会有三场演讲。

6
00:00:28,240 --> 00:00:31,595
I guess Teng can already prepare slides for sharing.
我猜腾已经可以准备幻灯片进行分享了。

7
00:00:31,595 --> 00:00:38,740
So Teng, I think he received his Master's and PhD in Computer Science
所以腾，我认为他获得了计算机科学的硕士和博士学位。

8
00:00:38,740 --> 00:00:42,580
from University of Arizona and this year is a very challenging year.
他从亚利桑那大学获得了学位，而今年是非常具有挑战性的一年。

9
00:00:44,400 --> 00:00:49,180
His research interests focus on MDN including the protocol application,
他的研究兴趣集中在包括协议应用在内的MDN上，

10
00:00:49,180 --> 00:00:55,098
deployment design, and right now his intention lap as Postdoc researcher.
部署设计，目前他打算作为博士后研究员进入实验室。

11
00:00:55,098 --> 00:00:56,310
Tang, please.
唐，请。

12
00:00:56,310 --> 00:00:57,000
>> Hello everyone.
>> 大家好。

13
00:00:57,000 --> 00:00:58,350
This is Teng Liang.
这是滕亮。

14
00:00:58,350 --> 00:01:01,690
I'm a Postdoc researcher at Peng Cheng Lab.
我是彭城实验室的博士后研究员。

15
00:01:01,690 --> 00:01:06,111
Today I'm going to introduce our work on the Prefix Granularity Problem in
今天我将介绍我们在前缀粒度问题上的工作。

16
00:01:06,111 --> 00:01:07,734
NDN Adaptive Forwarding.
NDN自适应转发。

17
00:01:11,296 --> 00:01:15,319
So in the current IP network, the foreign plane is stateless and
所以在当前的IP网络中，外部平面是无状态的，并且

18
00:01:15,319 --> 00:01:16,870
has no adaptability.
没有适应性。

19
00:01:16,870 --> 00:01:18,660
So it's simple, it's robust.
所以它简单，它稳健。

20
00:01:20,080 --> 00:01:23,950
But this has several disadvantages.
但这有几个缺点。

21
00:01:23,950 --> 00:01:27,250
I'm going to introduce one of them here, which is Link failure.
我将在这里介绍其中一个，即链路故障。

22
00:01:28,270 --> 00:01:31,880
If there's a link failure happens in the IP network.
如果在IP网络中发生了链路故障。

23
00:01:31,880 --> 00:01:38,860
Suppose the link layer did not detect it and it's not informed them network layer.
假设链路层没有检测到并且没有通知网络层。

24
00:01:38,860 --> 00:01:43,630
So the network layer relies on the rocking protocol to detect it,
因此网络层依赖于摇晃协议来检测它，

25
00:01:43,630 --> 00:01:47,130
which is the parodic KeepAlive messages.
这就是模拟的KeepAlive消息。

26
00:01:47,130 --> 00:01:50,420
And this message can take up to tens of seconds to detect that.
这条消息可能需要长达数十秒的时间才能被检测到。

27
00:01:52,370 --> 00:01:58,026
So in NDN, the forwarding plane can have adaptability,
所以在NDN中，转发平面可以具有适应性，

28
00:01:58,026 --> 00:02:03,640
because NDN has interested exchange and it's stateful.
因为NDN具有兴趣交换，并且是有状态的。

29
00:02:03,640 --> 00:02:06,310
So, our receiving a data packet,
所以，我们接收到一个数据包，

30
00:02:06,310 --> 00:02:12,088
you can know the data retrieval measurements on that particular path.
你可以知道那条特定路径上的数据检索度量。

31
00:02:12,088 --> 00:02:19,130
So in NDN, the falling plane is able to detect the link failure much quicker.
所以在NDN中，下降平面能够更快地检测到链接故障。

32
00:02:20,720 --> 00:02:24,910
This idea was arranged on a proposed by chain and
这个想法是根据链上提出的安排进行的。

33
00:02:24,910 --> 00:02:29,700
later it was implemented in an NFT ASF strategy.
后来它被应用于NFT ASF策略中。

34
00:02:31,580 --> 00:02:36,370
So to summarize, NDN Adaptive Forwarding is able to observe past
所以总结一下，NDN自适应转发能够观察过去的情况。

35
00:02:36,370 --> 00:02:41,194
data retrieval measurements different parties,
数据检索测量不同方。

36
00:02:41,194 --> 00:02:46,226
and they can use it to improve the forwarding decisions for future interests.
他们可以利用它来改进未来兴趣的转发决策。

37
00:02:46,226 --> 00:02:50,347
Here is the processing flow for
这是处理流程。

38
00:02:50,347 --> 00:02:54,450
NDN Adaptive Forwarding.
NDN自适应转发。

39
00:02:54,450 --> 00:02:59,090
As you can see, the interest when the interest comes in,
当兴趣包进入时，

40
00:02:59,090 --> 00:03:03,380
it will be recorded in the PIT table, the Pending Interest Table and
它将被记录在PIT表中，即待定兴趣表，以及

41
00:03:03,380 --> 00:03:09,260
when the data comes back, it also will look up in the PIT table.
当数据返回时，它也会在PIT表中进行查找。

42
00:03:09,260 --> 00:03:16,540
So the states of PIT can help the forming plan to achieve adaptability.
因此，PIT的状态可以帮助形成计划以实现适应性。

43
00:03:18,800 --> 00:03:24,570
Then what is the Prefix Granularity Problem?
那么什么是前缀粒度问题？

44
00:03:24,570 --> 00:03:29,350
NDN adaptive forwarding assumes what they call Interest Routing Locality.
NDN自适应转发假设了他们所称的兴趣路由局部性。

45
00:03:29,350 --> 00:03:32,770
The assumption is that interests
假设是兴趣

46
00:03:32,770 --> 00:03:37,740
sharing a longer name prefix are more likely to take the same forwarding path.
共享较长的名称前缀的节点更有可能采取相同的转发路径。

47
00:03:37,740 --> 00:03:40,110
So therefore, they can use
因此，他们可以使用

48
00:03:41,130 --> 00:03:45,185
the path measurements to indicate future interest forwarding.
路径测量来指示未来的兴趣转发。

49
00:03:46,820 --> 00:03:51,678
For example, here are two data packets with their names such
例如，这里有两个数据包及其名称。

50
00:03:51,678 --> 00:03:54,260
as ab segment 1 and segment 2.
它们仅仅是同一个文件的两个部分，分别被命名为ab段1和段2。

51
00:03:54,260 --> 00:03:56,730
They're just two segments of the same file and
它们仅仅是同一个文件的两个部分，

52
00:03:56,730 --> 00:03:59,630
they are likely to stay in the same location.
他们很可能会留在同一个地方。

53
00:03:59,630 --> 00:04:06,380
While slash a slash c segment y is another segment of a different file.
斜线a斜线c段y是另一个不同文件的段落。

54
00:04:06,380 --> 00:04:09,260
So they are less likely to stay in the same location.
所以它们不太可能停留在同一个位置。

55
00:04:10,810 --> 00:04:15,890
Then the real problem here is which name prefix length should be used
那么这里的真正问题是应该使用哪种名称前缀长度。

56
00:04:15,890 --> 00:04:18,810
to record path performance measurements.
以记录路径性能测量数据。

57
00:04:18,810 --> 00:04:23,830
So as we can see when measured with y
所以我们可以看到，当用y进行测量时，

58
00:04:23,830 --> 00:04:27,020
interest data exchange on the full name, right?
兴趣数据交换的全名，对吧？

59
00:04:27,020 --> 00:04:30,370
And their measurements such as the round trip time,
以及它们的测量数据，比如往返时间，

60
00:04:30,370 --> 00:04:33,240
which name prefix should we put some measurements on.
我们应该将一些测量数据放在哪个名称前缀下。

61
00:04:35,320 --> 00:04:40,540
The truth of states here, if we put it on a longer name prefix, and
如果我们将其放在一个更长的名称前缀上，

62
00:04:40,540 --> 00:04:43,870
by the assumption this means we have better interest routing locality.
根据这个假设，这意味着我们有更好的兴趣路由局部性。

63
00:04:45,030 --> 00:04:51,470
However the fewer interest you will cover so it will generate a bigger FIB table.
然而，你覆盖的兴趣越少，就会生成一个更大的FIB表。

64
00:04:53,270 --> 00:04:58,254
And we'll define it as the Prefix Granularity Problem.
我们将其定义为前缀粒度问题。

65
00:04:58,254 --> 00:05:01,330
What are the Existing Solution to this problem?
现有的解决方案是什么？

66
00:05:01,330 --> 00:05:05,793
Existing designs they use a static name prefix to record measurements.
现有设计使用静态名称前缀来记录测量数据。

67
00:05:05,793 --> 00:05:14,155
For example, we have interest /edu/ua/cs/people/teng/ndex.html.
例如，我们关注的是 /edu/ua/cs/people/teng/ndex.html。

68
00:05:14,155 --> 00:05:20,853
And when we have the measurements, this full name will record the measurements,
当我们有了测量数据，这个完整的名字将会记录这些测量数据，

69
00:05:20,853 --> 00:05:27,020
our prefix and typically that's the field name/edu/ua here.
我们的前缀，通常是字段名/edu/ua 在这里。

70
00:05:27,020 --> 00:05:32,448
We record amendments and FIB name like the RTT,
我们记录修改和FIB名称，比如RTT，

71
00:05:32,448 --> 00:05:35,841
our particular next hop, and
我们特定的下一跳，以及

72
00:05:35,841 --> 00:05:40,330
then we have a ranked list of next hops.
那么我们就有了一个按优先级排序的下一跳列表。

73
00:05:43,328 --> 00:05:49,250
And this is known to have issues seeing dealing with partial network failures.
这在处理部分网络故障时众所周知会有问题。

74
00:05:49,250 --> 00:05:54,080
For example, we have a topology with two consumers
例如，我们有一个包含两个消费者的拓扑结构。

75
00:05:54,080 --> 00:05:59,022
connecting to one router, R1 another router R2,
连接到一个路由器，R1 另一个路由器 R2，

76
00:05:59,022 --> 00:06:05,220
R1 also connects to a producer repo 3, P3 with a longer delay.
R1 还连接到一个有较长延迟的生产者仓库 3，P3。

77
00:06:06,820 --> 00:06:12,042
And then to another producers P1 serving slash a slash b,
然后连接到另一个生产者 P1，服务于 /a/b，

78
00:06:12,042 --> 00:06:14,609
P2 serving slash a slash c.
P2 服务于 /a/c。

79
00:06:14,609 --> 00:06:19,591
With a routing protocols R1 aggregates the registered
R1通过路由协议汇总注册的

80
00:06:19,591 --> 00:06:23,937
prefix slash a slash b slash a slash c to slash a and
前缀 /a/b/a/c 聚合为 /a 并且

81
00:06:23,937 --> 00:06:28,930
propagate to R1 and P3 also register slash a to R1.
传播到 R1 和 P3 也会向 R1 注册 /a。

82
00:06:28,930 --> 00:06:34,285
So, at R1 it has the FIB slash a with a ranked next hops
所以，在 R1 它有一个排名的下一跳 FIB /a。

83
00:06:34,285 --> 00:06:39,653
which is R2 and P3 and R2 is preferred to R3 to P3.
R2 和 P3 是哪个，而 R2 相比于 R3 更倾向于选择 P3。

84
00:06:39,653 --> 00:06:44,511
And C1 is retrieving data under slash a slash b.
所以 C1 在 /a/b 下检索数据。

85
00:06:44,511 --> 00:06:48,860
So, there is a blue flow here between C1 and
所以这里有一个蓝色的流动在 C1 和

86
00:06:48,860 --> 00:06:55,340
P1 to retrieve data and for C2, it is retrieving data from P2.
P1 用来检索数据，而 C2 则是从 P2 检索数据。

87
00:06:55,340 --> 00:07:02,799
At some points there's a link failure between R2 and P2.
在某些时候，R2 和 P2 之间会出现链接故障。

88
00:07:02,799 --> 00:07:07,630
So, our expected behavior is R1 can forward the green
因此，我们期望的行为是 R1 能够转发绿色流量。

89
00:07:07,630 --> 00:07:12,740
flow to the lower path right to P3.
流量向下传输到 P3 的右侧路径。

90
00:07:12,740 --> 00:07:15,710
So, because there exists a path it still works.
因此，既然存在一条路径，它仍然可以工作。

91
00:07:17,110 --> 00:07:24,230
The current measurements on P2 between C2 and P2 will be recorded at slash a.
当前在C2和P2之间的P2上的测量值将被记录在/a。

92
00:07:24,230 --> 00:07:30,700
So if we update slash a to P3, R2 both C1 and
如果我们将/a更新为P3，R2既包括C1也包括

93
00:07:30,700 --> 00:07:35,580
C2 is traffic like both blue flow and the green flow will be forwarded to P3.
C2的流量，像蓝色流量和绿色流量一样，都将被转发到P3。

94
00:07:36,630 --> 00:07:40,920
So the problem is C1 will suffer from a longer path even there
所以问题是C1将会遭受更长路径的困扰。

95
00:07:40,920 --> 00:07:42,600
exists a shorter path.
存在一条更短的路径。

96
00:07:43,780 --> 00:07:48,640
But if we do not change the FIB ranking, since you cannot
但如果我们不更改FIB排名，由于你无法

97
00:07:48,640 --> 00:07:53,530
retrieve any data even there exists a problem and there exists another path.
检索任何数据即使存在问题并且存在另一条路径。

98
00:07:53,530 --> 00:07:55,730
So that's a problem that existing design.
这就是现有设计中存在的问题。

99
00:07:57,210 --> 00:08:02,000
While we simulate this scenario and the same with ASF strategy.
在我们模拟这个场景并且使用ASF策略的时候也是一样。

100
00:08:02,000 --> 00:08:10,304
And when you find that after the link failures C2 is unable to retrieve data,
当你发现在链路故障后C2无法检索数据时，

101
00:08:10,304 --> 00:08:16,205
this is because the flow keeps recording amendments.
这是因为流程不断记录修改。

102
00:08:16,205 --> 00:08:20,737
R1 that's R2 is able to retrieve data so
R1认为R2能够检索数据

103
00:08:20,737 --> 00:08:27,359
R1 always believe R3 can't retrieved with a short delay.
R1一直认为R3不能在短时间内检索到。

104
00:08:27,359 --> 00:08:33,968
And our proposal or our idea to solve this problem is Dynamic FIB Expanding.
我们提出的解决这个问题的方案或想法是动态FIB扩展。

105
00:08:33,968 --> 00:08:40,161
So if the FIB can expand the current FIB slash a to slash a,
如果FIB能将当前的FIB斜杠a扩展为斜杠a，

106
00:08:40,161 --> 00:08:46,883
slash c with a different ranking, which is P3 is preferred.
斜杠c具有不同的排名，优先级为P3。

107
00:08:49,024 --> 00:08:54,070
The green flow will choose a different path and is able to retrieve it.
绿色流程将选择一条不同的路径，并且能够检索它。

108
00:08:55,210 --> 00:08:56,490
So that solves this problem.
所以这解决了这个问题。

109
00:08:57,570 --> 00:09:01,350
And we'll also simulates this scenario in ndnSIM and
我们还将在ndnSIM中模拟这个场景，并且

110
00:09:01,350 --> 00:09:06,461
we'll assume R1 is able to find this name and expand it to a correct name.
我们将假设R1能够找到这个名称并将其扩展为一个正确的名称。

111
00:09:07,680 --> 00:09:14,705
And by doing this, C2 is able to retrieve data from P3 after the link failure.
通过这样做，C2能够在链接故障后从P3检索数据。

112
00:09:19,004 --> 00:09:23,190
So how can we do the Dynamic FIB Expanding?
那么我们如何进行动态FIB扩展呢？

113
00:09:23,190 --> 00:09:26,070
The first question is when do we trigger it?
第一个问题是我们什么时候触发它？

114
00:09:26,070 --> 00:09:31,020
So when our idea is when you have made a new
那么我们的想法是，当你做了一个新的

115
00:09:31,020 --> 00:09:36,320
ranking of next hops, you will trigger this FIB expanding.
你将触发这个FIB的扩展。

116
00:09:36,320 --> 00:09:37,490
And then how do you trigger?
那么你是如何触发的呢？

117
00:09:37,490 --> 00:09:38,480
How do you do the expanding?
你是如何进行扩展的？

118
00:09:38,480 --> 00:09:42,655
There are different strategies for example, you have this full name,
有不同的策略，例如，你有这个全名，

119
00:09:42,655 --> 00:09:47,120
you have FIB name, you can expand it to different name components, right?
你有FIB这个名字，你可以将它扩展为不同的名字组成部分，对吗？

120
00:09:48,320 --> 00:09:54,160
First, say simple like intuitive idea is to start from the FIB name and
首先，简单直观的想法是从FIB这个名字开始，然后

121
00:09:54,160 --> 00:10:00,000
expand to one level down, /edu/ua and then you add it to /index.
扩展到下一级，/edu/ua，然后将其添加到/index。

122
00:10:00,000 --> 00:10:04,010
It may not be accurate maybe because the problem may have had a longer name so
可能不够准确，因为这个问题可能有一个更长的名字。

123
00:10:04,010 --> 00:10:06,350
you keep doing this.
你一直在做这个。

124
00:10:06,350 --> 00:10:12,200
You can also do from the Bottom up strategy like you start from the index
你也可以采用自下而上的策略，比如你从索引开始。

125
00:10:12,200 --> 00:10:17,130
dot HTML like from the tense name prefix then you go one level up.
在HTML中，就像从紧凑的名称前缀开始，然后你再上升一个层级。

126
00:10:18,840 --> 00:10:23,810
In the paper, we also mentioned the Shortest Name Prefix with several ranking
在论文中，我们还提到了具有多个排名的最短名称前缀。

127
00:10:24,990 --> 00:10:31,390
acquisition which may find the optimal solution, but it also has other overheads.
采集可能会找到最优解，但它也有其他开销。

128
00:10:32,700 --> 00:10:35,530
So the next question is, we can have different strategies,
那么接下来的问题是，我们可以有不同的策略，

129
00:10:35,530 --> 00:10:36,760
how can we evaluate them.
我们如何来评估它们呢？

130
00:10:38,520 --> 00:10:43,535
In the paper, we come up with two metrics why is a number of names to be
在论文中，我们提出了两个指标，即为什么会有这么多的名字需要被

131
00:10:43,535 --> 00:10:48,440
inserted because by the doing different
因为通过不同的做法插入了

132
00:10:48,440 --> 00:10:53,455
strategies you may have different speeds to find the accurate name granularity.
通过采用不同的策略，你可能会以不同的速度找到准确的名字粒度。

133
00:10:53,455 --> 00:11:00,900
So the number of names inserted means how fast you can find it and
数字越多意味着会有更多的流量遭受次优数据包的影响。

134
00:11:00,900 --> 00:11:07,510
the more number means more traffic will suffer from sub optimal packets.
数字越多意味着会有更多的流量遭受次优数据包的影响。

135
00:11:07,510 --> 00:11:10,310
So then you can have better measurements then you will object.
那么你就能有更好的测量结果，然后你会提出异议。

136
00:11:11,670 --> 00:11:15,746
The second metric is the length of the newly inserted waves.
第二个指标是新插入波浪的长度。

137
00:11:21,995 --> 00:11:28,999
So the longer the names, the name when you do the fade the longest prefix lookup,
所以名称越长，在进行淡出时最长前缀查找的名称，

138
00:11:28,999 --> 00:11:32,920
it may have impact on the local performance.
它可能会影响到本地性能。

139
00:11:35,390 --> 00:11:39,590
We also propose the FIB Collapsing Mechanism because the dynamic FIB
我们还提出了动态FIB折叠机制，因为动态FIB。

140
00:11:39,590 --> 00:11:45,730
expanding would find that it may not do the optimal expanding and
可能会发现它可能不会进行最优的扩展，并且

141
00:11:45,730 --> 00:11:51,310
end up with a trade that can be optimized a lot.
最终得到的交易可能有很大的优化空间。

142
00:11:51,310 --> 00:11:54,340
And also we don't want the trade to be expanded forever.
因此我们也不希望交易无限制地扩张。

143
00:11:54,340 --> 00:11:59,758
So we have mechanisms to control the size of the FIB and optimize the tree.
因此我们有机制来控制FIB的大小并优化树结构。

144
00:11:59,758 --> 00:12:04,352
Last, we also optimize the NDN Adaptive Forwarding Processing.
最后，我们还优化了NDN自适应转发处理。

145
00:12:04,352 --> 00:12:09,493
The current design because each state has a reception you will update
当前设计是因为每个状态都有一个接收更新。

146
00:12:09,493 --> 00:12:14,735
the measurements and because the measurement is attached to the FIB.
所以每个数据接收我们都会进行一个FIB查找，这是因为测量结果与FIB相关联。

147
00:12:14,735 --> 00:12:18,726
So each data reception we will do a FIB lookup which is
因此，我们在每次数据接收时都会进行一次FIB查找，这是因为

148
00:12:18,726 --> 00:12:23,186
the longest name prefix match that is another overheads.
我们希望优化这个过程，而最长前缀匹配是另一个额外的开销。

149
00:12:23,186 --> 00:12:26,223
And we want to optimize this procedure and
我们希望优化这个程序。

150
00:12:26,223 --> 00:12:30,580
we do this by keeping the measurements with the PITS entry.
我们通过将测量结果与PITS条目保持一致来实现这一点。

151
00:12:31,980 --> 00:12:36,230
So most traffic that follow the best path, so the measurements will be attached to
所以大部分遵循最佳路径的流量，因此测量结果将会被附加到

152
00:12:36,230 --> 00:12:42,110
the PIT entry and this single measurements does not matter the route ranking.
这一次的测量并不影响PIT条目中的路由排名。

153
00:12:42,110 --> 00:12:46,270
So they will be removed when the PIT entry is removed.
所以当PIT条目被移除时，它们也将被移除。

154
00:12:46,270 --> 00:12:50,920
Only when the measurement is made on multiple next hops and
只有当对多个下一跳进行测量并且

155
00:12:50,920 --> 00:12:55,250
made a new ranking on the PIT lifetime.
对PIT生命周期进行了新的排名。

156
00:12:55,250 --> 00:12:59,350
This ranking will update the FIB.
这个排名将会更新FIB。

157
00:12:59,350 --> 00:13:03,280
So most updates, most measurements will be filled out.
所以大多数更新、大多数测量将会被填写完整。

158
00:13:03,280 --> 00:13:04,930
So the FIB update is limited.
所以FIB更新是有限的。

159
00:13:06,850 --> 00:13:10,760
So the summary would define the Prefix Granularity Problem.
所以总结就是定义了前缀粒度问题。

160
00:13:10,760 --> 00:13:14,687
And the key is to balance the trade-offs between interest routing locality and
而关键是要在兴趣路由的局部性和

161
00:13:14,687 --> 00:13:15,220
FIB size.
之间平衡权衡。我们的关键思想是动态扩展FIB大小。

162
00:13:15,220 --> 00:13:20,920
Our key idea is to dynamic expand FIB
我们的关键思想是动态扩展FIB大小。

163
00:13:20,920 --> 00:13:25,060
which is to disaggregating FIB names and we'll also do dynamic FIB Collapsing.
我们将进行FIB名称的解聚，并且我们还会执行动态FIB折叠。

164
00:13:26,730 --> 00:13:31,460
Another contribution is we optimize the measurement management in Data processing
我们还在数据处理中优化了测量管理。

165
00:13:31,460 --> 00:13:33,320
just to reduce the FIB lookups.
为了减少FIB查找次数。

166
00:13:35,220 --> 00:13:40,550
If you have more questions, you can find more details about this working ICN 2020.
如果您有更多问题，可以查找有关这个工作的ICN 2020的更多细节。

167
00:13:40,550 --> 00:13:43,430
Thank you.
谢谢。

168
00:13:43,430 --> 00:13:50,910
>> So the next talk is m-ASF by Muktadir Chowdhury who is a Graduate Researcher
在孟菲斯大学计算机科学系的研究生穆克塔迪尔·乔杜里将进行下一场关于m-ASF的讲座。

169
00:13:50,910 --> 00:13:54,630
in Department of Computer Science at the University of Memphis.
在孟菲斯大学计算机科学系。

170
00:13:54,630 --> 00:13:57,680
His research focus is on information accentric
他的研究重点是信息中心。

171
00:13:57,680 --> 00:14:01,190
networking since the beginning of his graduate study, and
他从研究生学习开始就一直从事网络研究，并且

172
00:14:01,190 --> 00:14:05,480
he has been actively involved in open source SDN project in NDN.
他一直积极参与NDN中的开源SDN项目。

173
00:14:05,480 --> 00:14:07,412
Has been developer, reviewer,
一直担任开发者、审查者，

174
00:14:07,412 --> 00:14:11,130
issue bug reporter of various engine related projects.
在各种引擎相关项目中担任问题报告者。

175
00:14:11,130 --> 00:14:15,700
His own research has focused on various topics related to vehicular ad hoc
他自己的研究主要集中在与车载自组织网络相关的各种主题上。

176
00:14:15,700 --> 00:14:20,710
networking over NDN as well as routing and forwarding in wireless and gain network.
网络在NDN上的联网以及在无线和增益网络中的路由和转发。

177
00:14:20,710 --> 00:14:21,780
>> Okay, yeah.
好的，是的。

178
00:14:21,780 --> 00:14:24,280
Hi everyone, my name is Muktadir Chowdhury.
大家好，我的名字是穆克塔迪尔·乔杜里。

179
00:14:24,280 --> 00:14:26,700
I'm a PhD student at University of Memphis.
我是孟菲斯大学的博士研究生。

180
00:14:26,700 --> 00:14:29,207
Today I'll be talking about m-ASF,
今天我将会讨论m-ASF，

181
00:14:29,207 --> 00:14:34,074
An Adaptive SRTT-based Forwarding Strategy for Mobile Environments.
一种适用于移动环境的自适应SRTT基础转发策略。

182
00:14:34,074 --> 00:14:36,870
Wireless networks are everywhere.
无线网络无处不在。

183
00:14:36,870 --> 00:14:41,020
And the most of the end nodes these days are mobile and wireless devices.
如今，大多数终端设备都是移动的和无线的。

184
00:14:41,020 --> 00:14:46,481
So NDN has some unique advantages over the traditional TCP/IP protocol for
因此，NDN在传统TCP/IP协议上具有一些独特的优势。

185
00:14:46,481 --> 00:14:50,720
wireless and wireless and mobile communication.
无线和移动通信。

186
00:14:50,720 --> 00:14:55,100
For example, it has like name based forwarding, pervasive in inter-caching and
例如，它具有基于名称的转发、普遍存在的内部缓存等功能，

187
00:14:55,100 --> 00:14:58,880
also it also provides the network layer security.
它还提供了网络层的安全性。

188
00:14:58,880 --> 00:15:03,243
The goal of the project is to develop a forwarding strategy for NDN wireless
该项目的目标是为NDN无线网络开发一种转发策略。

189
00:15:03,243 --> 00:15:07,745
in wireless network that can make smart forwarding decisions with minimal or
在无线网络中，可以做出最小化或智能转发决策。

190
00:15:07,745 --> 00:15:09,280
no routing information.
没有路由信息。

191
00:15:11,190 --> 00:15:16,630
Here's the little bit about the NDN's forwarding pipeline.
这里是关于NDN转发管道的一点介绍。

192
00:15:16,630 --> 00:15:23,700
Here we have the main component of NFD, which is the NDN's forwarding demo.
这里我们有NFD的主要组成部分，即NDN的转发演示。

193
00:15:23,700 --> 00:15:27,340
So, here we have like PIT, which records the outgoing interest.
那么，这里我们有类似于PIT的东西，它记录了外发的兴趣。

194
00:15:27,340 --> 00:15:33,160
And here is the Content Store which where the retrieved data is cached.
这里是内容存储，检索到的数据会被缓存在这里。

195
00:15:33,160 --> 00:15:36,770
And here we have the Strategy which makes forwarding decision based on
这里是策略模块，它基于以下内容做出转发决策。

196
00:15:36,770 --> 00:15:39,200
the information from routing and data plane.
该信息来自路由和数据平面。

197
00:15:39,200 --> 00:15:46,220
And in strategy uses FIB which maps a prefix to a list of faces.
在策略中使用FIB，它将一个前缀映射到一系列的接口上。

198
00:15:46,220 --> 00:15:51,130
And we have different strategies in NFT and one of them is
我们在NFT中有不同的策略，其中之一是

199
00:15:51,130 --> 00:15:59,452
Adaptive Smoothed Round-Trip Time based Forwarding Strategy and in short, ASF.
自适应平滑往返时延基础转发策略，简称ASF。

200
00:15:59,452 --> 00:16:04,575
So, ASF periodically a probe interfaces
ASF定期探测接口

201
00:16:04,575 --> 00:16:12,430
ASF a politically probes interfaces to get the SRTT value for each interface and,
ASF通过政治手段探测接口以获取每个接口的SRTT值，

202
00:16:12,430 --> 00:16:17,849
and then it uses those SRTT value to rank phases during the forwarding.
然后它利用这些SRTT值来对转发过程中的阶段进行排序。

203
00:16:19,880 --> 00:16:24,200
While we are designing m-ASF, we first looked at the limitation of
在我们设计m-ASF时，我们首先考察了它的局限性。

204
00:16:24,200 --> 00:16:28,740
of the ASF strategy in the wireless mobile environment.
ASF策略在无线移动环境中的一个局限性是它并不区分具有不同特征的面孔。

205
00:16:28,740 --> 00:16:32,530
One limitation is that it does not differentiate among faces with
不同特征的面孔。

206
00:16:32,530 --> 00:16:33,770
different kinds of failure.
不同种类的失败。

207
00:16:33,770 --> 00:16:37,370
For example, if two faces are timed out each treats them both the same.
例如，如果两个面孔都超时了，它会对待它们两个都一样。

208
00:16:38,690 --> 00:16:43,590
And another limitation is that while it is doing the periodic probing,
另一个限制是，当它进行周期性探测时，

209
00:16:43,590 --> 00:16:45,910
it just probes one face at a time.
它一次只探测一个方向。

210
00:16:45,910 --> 00:16:51,490
So it so so it might take ASF a long time to discover a new path.
所以，ASF可能需要很长时间才能发现一条新路径。

211
00:16:52,600 --> 00:16:56,960
So, m-ASF is basically a redesign of the ASF strategy.
所以，m-ASF基本上是ASF策略的重新设计。

212
00:16:56,960 --> 00:17:00,420
So, that it works well in the mobile wireless network.
所以，它在移动无线网络中能够很好地工作。

213
00:17:00,420 --> 00:17:07,350
And, and it can do so by doing a fine grained ranking of faces,
并且，它能够通过对面部进行细粒度的排名来实现这一点，

214
00:17:07,350 --> 00:17:11,000
probing multiple faces at a time and
在同一时间探索多个面孔并且

215
00:17:11,000 --> 00:17:14,210
exploring alternate faces whenever necessary.
在必要时探索其他面孔。

216
00:17:14,210 --> 00:17:17,140
And by using oscillation prevention,
并通过使用振荡预防措施，

217
00:17:17,140 --> 00:17:20,940
I will be talking about each one of these topic in the later slides.
我将在后面的幻灯片中讨论每一个这些话题。

218
00:17:20,940 --> 00:17:27,780
First we will talk about the fine grained face ranking of the of m-ASF.
首先我们将讨论m-ASF的细粒度面部排名问题。

219
00:17:27,780 --> 00:17:31,520
In mobile scenario, a face can fail due to various causes.
在移动场景中，面部识别可能由于各种原因而失败。

220
00:17:33,020 --> 00:17:37,280
And emissive does this fine grained ranking of faces according to their
以及发射性能根据它们的进行细粒度排名。

221
00:17:37,280 --> 00:17:43,180
statuses, as on the left hand side, we can see that on the left hand side
在左手边，我们可以看到左手边的状态。

222
00:17:43,180 --> 00:17:49,600
we can see the ranking of faces for the prefix P during forwarding.
我们可以看到在转发过程中，前缀P的面孔排名。

223
00:17:50,840 --> 00:17:54,630
And on the right hand side we can see there are an example ranking of faces for
在右手边我们可以看到一个面孔排名的例子。

224
00:17:54,630 --> 00:17:56,550
a prefix P during the probing.
在探测过程中使用一个前缀P。

225
00:17:56,550 --> 00:18:02,590
So, while we are doing the grain forwarding, we give priority
所以，在我们进行粮食转运时，我们优先

226
00:18:02,590 --> 00:18:07,530
to the faces which we already know the information about, which means that for
对于我们已经了解信息的那些面向，这意味着对于

227
00:18:07,530 --> 00:18:11,330
which we already know the certainty measurement, and while doing the probing,
我们已经知道确定性测量值，在进行探测时，

228
00:18:11,330 --> 00:18:16,040
we give priority to the face which about which we don't know anything about.
我们优先考虑那些我们一无所知的面。

229
00:18:16,040 --> 00:18:21,040
So, which for which m-ASF does not have any measurement information.
所以，对于哪些m-ASF，我们没有任何测量信息。

230
00:18:21,040 --> 00:18:24,220
And here if we look at group three and group four,
如果我们看一下第三组和第四组，

231
00:18:24,220 --> 00:18:29,490
even though both are timed out faces, but group three had
即使两者都是超时的面孔，但第三组有

232
00:18:29,490 --> 00:18:33,980
the face is in that belongs to group three has a certain value, which means that you
面孔属于第三组的具有一定的价值，这意味着你

233
00:18:33,980 --> 00:18:39,510
It used to work previously but for some reason it is not working now.
以前它能正常工作，但出于某些原因，现在它不工作了。

234
00:18:40,670 --> 00:18:45,790
So, these are the faces in group three will be given priority
所以，这些是第三组的面孔，将会被优先考虑。

235
00:18:45,790 --> 00:18:50,110
over the faces in group four while doing the forwarding.
在转发过程中，将会优先考虑第四组的面孔。

236
00:18:50,110 --> 00:18:55,290
And if two faces have the like have all the attributes are the same,
如果两张面孔的所有属性都相同，

237
00:18:55,290 --> 00:18:59,260
then we use face ID to break the tie between the faces.
那么我们就使用面部识别来分辨这些面孔之间的差异。

238
00:19:01,910 --> 00:19:06,077
Here, I talked about the exploratory mode.
在这里，我讲述了探索模式。

239
00:19:10,202 --> 00:19:15,290
Parallel talk about the exploratory mode of the m-ASF strategy.
并行讨论m-ASF策略的探索模式。

240
00:19:16,470 --> 00:19:20,880
In mobile environment faces come up and down very frequently.
在移动环境中，面孔的出现和消失非常频繁。

241
00:19:20,880 --> 00:19:26,270
So, we saw a m-ASF strategy
因此，我们看到了一个m-ASF策略。

242
00:19:26,270 --> 00:19:30,660
needs to discover working faces quickly when the primary face is not working.
m-ASF在最初的情况下进入探索模式，当需要快速发现工作面时，而主工作面不工作。

243
00:19:32,140 --> 00:19:36,600
The m-ASF enters into the exploratory mode into cases initially when
m-ASF在最初的情况下进入探索模式，当

244
00:19:36,600 --> 00:19:40,601
it does not have the information about any of the faces.
它没有任何面部信息。

245
00:19:40,601 --> 00:19:46,860
For example, this is our this is what this is what our forward forwarder is running.
例如，这是我们的转发器正在运行的样子。

246
00:19:46,860 --> 00:19:49,540
And we have our m-ASF strategy running.
我们已经开始执行我们的m-ASF策略了。

247
00:19:49,540 --> 00:19:52,290
And this is the kind of status of the of the faces.
这就是那些面孔的状态。

248
00:19:52,290 --> 00:19:54,160
So all the m-ASF knows.
所以这就是所有的m-ASF所知道的。

249
00:19:54,160 --> 00:19:56,580
It's about the prefix and the face.
它关于前缀和面孔。

250
00:19:56,580 --> 00:19:59,800
He does not know anything about the status
他对状态一无所知。

251
00:19:59,800 --> 00:20:04,310
of the faces like it does not have any information about the faces.
所以，所有的面孔就像是没有任何关于面孔的信息。

252
00:20:04,310 --> 00:20:07,178
So, all the faces do not have any information.
所以，所有的面孔都没有任何信息。

253
00:20:07,178 --> 00:20:10,571
Yeah, so I initially when he does not have, so m-ASF
是的，所以我最初当他没有，所以m-ASF~!@#$%^&*()

254
00:20:10,571 --> 00:20:15,220
does the exploration when he does not have any information about any of the faces.
在他对任何一张面孔都没有任何信息时进行探索。

255
00:20:15,220 --> 00:20:19,630
So, this is the initial phase when a misstep does not know anything about
所以，这是初始阶段，当一个误步对任何事情一无所知时。

256
00:20:19,630 --> 00:20:23,775
the faces, the only thing it knows is about about the prefix and the face.
这些面孔，它唯一知道的就是关于前缀和面孔。

257
00:20:24,870 --> 00:20:26,200
And these faces.
这些面孔。

258
00:20:26,200 --> 00:20:30,340
So, when it gives them interest, emissive gives an interest for
所以，当它给予它们利息时，发射端也会提供利息给

259
00:20:30,340 --> 00:20:35,330
a prefix under slash A, then it is going to forward the interest
一个前缀是斜线A，然后它将转发这个利息

260
00:20:35,330 --> 00:20:39,020
to all the faces it knows about, so it is going to fall out.
转发给它所知道的所有面，所以它将会散落。

261
00:20:39,020 --> 00:20:44,370
Interest to all the faces like one, two and three, then it will.
对所有的面，比如一、二和三感兴趣，那么它将会。

262
00:20:44,370 --> 00:20:47,300
Let's say that it gets the data back first from two and
那么它首先会从二号面获取数据。

263
00:20:47,300 --> 00:20:49,640
then it gets back the data from three.
然后它会从三号面获取数据。

264
00:20:49,640 --> 00:20:55,745
Then it is going to update the uncertainty value for each of these faces and
然后它将更新这些面的每一个的不确定性值。

265
00:20:55,745 --> 00:21:00,335
this is the new ranking of the faces and up and for the for the same prefix
这是面部新排名以及对于同一前缀的更新。

266
00:21:00,335 --> 00:21:04,955
the interest for the same prefix, this ranking will be used for the next time.
对于同一前缀的兴趣，这个排名将用于下一次。

267
00:21:05,975 --> 00:21:08,915
And another time when m-ASF does
另一个时候是当m-ASF做的时候。

268
00:21:08,915 --> 00:21:11,505
exploration is when the top rank faces not working.
探索是当顶级排名面临不起作用的时候。

269
00:21:11,505 --> 00:21:13,950
For example, if two does not work, in that case,
例如，如果两者都不起作用，那种情况下，

270
00:21:13,950 --> 00:21:20,770
m-ASF is going to forward interest to the top end face.
m-ASF将会把利息转发到顶端面。

271
00:21:20,770 --> 00:21:23,560
And it also is going to forward the interest to the face
并且它也将会把利息转发到该面。

272
00:21:23,560 --> 00:21:26,600
which has not been tried for a long time for the longest time.
这已经很长一段时间没有尝试过了。

273
00:21:26,600 --> 00:21:30,070
And here we'll be talking about the probing behavior of m-ASF.
这里我们将讨论m-ASF的探测行为。

274
00:21:30,070 --> 00:21:32,210
Probing is triggered by incoming interest.
探测是由传入的兴趣触发的。

275
00:21:32,210 --> 00:21:37,820
If the time, since the previous probing has exceeded T seconds,
如果自上次探测以来的时间已超过了T秒，

276
00:21:37,820 --> 00:21:42,780
so which is the probing interval and these probing interval is configurable we can
通过更改这个探测间隔，可以使探测的频率变得更频繁或者更少。

277
00:21:42,780 --> 00:21:48,900
make the probing more or less frequent by changing this probing interval.
通过更改这个探测间隔，可以使探测的频率变得更频繁或者更少。

278
00:21:48,900 --> 00:21:53,060
And while doing the probing, m-ASF probes a list of face.
在进行探测时，m-ASF会探测一系列面。

279
00:21:54,680 --> 00:21:59,390
So, it probes all the faces with no measurement information.
因此，它会探测所有没有测量信息的面。

280
00:21:59,390 --> 00:22:03,300
And it also probes the face which is highest
并且它还会探测最高的那个面。

281
00:22:03,300 --> 00:22:07,900
ranked according to the probing ranking that I talked about in my previous slide.
按照我在上一张幻灯片中提到的探测排名进行排序。

282
00:22:11,200 --> 00:22:14,090
So, let's pick up from our last example.
那么，让我们接着上一个例子继续。

283
00:22:14,090 --> 00:22:19,560
So, this is the current ranking of four of the faces for four prefix slash A.
那么，这是目前四个面孔在四前缀斜杠A的排名。

284
00:22:19,560 --> 00:22:23,260
And here we can see that a new face just came up face number four.
这里我们可以看到一个新的面孔出现了，面孔编号四。

285
00:22:23,260 --> 00:22:28,875
So, when an interest come under this prefix slash A, then m-ASF is
因此，当一个兴趣以这个前缀斜杠A为标识时，m-ASF就是

286
00:22:28,875 --> 00:22:35,290
going to forward the interest to the top ranked face which is face number two.
将要把兴趣转发到排名最高的接口，即接口编号为二。

287
00:22:38,110 --> 00:22:40,650
And also it is going to send the probe
还将发送探针。

288
00:22:40,650 --> 00:22:45,170
to the time to the both to the time dog faces and
向时间向两者向时间狗的脸。

289
00:22:45,170 --> 00:22:50,370
the new face as well so that it can learn about those faces as as soon as possible.
所以它也想要发现新的面孔，以便尽快了解这些面孔。

290
00:22:50,370 --> 00:22:54,970
So, it wants to discover about new faces and and
所以它想要发现新的面孔并且~!@#$%^&*()

291
00:22:54,970 --> 00:22:57,970
this is the mechanism for discovering the new faces by sending a probe.
这是通过发送探针来发现新面孔的机制。

292
00:22:59,370 --> 00:23:05,120
And then after that, it will get the data from let's say phase two and phase four.
然后在那之后，它将从比如第二阶段和第四阶段获取数据。

293
00:23:05,120 --> 00:23:09,330
And this will be the new ranking of faces and with their updated SRTT value, so
这将是面部的新排名以及它们更新后的SRTT值，所以

294
00:23:09,330 --> 00:23:13,940
this and this new ranking will be used to forward the next interest.
这个新排名将被用来转发下一个兴趣。

295
00:23:15,590 --> 00:23:19,670
And we also integrated, oscillation prevention mechanism to prevent
我们还整合了振荡防止机制以防止

296
00:23:21,130 --> 00:23:23,410
premature face switching.
过早的面部切换。

297
00:23:23,410 --> 00:23:24,550
If your face is working for
如果你的面部在工作。

298
00:23:24,550 --> 00:23:27,140
a threshold amount of time, we make it the primary face.
达到一定的时间阈值，我们就将其设为主要面孔。

299
00:23:28,260 --> 00:23:32,050
Lifts, that have a look at it.
看一下它的提升情况。

300
00:23:33,550 --> 00:23:39,050
In the like using the same example here, this is the current ranking of the face.
这里用一个相似的例子来说明，这是目前面部排名的情况。

301
00:23:39,050 --> 00:23:43,430
We have so, face number two is the top ranked one.
所以，面部排名中的第二号是排名最高的。

302
00:23:43,430 --> 00:23:47,192
So, when a new interest will come, so
至少我们可以假设，在这段时间内我们已经使用了二号面部作为阈值。

303
00:23:47,192 --> 00:23:51,412
at least assume that we have been using face two for the threshold amount of time.
至少我们可以假设，在这段时间内我们已经使用了二号面部作为阈值。

304
00:23:51,412 --> 00:23:54,782
So, m-ASF will make face two as the primary face.
那么，m-ASF将会把二号面部作为主要面部。

305
00:23:54,782 --> 00:24:00,950
And here we can see that the current top ranked face is also the face two.
在这里我们可以看到，目前排名第一的面部也是二号面部。

306
00:24:00,950 --> 00:24:04,411
So MSF is going to send this interest to face two.
所以MSF将会将这个兴趣发送给二号面部。

307
00:24:04,411 --> 00:24:08,840
And if for some reason the face two is not working, the consumer is going to
如果出于某种原因二号面部不工作的话，消费者将会

308
00:24:08,840 --> 00:24:12,710
get a timeout, and then it is going to retransmit the interest.
遇到超时情况，然后它会重新传输兴趣。

309
00:24:13,810 --> 00:24:17,830
And for the retransmitted interest,
对于重新传输的兴趣，

310
00:24:17,830 --> 00:24:21,838
this is the new ranking of the face here.
这是这里面孔的新排名。

311
00:24:21,838 --> 00:24:25,973
The face two will go to the bottom because it just got timed out,
面孔二将会掉到最底部，因为它刚刚被暂时移出排名。

312
00:24:25,973 --> 00:24:27,856
so its ranking will go down.
所以它的排名会下降。

313
00:24:27,856 --> 00:24:32,620
And face four will be the top ranked face now.
而现在面孔四将成为排名最高的面孔。

314
00:24:32,620 --> 00:24:36,550
So here we can see that our current primary face is still face two, but
所以我们可以看到，我们目前的主要面孔仍然是面孔二，但是

315
00:24:36,550 --> 00:24:39,790
our current top ranked face is face four.
我们目前排名最高的面孔是面孔四。

316
00:24:39,790 --> 00:24:42,960
So what MSF is going to do is that it is going to send interest
所以无国界医生组织将要做的是它将要发出利益 signals.

317
00:24:42,960 --> 00:24:44,073
to the both of them.
对他们俩。

318
00:24:44,073 --> 00:24:48,515
So we do not want to quickly switch to a face if it is working just now.
所以如果它现在正常工作，我们不想快速切换到另一张脸。

319
00:24:48,515 --> 00:24:53,236
So before switching to a face permanently,
所以在永久切换到一张脸之前，

320
00:24:53,236 --> 00:24:58,592
we want to make sure that that face is a stable one,
我们要确保那张脸是稳定的，

321
00:24:58,592 --> 00:25:03,200
only then we make that face a primary face.
只有那样我们才能把那张脸确定为主要的脸。

322
00:25:03,200 --> 00:25:05,660
For example, if face four is working for
例如，如果脸部四在工作中

323
00:25:05,660 --> 00:25:08,690
this THRESHOLD amount of time only then we make it the primary face.
这个阈值时间量只有到了我们才会将其设为主要面孔。

324
00:25:10,170 --> 00:25:14,590
So whatever I talked about, we implemented it and
所以无论我谈论了什么，我们都实施了它。

325
00:25:14,590 --> 00:25:19,128
we ran some preliminary experiment using this simple topology.
我们使用这个简单的拓扑结构进行了一些初步实验。

326
00:25:19,128 --> 00:25:26,558
And we did not run any routing here, so the cost is a one for all these links.
我们这里没有运行任何路由，所以这些链接的成本都是1。

327
00:25:26,558 --> 00:25:32,940
And this is the first level access point and
这是第一级接入点。

328
00:25:32,940 --> 00:25:37,470
this is the second level access point and we have a one consumer and two producer.
这是第二级接入点，我们有一个消费者和两个生产者。

329
00:25:37,470 --> 00:25:42,070
So the green one is the consumer, which will send one interest per second, and
所以绿色的那个是消费者，它将每秒发送一个兴趣请求。

330
00:25:42,070 --> 00:25:46,890
the purple ones are the producer, which will be serving the data.
紫色的那些是生产者，它们将提供数据。

331
00:25:48,070 --> 00:25:53,498
And here we wanted to sort of stimulate this producer mobility scenario.
我们想要在这里某种程度上模拟生产者移动性场景。

332
00:25:53,498 --> 00:25:56,355
So whenever node four is up,
所以每当节点四处于在线状态时，

333
00:25:56,355 --> 00:26:01,610
node 7 will be down, so they will alter their status like this.
节点七将会下线，因此它们将会像这样交替更改它们的状态。

334
00:26:01,610 --> 00:26:07,390
So whenever node 4 is offline, node 7 will be online and vice versa.
所以每当节点四离线时，节点七就会在线，反之亦然。

335
00:26:08,770 --> 00:26:11,820
So we wanted to see that, by similar thing.
所以我们想要看看，通过类似的事情。

336
00:26:11,820 --> 00:26:16,390
By running experiment in this scenario we wanted to see how long it takes for SF and
通过在这种情况下进行实验，我们想要看看SF需要多长时间才能够

337
00:26:16,390 --> 00:26:20,440
MSF to find a new path when a primary faces down.
MSF在主要路径出现故障时找到新路径。

338
00:26:20,440 --> 00:26:27,220
For example, when this access point, where the MSF will be running, it is using this
例如，当这个接入点正在运行MSF时，它正在使用这个

339
00:26:29,590 --> 00:26:34,490
face to reach producer four.
面对下跌时，这个策略达到生产者四号需要多长时间。

340
00:26:34,490 --> 00:26:39,419
When this face goes down, how long it takes for the strategy running in this
面对下跌时，这个策略运行在这个~!@#$%^&*()

341
00:26:39,419 --> 00:26:44,596
access point to discover that, okay, there is another face along this path.
接入点发现，好的，这条路径上还有另一个接口。

342
00:26:44,596 --> 00:26:51,591
But we wanted to see that, and we ran the experiment in this NDNSim,
但我们想要验证这一点，于是我们在这个NDNSim中运行了实验，

343
00:26:51,591 --> 00:26:58,371
and all the access point are running the ASF m-ASF and flooding.
所有接入点都运行着ASF m-ASF和泛洪协议。

344
00:26:58,371 --> 00:27:02,310
And other nodes we ran BestRoute.
我们在其他节点上运行了BestRoute协议。

345
00:27:02,310 --> 00:27:05,700
We use two probing interval, probing interval two and four.
我们使用了两个探测间隔，分别是两秒和四秒。

346
00:27:05,700 --> 00:27:09,670
And we run the experiment for 60 seconds and we run it for 10 times.
我们将实验运行60秒，并重复进行了10次。

347
00:27:09,670 --> 00:27:15,620
So here is the result for the median of ten runs.
在这里我们可以看到十次运行的中位数结果。

348
00:27:15,620 --> 00:27:20,310
Over here we can see that the result for when the probing interval is four seconds
在这里我们可以看到，当探测间隔为四秒时的结果。

349
00:27:20,310 --> 00:27:22,987
and when the probing interval is two second.
在这里我们可以看到，当探测间隔为两秒时的结果。

350
00:27:22,987 --> 00:27:27,170
And here we can see that m-ASF has higher interest count, and
在这里我们可以看到，m-ASF具有更高的兴趣计数，

351
00:27:27,170 --> 00:27:30,760
as well as the overall higher protocol overheard.
以及整体更高的协议开销。

352
00:27:30,760 --> 00:27:34,476
It is because m-ASF does this aggressive probing, so
正是因为m-ASF进行了这种积极的探测，所以

353
00:27:34,476 --> 00:27:38,610
that is why it has a higher interest count than ASF strategy.
这就是为什么它比ASF策略有更高的兴趣计数。

354
00:27:38,610 --> 00:27:43,670
But in cost of this higher interest number,
但代价是这个更高的兴趣数字，

355
00:27:43,670 --> 00:27:47,771
it can satisfy a lot of interest, so
它可以满足很多兴趣，所以

356
00:27:47,771 --> 00:27:54,493
93% of the interest are being satisfied by the m-ASF.
m-ASF满足了93%的兴趣。

357
00:27:54,493 --> 00:27:59,675
While for ASF, it is only 63% because for ASF, whenever a primary face
对于ASF来说，这一比例仅为63%，因为对ASF而言，每当一个主要面孔

358
00:27:59,675 --> 00:28:05,340
is going down, it takes a long time for ASF to find the face which is working.
在下降时，ASF需要很长时间才能找到正在工作的面孔。

359
00:28:05,340 --> 00:28:07,880
That's why it has a lot of timed out interest as well.
这也是为什么它有很多超时的兴趣。

360
00:28:07,880 --> 00:28:12,580
And we can also see the similar result in this probing interval 2, as well.
我们也可以在这个探测间隔为2的情况下看到类似的结果。

361
00:28:12,580 --> 00:28:16,910
So when the probing interval is 2, the probing is more frequent.
所以当探测间隔为2时，探测会更加频繁。

362
00:28:16,910 --> 00:28:21,297
So in that case, ASF is performing a little bit better than the previous one,
所以在那种情况下，ASF的性能比之前的稍微好一些。

363
00:28:21,297 --> 00:28:23,338
but it's still lower than m-ASF.
但它仍然低于m-ASF。

364
00:28:25,089 --> 00:28:30,063
Okay, so to conclude, and this is something we observed that ASF is
好的，所以总结一下，我们观察到的是ASF是

365
00:28:30,063 --> 00:28:33,990
not suitable for unstable and short lived link.
不适用于不稳定和寿命短的链接。

366
00:28:33,990 --> 00:28:38,410
Once a working face is down, it takes a long time to find another working face.
一旦工作面停止，找到另一个工作面需要很长时间。

367
00:28:38,410 --> 00:28:42,124
And m-ASF is showing some promising results in such scenario.
而且m-ASF在这种情况下显示出了一些有希望的结果。

368
00:28:42,124 --> 00:28:49,922
And this is sort of our to do list that we are continuing doing.
这是我们正在继续进行的待办事项清单。

369
00:28:49,922 --> 00:28:53,680
We want to run experiment for the scenario where new faces are created dynamically.
我们想要对动态创建新面孔的场景进行实验。

370
00:28:53,680 --> 00:28:57,790
So when we are running experiment,
所以当我们进行实验时，

371
00:28:57,790 --> 00:29:02,586
we want to create the faces dynamically.
我们希望能够动态地创建面孔。

372
00:29:02,586 --> 00:29:08,130
And m-ASF has this feature which probe the unprobed faces.
而且m-ASF具有探测未探测面孔的功能。

373
00:29:08,130 --> 00:29:12,861
So when we have this scenario, this feature will come in handy.
所以当我们遇到这种情况时，这个功能将会非常有用。

374
00:29:12,861 --> 00:29:17,803
And since the industry does not support
而且由于行业不支持

375
00:29:17,803 --> 00:29:21,853
to write this kind of scenario.
编写这种情景剧本。

376
00:29:21,853 --> 00:29:26,174
So to create this kind of scenario where we can create faces dynamically, so
我们可以动态创建面孔的这种情景。

377
00:29:26,174 --> 00:29:29,290
we are fixing minindn-wifi to support this feature.
我们正在修复minindn-wifi以支持这个功能。

378
00:29:30,380 --> 00:29:31,850
And we also want to run experiment,
我们还想进行实验，

379
00:29:31,850 --> 00:29:35,220
to test the oscillation prevention mechanism as well.
我们还想测试振荡防止机制。

380
00:29:35,220 --> 00:29:38,280
And eventually we want to match the code with ASF codebase.
最终我们希望将代码与ASF代码库匹配。

381
00:29:38,280 --> 00:29:38,780
Thank you.
谢谢。

382
00:29:40,230 --> 00:29:44,018
>> Okay, thank you very much, I don't think we have that much time for
好的，非常感谢，我认为我们没有那么多时间去

383
00:29:44,018 --> 00:29:44,888
questioning.
质疑。

384
00:29:44,888 --> 00:29:48,896
So Junxiao is a guest researcher at National Institute of Standards and
Technology, 高级网络技术部门。

385
00:29:48,896 --> 00:29:52,186
Technology, Advanced Network Technologies division.
技术，高级网络技术部门。

386
00:29:52,186 --> 00:29:54,013
He's a core developer and
他是一名核心开发者并且

387
00:29:54,013 --> 00:29:58,338
has been developing NDN network forwarding since 2013.
自2013年以来一直在开发NDN网络转发。

388
00:29:58,338 --> 00:30:00,309
So please.
那么请。

389
00:30:00,309 --> 00:30:04,230
>> Hi, my name is Junxiao Shi, today I'm presenting on the NTP DK and
嗨，我的名字是石俊霄，今天我要介绍的是NTP DK。

390
00:30:04,230 --> 00:30:08,304
Dr forwarding at 100 gigabits per second on commodity hardware.
Dr以100千兆比特每秒的速度在普通硬件上进行转发。

391
00:30:14,243 --> 00:30:17,660
NDN-DPDK is a high-speed NDN forwarder.
NDN-DPDK是一个高速NDN转发器。

392
00:30:17,660 --> 00:30:22,510
Our performance goal is to achieve line speed on commodity hardware, and
我们的性能目标是在普通硬件上实现线速。

393
00:30:22,510 --> 00:30:25,360
we are pursuing two avenues to get there.
我们正在通过两条途径来实现这一目标。

394
00:30:25,360 --> 00:30:28,730
First, we want to adopt a better algorithms and
首先，我们想采用更好的算法和

395
00:30:28,730 --> 00:30:32,540
data structures as presented in last two years.
数据结构，正如过去两年中所介绍的。

396
00:30:32,540 --> 00:30:38,110
We adopted a two stage longest prefix match algorithm in the FIB.
我们在FIB中采用了两阶段最长前缀匹配算法。

397
00:30:38,110 --> 00:30:39,952
We also combine the PIT and
我们还将PIT和

398
00:30:39,952 --> 00:30:45,110
the CS into a single hash table called the PIT-CS Composite Table.
我们将PIT和CS合并成一个名为PIT-CS复合表的单一哈希表。

399
00:30:45,110 --> 00:30:49,560
The second avenue is to reduce overhead in the library and the kernel.
第二种方法是减少库和内核中的开销。

400
00:30:49,560 --> 00:30:54,250
On this side, we use data plane development kit or DPDK.
在这一方面，我们使用数据平面开发套件，即DPDK。

401
00:30:54,250 --> 00:30:58,894
It provides us with a multi-threaded architecture as well as efficient
它为我们提供了一个多线程架构以及高效的

402
00:30:58,894 --> 00:31:01,960
memory allocation using hugepage memory.
它还使用了空间以太网适配器驱动程序。它使用了基于大页内存的内存分配。

403
00:31:01,960 --> 00:31:05,300
It also has the use of space ethernet adapter drivers.
它还使用了空间以太网适配器驱动程序。

404
00:31:08,630 --> 00:31:13,080
This is the architecture diagrams of the NDN-DPDK forwarder.
这是NDN-DPDK转发器的架构图。

405
00:31:13,080 --> 00:31:18,810
It has the issue box is a thread, they are divided into three stages,
它具有问题箱是一个线程，它们分为三个阶段，

406
00:31:18,810 --> 00:31:21,870
the input stage, the forwarding stage, and the output stage.
输入阶段、转发阶段和输出阶段。

407
00:31:23,470 --> 00:31:27,136
Packets are received in the input stage from the ethernet adapters.
数据包从以太网适配器在输入阶段被接收。

408
00:31:27,136 --> 00:31:32,044
The input threader will decode the packet and then dispatch packet to one
输入线程将解码数据包，然后将数据包分派给一个

409
00:31:32,044 --> 00:31:36,320
of the forwarding thread, according to their names.
转发线程会根据它们的名称进行转发。

410
00:31:36,320 --> 00:31:40,672
The forwarding thread has the usual PIT+CS and the FIB,
转发线程具有常见的PIT+CS和FIB，

411
00:31:40,672 --> 00:31:43,490
as well as the forwarding strategy.
以及转发策略。

412
00:31:43,490 --> 00:31:46,930
Then the packet goes out on the output thread.
然后数据包在输出线程上发送出去。

413
00:31:46,930 --> 00:31:50,345
>> Since last year we have improved the packet decoder and
自去年以来，我们已经改进了数据包解码器和

414
00:31:50,345 --> 00:31:53,320
reassembler in the input threads.
在输入线程中重新组装了数据。

415
00:31:53,320 --> 00:31:56,880
We restructured the FIB to better support for forwarding hints.
我们重构了FIB以更好地支持转发提示。

416
00:31:56,880 --> 00:31:59,910
We added some CoDel queues in the forwarding thread,
我们在转发线程中增加了一些CoDel队列，

417
00:31:59,910 --> 00:32:01,690
which I will describe later.
我稍后会详细描述。

418
00:32:01,690 --> 00:32:06,060
We also expanded the platform support for the forward software.
我们还扩展了前向软件的平台支持。

419
00:32:07,790 --> 00:32:13,230
So regarding the codec Oculus CoDel is active queue management technique.
所以关于编解码器，Oculus CoDel 是一种主动队列管理技术。

420
00:32:13,230 --> 00:32:17,600
Usually it is used on the egress side because the link bandwidth is
通常它被用在出口端，因为链路带宽是

421
00:32:17,600 --> 00:32:22,380
a bottleneck but for Andy and dpdk We added a CoDeL
一个瓶颈，但对于Andy和dpdk，我们增加了一个CoDeL。

422
00:32:22,380 --> 00:32:27,120
cues on the Ingress side of the forwarding thread because our initial benchmark
表明在转发线程的入口侧存在线索，因为我们的初始基准测试。

423
00:32:27,120 --> 00:32:32,050
indicates the bottleneck is in the forward insert or not the link bandwidth.
表明瓶颈是否在前向插入处，而不是链路带宽。

424
00:32:32,050 --> 00:32:36,868
We give each packet type a separate queue and then we prioritize data packet
我们为每种数据包类型分配了单独的队列，然后我们优先处理数据包。

425
00:32:36,868 --> 00:32:41,608
over interest because in Dropping a data packet was a waste of bandwidth,
因为丢弃数据包是对带宽的浪费，已经花费在处理兴趣上的服务器CPU资源全都浪费了。

426
00:32:41,608 --> 00:32:46,356
wasted server CPU resources all ready spent on processing the interest.
已经花费在处理兴趣上的服务器CPU资源全都浪费了。

427
00:32:47,820 --> 00:32:52,388
We achieved that we lose this power rotation session by decoding
我们实现了通过解码而失去这一动力循环的目的。

428
00:32:52,388 --> 00:32:55,870
filler number of interest Zen data in each loop.
在每个循环中填充感兴趣的Zen数据。

429
00:32:56,970 --> 00:33:00,490
Apart from CODEL We also added a cubic like
除了CODEL之外，我们还添加了一个类似于立方体的功能。

430
00:33:00,490 --> 00:33:03,920
condition control algorithm in the traffic generator.
在流量生成器中的条件控制算法。

431
00:33:03,920 --> 00:33:08,520
So if consumer will react will react to congestion marks inserted
所以如果消费者会对插入的拥塞标记做出反应

432
00:33:08,520 --> 00:33:09,860
by the CODEL cues.
那么它也会根据CODEL算法的提示进行重传。

433
00:33:11,120 --> 00:33:15,550
It will also retransmitted base retransmitted unsatisfied the interests of
它也会根据不满足的兴趣进行重传。

434
00:33:15,550 --> 00:33:23,690
based on RTO We use suppose codel and the cubicle in our benchmarks.
基于RTO，我们在基准测试中使用了Codel和Cubicle。

435
00:33:23,690 --> 00:33:27,190
So next I will present some of the benchmark results.
接下来我将展示一些基准测试结果。

436
00:33:27,190 --> 00:33:30,740
We did our benchmark using this simple three node topology,
我们使用这个简单的三节点拓扑进行了我们的基准测试，

437
00:33:31,810 --> 00:33:37,310
there are two traffic generators suppose they are both the consumer and
两个流量生成器，假设它们都是消费者和

438
00:33:37,310 --> 00:33:41,010
the producer and they say fetch data from each other through the forwarder
生产者，它们通过转发器相互获取数据。

439
00:33:42,030 --> 00:33:46,130
As the forwarder machine has to enter cascadilla CPU and
由于转发器机器需要进入Cascadilla CPU和

440
00:33:46,130 --> 00:33:51,319
a number of mellanox ConnectX5 100 ge ethernet adapters.
一些Mellanox ConnectX-5 100Gb以太网适配器。

441
00:33:52,920 --> 00:33:57,450
The big news is we made it to 100 gigabits per second.
我们的大新闻是我们达到了每秒100吉比特的速度。

442
00:33:57,450 --> 00:34:01,400
To have this number we measure the aggregated data forwarding rate of
为了得到这个数字，我们测量了

443
00:34:01,400 --> 00:34:02,710
from the consumers.
从消费者那里。

444
00:34:02,710 --> 00:34:08,400
This metric only counts the data packet and it does not contain retransmissions.
这个指标仅计算数据包，不包括重传。

445
00:34:08,400 --> 00:34:11,160
Then we multiply that by the payload the size.
然后我们将其乘以数据有效载荷的大小。

446
00:34:11,160 --> 00:34:13,560
The payload size is only the data payload.
数据有效载荷的大小仅指数据本身的有效载荷。

447
00:34:13,560 --> 00:34:18,993
It does not contain the name of Those signatures with a forwarding
它不包含带有转发的那些签名的名称。

448
00:34:18,993 --> 00:34:24,446
thread we get up to 108 gigabytes per second aggregate good put
因此，我们开始更改许多转发线程，以便我们得到的线程速度高达每秒108吉比特的总吞吐量。

449
00:34:27,071 --> 00:34:30,600
So we started changing a number of forwarding threads.
因此，我们开始更改许多转发线程。

450
00:34:30,600 --> 00:34:34,890
The expectation is if we have more fallenness rather we should get a higher
预期是如果我们有更多的下降，我们应该获得更高的

451
00:34:34,890 --> 00:34:40,000
data forwarding rate in PPS but So results are shows if we have 1,
但是结果显示，如果我们有1，

452
00:34:40,000 --> 00:34:44,560
2 or 4 for the thread there is linear growth on the data forwarding rate but
当线程数为2或4时，数据转发率呈线性增长，但是

453
00:34:44,560 --> 00:34:47,540
when we have more than 8 forwarding thread, so
当线程数超过8个时，所以

454
00:34:47,540 --> 00:34:50,920
data forwarding rate plateaus at 8 forward in thread.
数据转发率在线程转发数达到8时趋于平稳。

455
00:34:50,920 --> 00:34:52,990
There is no more improvement.
性能不再提升。

456
00:34:52,990 --> 00:34:58,400
Our analysis indicates is a bottleneck who would should be in the input thread and
我们的分析表明，瓶颈可能存在于输入线程中，应该是在那里。

457
00:34:58,400 --> 00:34:58,990
the current or
当前的或者

458
00:34:58,990 --> 00:35:04,660
forward architecture only allows one input straight up per face in our future work or
前瞻性架构在我们未来的工作中，每个界面只允许一个直接的输入。

459
00:35:04,660 --> 00:35:11,100
try to improve this We also measured the effect of non local memory access.
我们还测量了非本地内存访问的影响。

460
00:35:11,100 --> 00:35:16,560
As I mentioned earlier, our bank our forward machine has two CPUs.
正如我之前提到的，我们银行的前向机器有两个CPU。

461
00:35:16,560 --> 00:35:20,480
In modern server architecture issue CPU along with some memory and
在现代服务器架构中，CPU以及一些内存和~!@#$%^&*()

462
00:35:20,480 --> 00:35:25,620
the PCI devices, such as ethernet adapters belong to undo my socket.
PCI设备，例如以太网适配器属于我的插槽。

463
00:35:25,620 --> 00:35:28,540
That we can even have both
我们甚至可以拥有两者

464
00:35:28,540 --> 00:35:32,970
of these adapters on same side of the machine, same number socket.
所以流量只会流向另一个插座。

465
00:35:32,970 --> 00:35:35,700
So traffic just goes to one more socket.
所以流量只会流向另一个插座。

466
00:35:35,700 --> 00:35:38,870
Or we can arrange them on different number socket,
或者我们可以将它们安排在不同编号的插座上，

467
00:35:38,870 --> 00:35:42,680
and all the traffic can need to cross the number socket boundary.
跨越编号插座边界的所有流量可能会需要。

468
00:35:42,680 --> 00:35:47,010
Crossing number socket boundary incurs higher memory access latency.
跨越编号插座边界会导致更高的内存访问延迟。

469
00:35:47,010 --> 00:35:52,140
Our benchmarking indicates if a trafficker has to cross the new masahito boundaries
我们的基准测试表明，如果贩运者必须越过新的masahito边界，

470
00:35:52,140 --> 00:35:55,970
and data forwarding rate will be up to 20% slower.
他们的数据转发速率将会慢至多20%。

471
00:35:58,520 --> 00:36:01,645
So our main feature works Is the hardware acceleration
因此，我们的主要特性是硬件加速。

472
00:36:01,645 --> 00:36:04,965
The goal is to remove the input thread bottleneck.
目标是消除输入线程的瓶颈。

473
00:36:04,965 --> 00:36:09,075
But before I describe the hardware Let me introduce the how the input thread
但在我描述硬件之前，让我先介绍输入线程的工作方式。

474
00:36:09,075 --> 00:36:10,745
apparently works.
显然是有效的。

475
00:36:10,745 --> 00:36:15,160
So, input thread will receive packets We receive Ethernet frames the frames or
所以，输入线程将接收数据包，我们接收以夜网框架，框架或

476
00:36:15,160 --> 00:36:18,980
network interface hardware IDs and it was decoded the packet.
网络接口硬件ID已经解码了数据包。

477
00:36:18,980 --> 00:36:24,770
If the packet is an DLP fragment it will perform reassembly as necessary.
如果数据包是DLP片段，将根据需要进行重组。

478
00:36:24,770 --> 00:36:28,140
Sent depending on whether the packet type in layer three if it
根据第三层的数据包类型来确定发送时机。

479
00:36:28,140 --> 00:36:30,880
interests it what dispatchers are interested in
兴趣是调度器所关注的。

480
00:36:30,880 --> 00:36:35,400
By Name prefix is what takes us name prefix compute a hash.
按名称前缀计算哈希是我们所使用的名称前缀。

481
00:36:35,400 --> 00:36:40,270
Then look up the name this patch tables the MDT entry indicates
然后查找此补丁中的名称，MDT条目显示了该名称。

482
00:36:40,270 --> 00:36:43,310
which forward is ready to show the process in a packet.
哪一个转发准备好在数据包中显示该过程。

483
00:36:43,310 --> 00:36:51,080
If the packet is a data or necco packet is for correctness, so data must be
如果数据包是数据或necco包是为了正确性，那么数据必须是

484
00:36:51,080 --> 00:36:56,200
dispatched to the same point in thread the data handles a corresponding interest to.
分派到线程中相应感兴趣的同一点来处理数据。

485
00:36:56,200 --> 00:37:01,040
To achieve that we have hopper by hopper Hydra code is a PID token.
为了实现这一点，我们有跳频器，Hydra代码是一个PID令牌。

486
00:37:01,040 --> 00:37:05,770
Pitaka is carried in every packet and this option will return the same PID token.
每个数据包都携带有Pitaka，而这个选项将返回相同的PID令牌。

487
00:37:05,770 --> 00:37:09,810
All the data packet shows the input thread can just look at for
所有数据包显示输入线程可以直接查看。

488
00:37:09,810 --> 00:37:13,430
the thread ID in the PE token to determine where to dispatch.
线程ID在PE令牌中用以确定派送的目的地。

489
00:37:14,560 --> 00:37:18,890
The goal of a hardware solution is to implement
硬件解决方案的目标是实现

490
00:37:18,890 --> 00:37:23,670
most of the inputs read in hardware, so that the hardware can dispatch move
大多数输入在硬件中读取，以便硬件可以分派移动

491
00:37:23,670 --> 00:37:26,520
most packets directly to the forwarding threats.
大多数数据包直接转发到前线威胁。

492
00:37:28,160 --> 00:37:31,870
In the hardware there is the modern
在硬件中有现代的

493
00:37:31,870 --> 00:37:36,020
ethernet adapters support a feature called the receive side scaling.
以太网适配器支持一种称为接收端缩放的功能。

494
00:37:36,020 --> 00:37:41,060
First is the Ethernet Adapter has a number of received queues.
以太网适配器具有多个接收队列。

495
00:37:41,060 --> 00:37:43,870
For each queue, we can configure which process,
对于每个队列，我们可以配置哪个进程，

496
00:37:43,870 --> 00:37:48,650
which thread to process the packet received on this queue.
可以处理在此队列上接收到的数据包的哪个线程。

497
00:37:48,650 --> 00:37:51,330
We can also set a memory pool,
我们还可以设置一个内存池，

498
00:37:51,330 --> 00:37:55,970
where the hardware is going to store the packet and ideally it should be
在硬件将要存储数据包的地方，理想情况下它应该是

499
00:37:55,970 --> 00:38:00,340
on the same NUMA socket as a threat of processing the packet.
在与处理数据包的线程相同的NUMA插槽上。

500
00:38:00,340 --> 00:38:04,310
Then incoming frames are matched against some receive side scaling rules and
然后，传入的帧将根据一些接收端扩展规则进行匹配，

501
00:38:04,310 --> 00:38:05,580
the dispatch to the queue.
分发到队列。

502
00:38:05,580 --> 00:38:09,090
Each rule looks like this if field F has value beats and
如果字段 F 的值为 beats，则每条规则看起来像这样。

503
00:38:09,090 --> 00:38:13,470
dispatch to this queue, so how the world will match according to those rules and
分发到这个队列，所以世界将如何根据这些规则进行匹配，

504
00:38:13,470 --> 00:38:17,040
if a packet doesn't match any rules a packet gets dropped.
如果一个数据包不符合任何规则，那么这个数据包就会被丢弃。

505
00:38:17,040 --> 00:38:21,340
But, what I can use in field F was a choice on limited
但是，在字段F中我能使用的选项是有限的。

506
00:38:21,340 --> 00:38:23,130
by hardware functionality.
通过硬件功能。

507
00:38:23,130 --> 00:38:27,850
For the Connect x five, it only supported fields in Ethernet IP, UDP or
对于ConnectX-5，它仅支持Ethernet、IP、UDP或

508
00:38:27,850 --> 00:38:31,350
TCP headers, but some other cards, some intercaste.
对于TCP头部，但是其他一些卡片，一些跨类。

509
00:38:31,350 --> 00:38:35,010
They support the bytes at offset IE generic field but
他们支持偏移量IE通用字段处的字节，但是

510
00:38:35,010 --> 00:38:37,070
also also restriction in that area.
也也在那个区域有限制。

511
00:38:39,270 --> 00:38:43,990
But now we look back on the input thread architecture whether we can do it with
但现在我们回头来看输入线程架构，我们是否能够实现它。

512
00:38:43,990 --> 00:38:47,000
the receive side scaling for reassembly feature.
接收端缩放以用于重组功能。

513
00:38:47,000 --> 00:38:48,300
No, we cannot.
不，我们不能。

514
00:38:48,300 --> 00:38:52,500
It is infeasible with RSS, but unfortunately not every
它对于RSS来说是不可行的，但不幸的是并非每一个

515
00:38:52,500 --> 00:38:56,349
packet needs reassembly and hopefully only a small number of them needs them.
数据包需要重组，希望只有少数几个需要这样做。

516
00:38:57,420 --> 00:39:02,510
For the data and equities patient we can use a few ISS rules to
对于数据和权益的耐心，我们可以使用一些ISS规则来进行操作。

517
00:39:02,510 --> 00:39:08,010
try to match a bias at offset I and normally it should be able
尝试在偏移量I处匹配一个偏差值，通常情况下，它应该能够做到这一点。

518
00:39:08,010 --> 00:39:12,640
to find the where's that afford insert ID byte is and the dispatcher using ISS.
寻找提供插入ID字节的位置，以及使用ISS的调度器。

519
00:39:14,380 --> 00:39:17,910
For the interest this poetry is also infeasible with
对于这首诗，它也是不可行的。

520
00:39:17,910 --> 00:39:20,870
RSS to start with the name has the variable less.
RSS起初的名称变量较少。

521
00:39:23,450 --> 00:39:27,695
So our question is can case on the adapter understand the name?
所以我们的问题是，适配器上的机壳是否能识别名称？

522
00:39:27,695 --> 00:39:33,085
ICN'16 paper and NDN-NIC-basic Filtering on Network Interface Card.
ICN'16论文和NDN-NIC-网络接口卡上的基本过滤功能。

523
00:39:33,085 --> 00:39:36,725
It's it'll propose to compute a Hash of the names and
它将提出计算名称的哈希值。

524
00:39:36,725 --> 00:39:41,390
passes through a BloomFilter to determine whether to accept the packet.
通过布隆过滤器来确定是否接受该数据包。

525
00:39:41,390 --> 00:39:44,840
The requirements on the NTP DK interest expression is similar,
NTP DK兴趣表达的要求也是类似的，

526
00:39:44,840 --> 00:39:49,750
we want to compute the hash of the name prefix look up as the NDT understands, and
我们想要计算名称前缀查找的哈希值，正如NDT所理解的那样，以及

527
00:39:49,750 --> 00:39:52,120
the dispatcher according to that cue, but
调度员根据那个提示，但是

528
00:39:52,120 --> 00:39:56,540
a big difference is on the Nikkor paper only has Python simulation.
Nikkor论文中的一个重大差异是它仅包含了Python模拟。

529
00:39:56,540 --> 00:39:59,440
Well, we need a real hardware implementation.
嗯，我们需要一个真正的硬件实现。

530
00:39:59,440 --> 00:40:04,850
In industries there are a few ways to do such a hardware implementation,
在工业领域，有几种方法可以进行这样的硬件实现，

531
00:40:04,850 --> 00:40:08,775
including extended Berkeley packet filter.
包括扩展的伯克利包过滤器。

532
00:40:08,775 --> 00:40:12,150
P4 programming language and the FPGA hardware logic.
P4编程语言和FPGA硬件逻辑。

533
00:40:13,240 --> 00:40:14,610
And this is where you come in.
这就是你需要参与的地方。

534
00:40:14,610 --> 00:40:16,520
We are seeking collaborations.
我们正在寻求合作。

535
00:40:16,520 --> 00:40:21,190
If you know how to do hardware implementation, as well as if you
如果您知道如何进行硬件实现，以及如果您

536
00:40:21,190 --> 00:40:24,990
are good at algorithm modelling especially in congestion control.
擅长算法建模，特别是在拥塞控制方面。

537
00:40:24,990 --> 00:40:29,070
And the disk-based caching policy, which I presented last year.
我去年提出的基于磁盘的缓存策略。

538
00:40:29,070 --> 00:40:31,750
If you have access to some real traffic trace,
如果您能够获取一些真实的流量追踪数据，

539
00:40:31,750 --> 00:40:36,030
to improve forward evaluation, please get in touch.
为了改进前瞻性评估，请取得联系。

540
00:40:36,030 --> 00:40:40,180
We are also looking for collaboration application use case,
我们也在寻找合作应用案例。

541
00:40:40,180 --> 00:40:46,410
data intensive science is already using on the NDN-PDK as presented yesterday.
数据密集型科学已经在使用昨天介绍的NDN-PDK。

542
00:40:46,410 --> 00:40:51,060
Also live video streaming will be suitable for high performance forwarding.
同样，实时视频流也适用于高性能转发。

543
00:40:51,060 --> 00:40:54,280
And if you'll maintain some of the libraries,
如果您将维护部分库，

544
00:40:54,280 --> 00:40:58,350
we can help you to get an dntp dk support into your libraries.
我们可以帮助您在您的库中获得dntp dk的支持。

545
00:40:58,350 --> 00:41:02,310
These are some of the library already supported on the NDN-DPDK and
这些是已经在NDN-DPDK上得到支持的一些库。

546
00:41:02,310 --> 00:41:03,808
your library can be the next one.
您的库可以是下一个。

547
00:41:03,808 --> 00:41:08,790
The NDN-DPDK codebse is open source on GitHub
NDN-DPDK 代码库在 GitHub 上是开源的。

548
00:41:08,790 --> 00:41:12,300
is a codebase that contains a forward as a traffic generator
是一个包含转发器作为流量生成器的代码库。

549
00:41:12,300 --> 00:41:16,910
graph qL based management tools as well as one of the libraries, our code library.
图形QL基于管理工具以及其中一个库，我们的代码库。

550
00:41:18,860 --> 00:41:23,410
And as I mentioned earlier and the NDN-DPDK has expanded the platform support
正如我之前提到的，NDN-DPDK已经扩展了平台支持。

551
00:41:23,410 --> 00:41:25,198
as a blue and cyan using philosophia.
我们支持Ubuntu、Debian、CentOS操作系统，我们增加了对...的支持。

552
00:41:25,198 --> 00:41:30,030
We support ubuntu, Debian CentOS operating systems we added support for
我们支持Ubuntu、Debian、CentOS操作系统，我们增加了对...的支持。

553
00:41:30,030 --> 00:41:31,460
VirtualBox virtualization.
我们增加了对VirtualBox虚拟化的支持。

554
00:41:31,460 --> 00:41:36,792
We are also looking at a KVM, we tested on inter ethernet adapters.
我们还在考虑KVM，我们在inter以太网适配器上进行了测试。

555
00:41:36,792 --> 00:41:38,920
We support VLAN tagging now, and
我们现在支持VLAN标记，以及

556
00:41:38,920 --> 00:41:41,760
we're looking at the tunnel support in the future.
我们将来会考虑支持隧道功能。

557
00:41:41,760 --> 00:41:44,120
And we added the local application support,
我们还增加了本地应用程序支持，

558
00:41:44,120 --> 00:41:48,910
which means you can run your application on the same node as a forwarder.
这意味着你可以在同一个节点上作为转发器运行你的应用程序。

559
00:41:48,910 --> 00:41:52,300
And it is the highly efficient to share the memory transporter
并且这是一种高效的共享内存传输器。

560
00:41:52,300 --> 00:41:53,945
between the application and the forwarder.
在应用程序和转发器之间。

561
00:41:53,945 --> 00:41:58,080
We also reduce the minimum system requirements so that it
我们还降低了最低系统要求，以便它

562
00:41:58,080 --> 00:42:02,979
would be possible to run the NDN-DPDK on a laptop such as you have 4 cores or
可以在如您所拥有的四核处理器的笔记本电脑上运行NDN-DPDK。

563
00:42:02,979 --> 00:42:05,264
8 gigabytes of memory or possibly less.
8GB或可能更少的内存。

564
00:42:05,264 --> 00:42:09,170
And remember there was a presentation on fabric testbed
还记得有一次关于fabric测试平台的演讲。

565
00:42:09,170 --> 00:42:13,710
an NDN was selected as one of the science drivers on fabric.
NDN被选为fabric上的一个科学驱动项目。

566
00:42:13,710 --> 00:42:18,550
So we are looking at developing our NDN-DPDK experiment profile.
所以我们正在考虑开发我们的NDN-DPDK实验配置文件。

567
00:42:18,550 --> 00:42:23,290
With that, you will be able to launch a network of NDN-DPDK, forwarders,
因此，您将能够启动一个由NDN-DPDK、转发器和多个位置的流量生成器组成的网络。

568
00:42:23,290 --> 00:42:26,980
and traffic generators across multiple locations.
和多个位置的流量生成器。

569
00:42:26,980 --> 00:42:30,690
Then you can customize your applications, routing protocols,
然后您可以自定义您的应用程序、路由协议、

570
00:42:30,690 --> 00:42:34,000
forwarding strategies and attaching algorithms.
转发策略和附加算法。

571
00:42:34,000 --> 00:42:36,540
And using the tools provided by February,
使用二月提供的工具，

572
00:42:36,540 --> 00:42:40,439
you can collect the measurements such as a packet timing and a statistics.
您可以收集诸如数据包时序和统计信息等测量数据。

573
00:42:41,640 --> 00:42:46,750
And finally, we our paper is published in ACM ICN 2020 conference.
最后，我们的论文在ACM ICN 2020会议上发表了。

574
00:42:46,750 --> 00:42:51,240
And please attend, and the NDN-NPDK presentation at that conference, which we
请务必参加在那次会议上我们举行的NDN-NPDK报告。

575
00:42:51,240 --> 00:42:56,480
will have cover more content of the completed design as well as benchmarks.
将会涵盖已完成设计的更多内容以及基准测试。

576
00:42:56,480 --> 00:42:56,980
Thank you.
谢谢。

577
00:42:58,848 --> 00:43:02,780
>> Good you Junsho, and I think there's a few questions in the chat.
好的，俊硕，我想聊天里有几个问题。

578
00:43:02,780 --> 00:43:05,040
So, the first one from Ilia,
所以，第一个问题来自伊利亚，

579
00:43:05,040 --> 00:43:09,291
he's asking what is the per core performance of NDN- DPDK folder.
他在问NDN-DPDK文件夹的每核性能是什么。

580
00:43:10,710 --> 00:43:15,120
Is it a common metric gigabit per second core per core?
这是一个常用的每秒千兆位每核的性能指标吗？

581
00:43:16,730 --> 00:43:23,950
>> This is 108 Gbps if you divided by a transaction is 8 forwarding thread.
>> 如果你把这个数字除以一个事务是8个转发线程，那么这是108 Gbps。

582
00:43:23,950 --> 00:43:28,893
But we also have inputs and outputs rate of one per face.
但我们每个面也有一个输入和输出的速率。

583
00:43:31,840 --> 00:43:36,980
But if you only look at one core, well forward in thread then you
但如果你只关注一个核心，那么往前看线程的话，那么你

584
00:43:36,980 --> 00:43:43,180
get about just below 0.24 million packets per second.
大约每秒能处理24万个数据包。

585
00:43:43,180 --> 00:43:46,590
But again, this is just copying the forwarding thread, since input and
但这只是复制转发线程，因为输入和

586
00:43:46,590 --> 00:43:47,440
output are fixed.
输出是固定的。

587
00:43:49,850 --> 00:43:53,190
>> Okay. And the other question is deduced from
>> 好的。另一个问题是推导自

588
00:43:53,190 --> 00:43:57,710
question, did you do the study on the impact on
问题是，你是否进行了关于影响的研究？

589
00:43:57,710 --> 00:44:01,300
the size of the field on the performance of the forwarder?
你是否研究了场地大小对转运车性能的影响？

590
00:44:01,300 --> 00:44:05,650
>> Yes, so we did this, a fiver, we got up to a million entrance, and
是的，所以我们这样做了，一个五元的，我们达到了一百万的入场。

591
00:44:05,650 --> 00:44:08,360
it has very little impact.
它的影响非常小。

592
00:44:08,360 --> 00:44:12,740
I will present that in the ACM as I don't have time in this one.
我将在ACM会议上展示它，因为这次我没有时间。

593
00:44:14,320 --> 00:44:19,340
>> And the last question from LAN is what exactly in UK actually,
>> 来自LAN的最后一个问题是，实际上在英国是什么情况？

594
00:44:19,340 --> 00:44:23,770
I had the same question when you're talking about the library support
我也有同样的疑问，当你谈论到库支持的时候。

595
00:44:23,770 --> 00:44:27,230
defending DPDK, what exactly you actually meant by that?
作为一个库的支持者，Wes，你所说的“捍卫DPDK”具体是指什么？

596
00:44:27,230 --> 00:44:29,190
>> As a library supporter, Wes,
作为一个库的支持者，Wes，

597
00:44:29,190 --> 00:44:34,750
he is efficient transport like a shared memory, or at least Ethernet.
他就像共享内存或者至少是以太网那样的高效传输工具。

598
00:44:34,750 --> 00:44:36,770
You need that there you need a pet token.
你需要那个，你需要一个宠物令牌。

599
00:44:37,800 --> 00:44:44,680
Page token has to be, because a producer said it has to return the page token.
页面令牌是必须的，因为生产者说它必须返回页面令牌。

600
00:44:44,680 --> 00:44:47,540
And the Python NDN, it does not have it.
而Python的NDN，它并没有这个功能。

601
00:44:47,540 --> 00:44:51,340
And there's a third one, is the management integration.
而第三个，则是管理集成。

602
00:44:51,340 --> 00:44:54,190
Since NDN-DPDK the case, the management is GraphQL.
由于是NDN-DPDK的情况，管理使用的是GraphQL。

603
00:44:54,190 --> 00:45:00,000
And it currently leads over HTTP, but in the future, it will be over NDN.
目前它是通过HTTP进行的，但将来将通过NDN进行。

604
00:45:00,000 --> 00:45:03,840
But to say Python do it while you're gonna have this management, so
但是要说在你进行这种管理时用Python来做，所以

605
00:45:03,840 --> 00:45:06,542
it's not going to be able to read your sub prefix.
它将无法读取你的子前缀。

606
00:45:06,542 --> 00:45:13,831
>> [BLANK_AUDIO ] Okay so, we will be out of time behind schedule for
好的，所以我们会因为时间不足而落后于进度。

607
00:45:13,831 --> 00:45:18,690
a few seconds so given back floor to >> The previous
之前的会议刚刚结束，所以现在是开始小组讨论的时间。

608
00:45:18,690 --> 00:45:24,540
session just ended, so it's time to start the panel.
会议刚刚结束，所以现在是开始小组讨论的时间。

609
00:45:24,540 --> 00:45:27,020
And I'll hand it to you, so go ahead please.
我会交给你来主持，请开始吧。

610
00:45:29,470 --> 00:45:32,850
>> Okay, so I don't see the audience but
>> 好的，虽然我看不到观众，但是

611
00:45:32,850 --> 00:45:35,926
I would like to welcome everybody to the, >> Recording is on,
我想欢迎大家来到，>>好的，录音开始了，

612
00:45:35,926 --> 00:45:38,780
>> Okay, recording is on.
>> 好的，录音开始了。

613
00:45:38,780 --> 00:45:41,060
Welcome everybody to that panel.
欢迎大家来到这个小组讨论会。

614
00:45:41,060 --> 00:45:44,640
And I was asked to host that panel.
我被邀请主持那个小组讨论。

615
00:45:45,840 --> 00:45:51,340
I think it goes back to 2009 when I organized the net Ark symposium,
我认为这要追溯到2009年，当时我组织了Net Ark研讨会，

616
00:45:51,340 --> 00:45:56,060
40 years internet where van Jacobson presented
40年互联网会议上，Jacob Van Jacobson进行了演讲。

617
00:45:56,060 --> 00:45:59,220
first approaches to the MDN or CCN.
首次尝试MDN或CCN。

618
00:45:59,220 --> 00:46:00,430
At that time.
在那个时候。

619
00:46:00,430 --> 00:46:06,350
was then permitted to have a sabbatical at his place at Xerox PARC at that time.
后来他在施乐帕洛阿尔托研究中心（Xerox PARC）的那个时候，我被允许去那里休假。

620
00:46:06,350 --> 00:46:11,070
And then later at UCLA also hosted that so I'm very grateful that I
后来在加州大学洛杉矶分校（UCLA）也举办了那个活动，我非常感激我能够参与其中。

621
00:46:11,070 --> 00:46:16,280
could be part of that community and I'm very happy to moderate that panel.
能够成为那个社区的一部分，我很高兴能主持那个小组讨论。

622
00:46:16,280 --> 00:46:18,940
If he could quickly look at the next slide.
如果他能快速地看一下下一张幻灯片。

623
00:46:18,940 --> 00:46:23,350
The participants are really
参与者确实是

624
00:46:23,350 --> 00:46:29,410
the selection of people having worked at the core of NDN over the last 10 years.
选择在过去10年中一直在NDN核心工作的人员。

625
00:46:29,410 --> 00:46:32,200
Here, they are sorted in alphabetic order.
这里，他们按字母顺序排列。

626
00:46:32,200 --> 00:46:37,190
We will keep that order except for Van Jacobson, which I think is
我们将保持那个顺序，除了Van Jacobson，我认为

627
00:46:37,190 --> 00:46:42,870
excellent to start the several rounds, and if we can quickly go to the next slide.
很好地开始了几轮讨论，如果我们能快速地进入下一张幻灯片。

628
00:46:46,300 --> 00:46:51,200
The first round would be on the highlights what were the highlights of the last
第一轮将讨论亮点，上一次的亮点是什么？

629
00:46:51,200 --> 00:46:52,290
10 years.
10年。

630
00:46:52,290 --> 00:46:58,610
We would like to hear what people Would show to the world what was achieved there.
我们想听听人们想向世界展示在那里取得了什么成就。

631
00:46:58,610 --> 00:47:00,220
What are the important things and
~!@#$%^&*()

632
00:47:00,220 --> 00:47:03,590
I think there are different perspective from the people we will have on the panel.
我认为我们小组中的人会有不同的观点。

633
00:47:03,590 --> 00:47:06,790
The second round is then on where things could be improved.
第二轮则是关于哪些方面可以改进的讨论。

634
00:47:08,950 --> 00:47:12,880
Things about looking back, which could have been made other wise or
关于回顾的事情，本可以有其他的选择或者做法。

635
00:47:12,880 --> 00:47:15,700
where we still have to do some work.
我们仍然需要做一些工作。

636
00:47:15,700 --> 00:47:19,860
And I think is round 3 is about the closing statement
我认为第三轮大概是关于结束陈述的。

637
00:47:19,860 --> 00:47:24,690
by trying to assess where things are right now and how it could continue later on.
通过尝试评估目前的情况以及之后如何持续发展。

638
00:47:25,820 --> 00:47:29,130
So with the next slide, I think we can also start.
所以接下来的幻灯片，我认为我们也可以开始了。

639
00:47:30,180 --> 00:47:34,300
I asked everybody to quickly give roles or
我要求每个人迅速分配角色或者

640
00:47:34,300 --> 00:47:38,550
what was their participation in the project?
他们在项目中的参与情况是怎样的？

641
00:47:38,550 --> 00:47:41,130
And you will see that and if we go to the next slide,
如果我们继续看下一张幻灯片，你会看到。

642
00:47:41,130 --> 00:47:44,170
I think it's Van Jacobson part.
我认为那是关于Van Jacobson的部分。

643
00:47:44,170 --> 00:47:45,730
I hope he can jump in.
我希望他能加入进来。

644
00:47:45,730 --> 00:47:48,950
I added the spiritus rector role.
我增加了精神指导者的角色。

645
00:47:48,950 --> 00:47:53,530
He was really the engine and the motor and the initiator of the whole thing.
他真的是整个事情的发动机、动力源和发起人。

646
00:47:53,530 --> 00:47:56,370
He asked me to put researcher as a role and
他让我把研究员作为一个角色来安排。

647
00:47:56,370 --> 00:47:59,180
that will then come up in the next slides.
那将会在接下来的幻灯片中出现。

648
00:47:59,180 --> 00:48:01,130
So, we are now in round 1.
所以，我们现在在第一轮。

649
00:48:01,130 --> 00:48:05,640
We have only a few minutes, two, three minutes, per person to make a point.
我们每个人只有几分钟的时间，两三分钟，来阐述一个观点。

650
00:48:05,640 --> 00:48:10,820
And then we will have a discussion around where all the eight panelists
然后我们将围绕所有八位小组成员展开讨论。

651
00:48:10,820 --> 00:48:14,460
can complement, can comment and
可以补充，可以评论。

652
00:48:14,460 --> 00:48:19,050
trying to round up that first and what are the highlights of the last 10 years.
试图总结那第一个，以及过去十年的重点。

653
00:48:19,050 --> 00:48:22,930
And Jacobson, if I may invite you to take over the floor.
雅各布森，如果可以的话，我想请你接管发言权。

654
00:48:25,210 --> 00:48:28,734
>> And thank you Christian.
>> 谢谢你，克里斯蒂安。

655
00:48:28,734 --> 00:48:34,500
I guess, the slide, pretty much as point when we were
我猜，这张幻灯片，在我们讨论的时候，基本上是重点。

656
00:48:34,500 --> 00:48:40,400
working on multicast backbone, the backbone and the audio and
致力于多播主干网络的开发，这个主干网络以及音频和

657
00:48:40,400 --> 00:48:45,680
video and interaction tools that became the basis of the RTP protocol.
视频和交互工具成为了RTP协议的基础。

658
00:48:46,710 --> 00:48:52,300
It got really obvious that the fundamental
它变得非常明显，基础的

659
00:48:52,300 --> 00:48:56,890
model of IP was really limited if it was a phone call between
模型的IP如果只是一次电话通话，那它的确是非常有限的，

660
00:48:56,890 --> 00:49:01,560
endpoints and the goal of the network was to provide a bit pipe.
端点之间的网络目标是提供一个比特流管道。

661
00:49:02,750 --> 00:49:09,626
That's a communication model that has a name is the Shannow-Weaver model.
这种通信模型被称为香农-韦弗模型。

662
00:49:09,626 --> 00:49:13,910
It's sort of the lowest common denominator of communication and
它可以说是通信的最小公分母。

663
00:49:13,910 --> 00:49:16,940
his main virtue is it's really easy to monetize.
它的主要优点是非常容易变现。

664
00:49:16,940 --> 00:49:20,800
You can sell the endpoints.
你可以出售这些端点。

665
00:49:20,800 --> 00:49:23,600
The endpoint identity the device that creates the endpoints,
端点识别创建这些端点的设备。

666
00:49:23,600 --> 00:49:28,246
the wire between them, lots of ways to make money which means it
它们之间的连线，意味着有很多赚钱的方式。

667
00:49:28,246 --> 00:49:32,030
lots of ways to be successful in the world, which it is.
世界上有很多成功的方式，确实如此。

668
00:49:33,130 --> 00:49:38,680
But if you look at the developments
但如果你观察这些发展情况

669
00:49:40,660 --> 00:49:48,220
as a species we've had about 50,000 years to evolve the way that we use language,
作为一个物种，我们已经有大约50,000年的时间来发展我们使用语言的方式，

670
00:49:48,220 --> 00:49:52,970
the communication models between people and groups of people and how
人与人之间以及群体之间的沟通模式以及如何

671
00:49:53,990 --> 00:49:58,820
to adapt them to make the communication effective to accomplish objectives.
将它们适应性地调整以使沟通有效地实现目标。

672
00:49:58,820 --> 00:50:03,910
And none of that is in the Shannow-Weaver model and
这些都不包含在Shannow-Weaver模型中。

673
00:50:03,910 --> 00:50:08,120
it becomes really obvious when you tried to use radios as radios.
它变得非常明显，当你尝试将无线电作为无线电使用时。

674
00:50:08,120 --> 00:50:12,630
Use the fact that things can be said that everybody can hear so
利用这个事实：可以说出每个人都能听到的话。

675
00:50:12,630 --> 00:50:17,190
that you can get some situation awareness you can get agreement a lot easier
利用这个特点，你可以更容易地获得情况意识，也可以更容易地达成共识。

676
00:50:17,190 --> 00:50:19,210
using the broadcast nature, the channel.
利用广播的特性，频道。

677
00:50:21,060 --> 00:50:24,010
There are richer communication models.
有更丰富的沟通模式。

678
00:50:24,010 --> 00:50:27,490
The current gold standard is pardon ones.
当前的黄金标准是宽恕别人。

679
00:50:27,490 --> 00:50:29,300
It includes broadcast channels,
它包括广播频道，

680
00:50:29,300 --> 00:50:35,140
multi party communication, asymmetric roles, parties doing different things.
多方通信，角色不对称，各方执行不同的活动。

681
00:50:35,140 --> 00:50:38,330
There are communication acts, individual units,
存在沟通行为，个体单元，

682
00:50:38,330 --> 00:50:41,380
speech acts that mediate the communication.
在沟通中介导的言语行为。

683
00:50:41,380 --> 00:50:45,640
You can tell whether they succeed or fail there some reciprocity so
你可以判断他们是成功还是失败，那里存在一些互惠性。

684
00:50:45,640 --> 00:50:50,930
you can adapt if your apps aren't working, the communication
你可以适应你的应用程序不工作的情况，通过沟通。

685
00:50:50,930 --> 00:50:55,270
system knows enough to say okay well that didn't work let me try this.
系统知道足够的信息来说好吧，那个不行，让我试试这个。

686
00:50:55,270 --> 00:50:59,370
I wondered if it was possible to
我想知道这是否可能。

687
00:50:59,370 --> 00:51:03,790
make a low level communication framework, something at the level of IP and
制作一个低级别的通信框架，类似于IP层级的东西，并且

688
00:51:03,790 --> 00:51:08,450
the simplicity of IP that would implement a framework like farlands.
实现一个类似于farlands的框架的IP的简易性。

689
00:51:10,330 --> 00:51:15,140
And I think that that goal largely succeeded that Indian
我认为那个目标在很大程度上已经实现了，那个印度的。

690
00:51:15,140 --> 00:51:19,410
is such a framework it can implement much richer communication models.
这样的框架可以实施更丰富的通信模型。

691
00:51:20,840 --> 00:51:24,940
The next section I'll say it can but largely it doesn't.
下一部分我会说它可以实现，但大多数情况下它并没有实现。

692
00:51:26,320 --> 00:51:29,800
Which is sad, I believe.
这是令人遗憾的，我认为。

693
00:51:30,850 --> 00:51:31,440
I'll stop there.
我就说到这里。

694
00:51:33,030 --> 00:51:34,320
>> Okay, great.
好的，很好。

695
00:51:34,320 --> 00:51:35,790
That keeps us in time.
这让我们保持在时间上。

696
00:51:35,790 --> 00:51:40,010
So you really present it in an evolutionary trajectory and
所以你真的是按照一条进化轨迹来展现它的。

697
00:51:40,010 --> 00:51:41,670
I like very much that.
我非常喜欢那个。

698
00:51:41,670 --> 00:51:44,370
Could we please have the next slide?
我们可以看下一张幻灯片吗？

699
00:51:44,370 --> 00:51:46,870
And I think it's Jeff.
我认为是Jeff。

700
00:51:46,870 --> 00:51:50,380
He did give me a title I now assigned one to him.
他确实给了我一个头衔，现在我也给他指定了一个。

701
00:51:50,380 --> 00:51:54,170
I think it was really driving NDN for use cases and library movements.
我认为这确实是在推动NDN的使用案例和图书馆运动。

702
00:51:54,170 --> 00:51:57,800
And Jeff, please if you want to take the floor.
杰夫，请你如果想发言的话。

703
00:51:57,800 --> 00:51:58,870
>> Sure. Thanks, Christian.
当然。谢谢你，克里斯蒂安。

704
00:52:00,690 --> 00:52:05,175
So I've been primarily focused on trying to build applications over
所以我主要专注于尝试构建应用程序来覆盖

705
00:52:05,175 --> 00:52:08,410
NDN largely now in media but
NDN在媒体上现在主要是

706
00:52:08,410 --> 00:52:13,660
looking at mobile health in the building information systems and someone.
研究建筑信息系统中的移动健康以及相关人员。

707
00:52:13,660 --> 00:52:18,660
And I think the thing that I responded to in your question was actually primarily
我认为我对你问题的回应主要是

708
00:52:18,660 --> 00:52:22,130
emotional at this point was some of the highlights were really
在这一点上我感到情绪化是因为其中的一些亮点确实是

709
00:52:22,130 --> 00:52:27,660
seeing in hackathons and implementation focused efforts where there were specific
在黑客松和以实施为中心的努力中看到的，那里有特定的

710
00:52:27,660 --> 00:52:32,850
problems and clever ideas on the table.
问题和巧妙的想法摆在桌面上。

711
00:52:32,850 --> 00:52:37,640
I thought there were great solutions that were coming from students and researchers.
我认为来自学生和研究人员的解决方案非常出色。

712
00:52:37,640 --> 00:52:43,260
And I think vehicular networking and IoT hacks of various kinds,
我认为车辆网络和各种物联网黑客攻击，

713
00:52:43,260 --> 00:52:47,120
different approaches to media, certainly, those were all things that were very
不同的媒体方法，当然，这些都是非常

714
00:52:47,120 --> 00:52:51,810
exciting and I think prompted from the shift and thinking that man talked about.
令人兴奋的是，我认为这种转变源于那个人谈到的思维转变。

715
00:52:51,810 --> 00:52:57,300
And I think the exciting thing for me was to project forward how those
而我认为令人兴奋的是，去展望那些想法在未来如何发展。

716
00:52:57,300 --> 00:53:04,910
smaller clever ideas would look in a more widely deployed Indian context where
你所拥有的那种适应困难沟通环境的健壮性。

717
00:53:04,910 --> 00:53:09,950
you had sort of the robustness to difficult communication environments.
你拥有在困难沟通环境中的那种健壮性。

718
00:53:09,950 --> 00:53:12,280
You have more intrinsic security.
你拥有更多内在的安全性。

719
00:53:12,280 --> 00:53:15,250
And so it wasn't just the hacks themselves, but sort of the context in
它不仅仅是黑客攻击本身，还有某种程度上的情境背景。

720
00:53:15,250 --> 00:53:20,550
which they could be deployed using the NDN based approach and so
它们可以使用基于NDN的方法进行部署，因此。

721
00:53:20,550 --> 00:53:23,650
that I think are some of the most, those are some of the most exciting things.
我认为那些是一些最令人兴奋的事情。

722
00:53:23,650 --> 00:53:27,520
It's kind of combination of clever reformulations
这是一种巧妙的重组合。

723
00:53:27,520 --> 00:53:32,120
of applications with the potential for the architecture to support
应用程序具有潜力，架构为此提供支持。

724
00:53:32,120 --> 00:53:36,570
a more robust environment in which those things are would ultimately be operating.
一个更加健壮的环境，这些事物最终将在其中运作。

725
00:53:36,570 --> 00:53:40,030
The analogy for me is to Robert venturi,
这对我来说类似于罗伯特·文图里的比喻。

726
00:53:40,030 --> 00:53:42,970
his way of talking about architecture in the late 70s.
他在70年代末谈论建筑的方式。

727
00:53:42,970 --> 00:53:46,240
And this notion of moving away from
这种远离的观念。

728
00:53:46,240 --> 00:53:51,340
thinking of NDN in a quote unquote pure way, which was.
思考NDN以一种所谓的纯粹方式，这是。

729
00:53:51,340 --> 00:53:56,800
It is very important maybe from the architectural perspective and
它可能从架构的角度来看非常重要，并且

730
00:53:56,800 --> 00:54:00,000
certainly from the perspective of the research team, but
当然，从研究团队的角度来看，但是

731
00:54:00,000 --> 00:54:05,660
to a deployment that's much more sort of messy and vital in accommodating existing
部署得更加凌乱而有活力，以适应现有的情况。

732
00:54:05,660 --> 00:54:10,621
communication mechanisms above underneath below and something that is really for
适应上方、下方和某些真正用于的通信机制。

733
00:54:10,621 --> 00:54:15,960
accommodating the current tools that we have the current
适应我们目前拥有的工具。

734
00:54:15,960 --> 00:54:21,550
communication infrastructure but taking advantage of these, the benefits and
通信基础设施，但利用这些，好处和……

735
00:54:21,550 --> 00:54:26,290
properties of in the end that I think we are, continue to be excited about.
最终，我认为我们对其特性仍然感到兴奋。

736
00:54:26,290 --> 00:54:30,328
And so, I think just to to conclude this quickly,
因此，我认为只需简短地总结一下，

737
00:54:30,328 --> 00:54:35,330
I wanna maybe suggests that it would be nice to have more of that
我想或许建议说，拥有更多那样的东西会是件好事。

738
00:54:35,330 --> 00:54:40,332
kind of experimentation that crosses the the research purity
实验的种类跨越了研究的纯粹性。

739
00:54:40,332 --> 00:54:45,717
of the architectural goals with really the objective of of solving
建筑目标的确立，其真正的目的是解决问题。

740
00:54:45,717 --> 00:54:51,419
small interesting problems and then getting them out into the world.
小而有趣的问题，然后将它们带入世界。

741
00:54:56,347 --> 00:54:59,483
>> Great so pragmatics is really important and
那么语用学确实非常重要并且

742
00:54:59,483 --> 00:55:04,000
that is what you should explore explored and applied.
这正是你应该探索、已经探索并应用的内容。

743
00:55:04,000 --> 00:55:06,200
Thanks a lot for your statement.
非常感谢你的发言。

744
00:55:06,200 --> 00:55:09,110
And we will continue with Dave Clark.
我们将继续听Dave Clark的发言。

745
00:55:09,110 --> 00:55:09,710
Next slide.
下一张幻灯片。

746
00:55:11,750 --> 00:55:16,240
He sent an email with some quite some text I extracted a few of the sentences I
他发送了一封包含相当多文字的电子邮件，我提取了其中的几个句子。

747
00:55:16,240 --> 00:55:20,080
hope that is fitting what he wants to tell here
希望这正合他想要在这里表达的意思。

748
00:55:20,080 --> 00:55:23,280
that Dave Clark as one of the original designers of the internet, but
他还参与了国际汽联项目，考察了不同的提案。

749
00:55:23,280 --> 00:55:28,280
he was also involved in the FIA project looking at the different proposals.
他还参与了国际汽联项目，考察了不同的提案。

750
00:55:28,280 --> 00:55:29,110
Please stay safe.
请保持安全。

751
00:55:37,411 --> 00:55:44,240
Is there anything in the mornings?
早上有什么事吗？

752
00:55:44,240 --> 00:55:48,510
>> Yes, I think the point I started with was the first point on your slide.
是的，我认为我开始讨论的是你幻灯片上的第一个要点。

753
00:55:49,960 --> 00:55:52,390
Van really put forward a bold idea here.
范在这里确实提出了一个大胆的想法。

754
00:55:52,390 --> 00:55:57,710
It was a rethinking of the the entire framing of how you should build a network.
这是对如何构建网络的整个框架进行了重新思考。

755
00:55:58,760 --> 00:56:02,200
And I think most of the fire proposals were somewhat incremental and
我认为大多数关于防火提案都是有些渐进性的。

756
00:56:02,200 --> 00:56:03,900
this one was.
而这个提案则不同，它非常戏剧化。

757
00:56:03,900 --> 00:56:05,125
Incredibly dramatic.
非常戏剧化。

758
00:56:05,125 --> 00:56:06,253
It was a tremendous change.
这是一个巨大的变化。

759
00:56:06,253 --> 00:56:08,713
Now, understand I'm sort of commenting as an outsider here.
现在，请理解我在这里有点像是一个局外人在评论。

760
00:56:08,713 --> 00:56:12,669
I was looking across the projects.
我在浏览各个项目。

761
00:56:12,669 --> 00:56:13,970
I wasn't deeply involved in this.
我没有深入参与这个。

762
00:56:13,970 --> 00:56:18,322
I went to a lot of the Indian workshops, which were quite exciting.
我参加了很多印度工作坊，那真是相当令人兴奋。

763
00:56:18,322 --> 00:56:22,303
And I had some very interesting conversations with Van, which were,
我和Van进行了一些非常有趣的对话，这些对话是——

764
00:56:22,303 --> 00:56:25,621
I think, useful to me in extracting sort of insight here.
我认为，在这里提取某种洞察时，这对我很有帮助。

765
00:56:25,621 --> 00:56:29,600
But I guess what I would say over 10 years is that what
但我想我过去十年想说的是，什么

766
00:56:29,600 --> 00:56:34,215
you have to do when you have a new idea like this is play with it.
你必须做的，当你有了一个这样的新想法时，就是去尝试和玩味它。

767
00:56:34,215 --> 00:56:37,972
And come to understand what its real power is and what its strengths are and
并且去理解它的真正力量是什么，它的优势是什么。

768
00:56:37,972 --> 00:56:39,311
what its weaknesses are.
它的弱点是什么。

769
00:56:39,311 --> 00:56:42,129
You have to figure out what the scope of the problem is.
你得弄清楚问题的范围是什么。

770
00:56:42,129 --> 00:56:45,565
Is the sweet spot for this something the size of the Internet?
这个的最佳点是互联网那么大的规模吗？

771
00:56:45,565 --> 00:56:47,876
Is the sweet spot for this something smaller?
这个的最佳点是更小的规模吗？

772
00:56:47,876 --> 00:56:52,982
In terms of applications, as Jeff said, you need to throw use cases
在应用方面，正如杰夫所说，你需要投入使用案例。

773
00:56:52,982 --> 00:56:57,653
at it to see what it actually works and you need to play with it.
你需要实际操作一下，看看它究竟有什么用，你需要去尝试它。

774
00:56:57,653 --> 00:56:59,857
You need to figure out what it's good for.
你需要弄清楚它到底有什么用。

775
00:56:59,857 --> 00:57:02,847
I mean, when Teflon was discovered, nobody knew what it was.
我的意思是，当特氟龙被发现时，没人知道它是什么。

776
00:57:02,847 --> 00:57:04,406
That was a mistake.
那是一个错误。

777
00:57:04,406 --> 00:57:08,890
But when GPS was put forward, the original designers completely didn't describe
但是当GPS提出的时候，原始设计者完全没有描述

778
00:57:08,890 --> 00:57:11,588
what it was actually gonna turn out to be good for.
它实际上会被证明有什么好处。

779
00:57:11,588 --> 00:57:15,994
And I'd make three comments in here.
我想在这里提三点评论。

780
00:57:15,994 --> 00:57:22,865
I think Van thought that content distribution might be a use case for this.
我认为范可能认为内容分发可能是这个的一个用例。

781
00:57:22,865 --> 00:57:25,360
And I think content distribution is a use case, but
我也认为内容分发是一个用例，但是

782
00:57:25,360 --> 00:57:27,340
the Internet does it pretty well today.
互联网今天已经做得相当不错了。

783
00:57:27,340 --> 00:57:30,760
So in fact, that's not a compelling reason for a transition.
所以事实上，那并不是一个令人信服的过渡理由。

784
00:57:31,800 --> 00:57:37,400
I think a case where the thinking in this project evolved in
我认为在这个项目中思维演变的一个情况是

785
00:57:37,400 --> 00:57:42,540
a very powerful way was understanding how to integrate security into this system.
一个非常有效的方法是理解如何将安全性整合到这个系统中。

786
00:57:42,540 --> 00:57:46,310
I think that we're still fighting the issues of security on the Internet.
我认为我们仍然在互联网上与安全问题作斗争。

787
00:57:46,310 --> 00:57:50,286
And I think this provided an interesting way to rethink security in
我认为这提供了一个重新思考安全问题的有趣方式。

788
00:57:50,286 --> 00:57:51,565
a very powerful way.
一个非常有力的方式。

789
00:57:51,565 --> 00:57:56,308
I think one of the interesting points, which may not have been obvious in
我认为其中一个有趣的点是，这可能并不明显，在

790
00:57:56,308 --> 00:58:00,838
the beginning, computer scientists like to polish the data plane.
起初，计算机科学家喜欢优化数据平面。

791
00:58:00,838 --> 00:58:02,727
And Van talked about the data plane.
范谈到了数据平面。

792
00:58:02,727 --> 00:58:06,892
But in fact, I think one of the interesting points about NDN is its
但实际上，我认为NDN有趣的一点是它的

793
00:58:06,892 --> 00:58:10,394
ability to improve and simplify network management.
能力在于改善和简化网络管理。

794
00:58:10,394 --> 00:58:13,999
And people say, management, that's such a boring topic.
人们说，管理，这真是一个无聊的话题。

795
00:58:13,999 --> 00:58:17,639
God, if I write a proposal on management, it won't get funded and
天哪，如果我写一份关于管理的提案，它不会得到资助，而且我的职业生涯就会结束。

796
00:58:17,639 --> 00:58:18,946
my career will be over.
我的职业生涯就会结束。

797
00:58:18,946 --> 00:58:22,188
And the answer is yeah, but that's one of the things we really struggle with in
而答案是是的，但这正是我们真正难以应对的问题之一。

798
00:58:22,188 --> 00:58:25,290
the Internet and I think there's some real potential there.
互联网上确实存在一些真正的潜力。

799
00:58:25,290 --> 00:58:28,640
I'll come back to that, but we're trying to be quick here.
我会回到这个话题，但我们现在要快点。

800
00:58:28,640 --> 00:58:29,826
So that'll do for me.
那我就到此为止了。

801
00:58:32,760 --> 00:58:35,280
>> Thank you, Dave.
>> 谢谢你，戴夫。

802
00:58:35,280 --> 00:58:40,580
Let's immediately jump to the next presentation then from Darleen.
那么我们立刻开始听Darleen的下一个报告。

803
00:58:40,580 --> 00:58:48,270
Please, Darleen >> All right, can you hear me now?
请，Darleen >> 好的，你现在能听见我说话了吗？

804
00:58:49,900 --> 00:58:51,010
>> Yes.
>> 是的。

805
00:58:51,010 --> 00:58:51,990
>> Okay, thank you.
>> 好的，谢谢。

806
00:58:51,990 --> 00:58:57,510
So I thought you might be interested in hearing a little bit about the NDN
所以我想你可能会对听一听关于NDN的一些情况感兴趣。

807
00:58:57,510 --> 00:59:02,600
history from my perspective inside NSF and what happened that I thought was right.
从我在NSF内部的角度来看的历史，以及我认为是正确发生的事情。

808
00:59:02,600 --> 00:59:08,130
So to be successful in research is to move it from product to use technology,
要在研究中取得成功就是要把它从产品转化为使用技术，

809
00:59:09,230 --> 00:59:11,420
which I think is desired by the NDN community.
我认为这是NDN社区所期望的。

810
00:59:11,420 --> 00:59:12,950
You must start with a great idea,
你必须从一个伟大的想法开始，

811
00:59:12,950 --> 00:59:15,980
which I think is the very hardest part of research.
我认为这是研究中最艰难的部分。

812
00:59:15,980 --> 00:59:20,780
And Van Jacobson's content-centric networking that he started at PARC and
他在PARC开始的以内容为中心的网络，范·雅各布森的这一理念，

813
00:59:20,780 --> 00:59:23,770
transitioned to NDN is such an idea.
转变到NDN（命名数据网络）正是这样一个理念。

814
00:59:23,770 --> 00:59:27,490
But you also have to have funding to go from an idea to a use technology.
但你也必须有资金才能把一个想法变成可使用的技术。

815
00:59:27,490 --> 00:59:31,471
And it was only serendipitous that such funding was possible.
而且能够获得这样的资金纯属巧合。

816
00:59:31,471 --> 00:59:36,160
And in the end only happened because there was confluence of interests at NSF.
而最终这一切之所以发生，是因为在美国国家科学基金会（NSF）内部存在着利益的汇合。

817
00:59:36,160 --> 00:59:39,089
We had a top executive who wanted to leave a legacy,
我们有一位高层主管想要留下一份遗产，

818
00:59:39,089 --> 00:59:44,014
a program director who wanted to research infrastructure and something to run on it.
一位项目主管想要研究基础设施及其上运行的东西。

819
00:59:44,014 --> 00:59:47,007
And another program director, which has happened to me,
另一位项目主管，这种情况也发生在我身上，

820
00:59:47,007 --> 00:59:48,784
who wanted a new secure Internet.
他想要一个新的安全互联网。

821
00:59:48,784 --> 00:59:52,200
And this resulted in GENI, a research infrastructure and
这导致了GENI的产生，一个研究基础设施和

822
00:59:52,200 --> 00:59:55,826
the Future Internet Architecture, FIA program, which I and
我和未来互联网架构，FIA项目，它由我和

823
00:59:55,826 --> 00:59:59,120
various program directors ran, and which funded NDN.
各个项目主管运行的项目，这些项目为NDN提供了资金。

824
00:59:59,120 --> 01:00:04,394
We needed a paper and the paper was David Clark's 2004 New'Arch article,
我们需要一篇论文，而这篇论文就是David Clark在2004年发表的New'Arch文章，

825
01:00:04,394 --> 01:00:08,760
which provided the idea for an initial community input into FIA.
它为FIA的最初社区输入提供了一个想法。

826
01:00:08,760 --> 01:00:13,205
And then, as David said, he went on to help with us in terms of the FIA concept
然后，正如大卫所说，他继续帮助我们就FIA概念进行发展。

827
01:00:13,205 --> 01:00:17,715
and coordinating from the community, the FIA awards.
以及来自社区的协调，FIA奖项。

828
01:00:17,715 --> 01:00:21,745
I think that big successful innovative projects need a zealous leader and
我认为大型成功的创新项目需要一个热情的领导者和

829
01:00:21,745 --> 01:00:25,935
NDN just simply wouldn't have happened as it is today without Leisha Zhang's
NDN如果没有Leisha Zhang的话，就不会有今天这样的发展。

830
01:00:25,935 --> 01:00:27,235
commitment to making it happen.
致力于使其成为现实。

831
01:00:27,235 --> 01:00:29,565
And of course, there were many, many contributors,
当然，有很多很多的贡献者，

832
01:00:29,565 --> 01:00:32,000
including people from this panel.
包括来自这个小组的人。

833
01:00:32,000 --> 01:00:35,620
And funding by other organizations such as NIST and DARPA and Intel and
以及NIST、DARPA、英特尔等其他组织的资助，还有

834
01:00:35,620 --> 01:00:40,240
others supported to move NDN to enable new technologies and new applications.
其他支持者帮助推进NDN，以实现新技术和新应用的发展。

835
01:00:40,240 --> 01:00:44,709
I think it's also critical to create a research community beyond the initial
我认为创建一个超越最初的研究社区也是至关重要的。

836
01:00:44,709 --> 01:00:45,612
researchers.
研究人员。

837
01:00:45,612 --> 01:00:50,964
And I think the establishment of ACM ICM conferences won such successful approaches
我认为ACM ICM会议的设立采用了这样成功的方法。

838
01:00:50,964 --> 01:00:56,328
as this NDN community workshops, such as the one we're having these last two days.
正如我们过去两天举办的这样的NDN社区研讨会。

839
01:00:56,328 --> 01:00:59,578
And I look forward to more NDN successes and
期待NDN未来取得更多的成功，并且

840
01:00:59,578 --> 01:01:04,554
hope that it continues with the same vitality as it's had today.
希望它能保持今天的活力持续下去。

841
01:01:04,554 --> 01:01:05,320
Thank you.
谢谢。

842
01:01:07,623 --> 01:01:08,291
>> Thank you.
谢谢。

843
01:01:08,291 --> 01:01:11,730
[INAUDIBLE] is really proud about having funded a project.
[INAUDIBLE] 真的为资助了一个项目感到非常自豪。

844
01:01:11,730 --> 01:01:12,380
Great.
太好了。

845
01:01:12,380 --> 01:01:13,593
Thank you very much Darleen.
非常感谢你，Darleen。

846
01:01:16,211 --> 01:01:18,780
And Christos.
还有Christos。

847
01:01:18,780 --> 01:01:23,510
As very timidly said, he has been working on NDN since 2010.
他自2010年以来一直非常谨慎地从事NDN的工作。

848
01:01:23,510 --> 01:01:29,833
That's a quite an understatement, please Christos.
这实在是太保守了，请你继续说，克里斯托斯。

849
01:01:29,833 --> 01:01:30,725
>> Thank you, Christian.
谢谢你，克里斯蒂安。

850
01:01:30,725 --> 01:01:31,949
So I'll be brief.
所以我会简短一些。

851
01:01:31,949 --> 01:01:39,204
I think the other people before me have put out the broad and bold vision of NDN.
我认为在我之前的其他人已经提出了NDN宏大而大胆的愿景。

852
01:01:39,204 --> 01:01:43,213
For me, the highlights of the past ten years include,
对我来说，过去十年的亮点包括，

853
01:01:43,213 --> 01:01:47,499
first of all, the building of a robust Indian community.
首先，建立了一个强大的印度社区。

854
01:01:47,499 --> 01:01:52,665
And I'm really happy to see that NIST has adopted the community meetings and
我真的很高兴看到NIST采纳了社区会议并且

855
01:01:52,665 --> 01:01:54,691
is nurturing the community.
正在培育社区。

856
01:01:54,691 --> 01:02:00,067
My experience with people in the NDN community is that those who have
我在NDN社区与人交往的经验是，那些有着 big networking problems to solve, such as the scientific community.

857
01:02:00,067 --> 01:02:05,744
big networking problems to solve, such as the scientific community.
需要解决的大型网络问题，例如科学界。

858
01:02:05,744 --> 01:02:10,153
Once they see and understand what NDN can do and
一旦他们看到并理解了NDN能做什么以及

859
01:02:10,153 --> 01:02:14,112
they realize their frustration with IP,
他们意识到了他们对IP的挫败感，

860
01:02:14,112 --> 01:02:19,710
they become fervent supporters of NDN and big believers.
他们成为了NDN的热情支持者和坚定信仰者。

861
01:02:19,710 --> 01:02:24,340
And they have gone off to write proposals and get funding and so forth.
他们已经开始撰写提案、争取资金等等。

862
01:02:24,340 --> 01:02:28,760
I thought that was a great success that we were able to reach
我认为我们能够做到这一点是一个巨大的成功。

863
01:02:28,760 --> 01:02:33,550
out to a set of people in the community who have real needs and
向社区中真正有需求的人们展示。

864
01:02:33,550 --> 01:02:37,939
they recognized that NDN could be a real solution to their problems.
他们认识到NDN可能是解决他们问题的真正办法。

865
01:02:39,960 --> 01:02:45,717
The other thing that I believe we achieved is big improvements in NFD.
我认为我们取得的另一个成就是在NFD方面的重大改进。

866
01:02:45,717 --> 01:02:49,429
Again, with NIST supporting the effort and
再次，在NIST的支持下，

867
01:02:49,429 --> 01:02:53,642
watching the presentation just before this one,
观看了就在这场之前的演讲，

868
01:02:53,642 --> 01:02:59,172
I think the NFD has gone a long way and it still has a lot of promise.
我认为NFD已经走了很长一段路，它仍然充满了很多潜力。

869
01:02:59,172 --> 01:03:04,019
And it looks like that we'll see more great things coming out of
我们似乎将看到更多来自NFD团队的出色成果。

870
01:03:04,019 --> 01:03:05,950
the team working on NFD.
团队正在致力于NFD的工作。

871
01:03:05,950 --> 01:03:10,776
That's a real need there, and I'm really happy to see it and moving forward.
这确实是一个真正的需求，我很高兴看到它并且正在向前发展。

872
01:03:10,776 --> 01:03:16,417
And the final thing I'm happy to see is the few bolt energetic
已经意识到NDN潜力的公司。

873
01:03:16,417 --> 01:03:21,183
companies who have realized the potential of NDN.
已经意识到NDN潜力的公司。

874
01:03:21,183 --> 01:03:25,183
And they're moving forward adopting it and
他们正在向前迈进，采纳它并且

875
01:03:25,183 --> 01:03:31,343
proving to the rest of the world that NDN has a real commercial use and
证明给世界其他地方看，NDN具有真正的商业用途，并且

876
01:03:31,343 --> 01:03:34,819
you can actually use it to make money.
你实际上可以用它来赚钱。

877
01:03:35,960 --> 01:03:38,320
So I think that's a good thing.
所以我认为这是一件好事。

878
01:03:38,320 --> 01:03:39,010
Okay, thanks.
好的，谢谢。

879
01:03:39,010 --> 01:03:39,510
I'll stop here.
我就说到这里。

880
01:03:40,900 --> 01:03:41,980
>> Thank you Christos.
>> 谢谢你，克里斯托斯。

881
01:03:43,520 --> 01:03:51,005
Lan Wang next in our panelists row.
兰王是我们小组讨论的下一位成员。

882
01:03:51,005 --> 01:03:52,488
>> Can you hear me?
>> 你能听见我说话吗？

883
01:03:52,488 --> 01:03:53,428
>> Yes.
>> 是的。

884
01:03:53,428 --> 01:03:54,345
>> Okay.
>> 好的。

885
01:03:54,345 --> 01:04:01,800
So I wrote my slide based on my own experience, what worked well.
所以我根据自己的经验撰写了我的幻灯片，写的是哪些方法有效。

886
01:04:06,520 --> 01:04:08,310
I'm just giving some examples.
我只是举一些例子。

887
01:04:09,990 --> 01:04:13,030
So the first thing I think worked well was that,
所以我认为第一件做得好的事情是，

888
01:04:13,030 --> 01:04:18,160
we use the routing protocol design and implementation as an example.
我们以路由协议的设计和实现为例。

889
01:04:18,160 --> 01:04:22,779
Then the application to actually
通过同步验证多方通信的想法。

890
01:04:22,779 --> 01:04:30,420
validate the idea of multi party communication through sync.
通过同步验证多方通信的想法。

891
01:04:30,420 --> 01:04:37,630
And we also used it to validate the design of schematized trust.
我们还用它来验证模式化信任的设计。

892
01:04:38,840 --> 01:04:43,533
And also help to improve the libraries that implement
同时也有助于改进实现这些功能的库。

893
01:04:43,533 --> 01:04:46,981
the same can the security mechanisms.
同样可以提高安全机制。

894
01:04:46,981 --> 01:04:52,653
I think that is one good example
我认为那是一个很好的例子。

895
01:04:52,653 --> 01:04:57,452
of an NDN application that
有助于提高一个NDN应用程序的发展

896
01:04:57,452 --> 01:05:03,124
helps improve the development
有助于提高发展

897
01:05:03,124 --> 01:05:08,160
of these main mechanisms.
这些主要机制。

898
01:05:08,160 --> 01:05:12,700
The second example is that we,
我们是第二个例子。

899
01:05:14,640 --> 01:05:20,730
later on develop this hyperbolic routing scheme which is largely static.
后来我们发展了这种基本上是静态的双曲路由方案。

900
01:05:25,220 --> 01:05:33,020
This actually shows the main difference between IP and
这实际上展示了IP和其他协议之间的主要区别。

901
01:05:33,020 --> 01:05:38,090
the forwarding plane is stateless and cannot do smart things.
转发平面是无状态的，不能执行智能操作。

902
01:05:38,090 --> 01:05:41,930
It just listens to what routing tells it to do, but
它只是按照路由的指示行动，但是

903
01:05:41,930 --> 01:05:47,770
in NDN the forwarding plane has stayed and can be very smart.
在NDN中，转发平面保持稳定，并且可以非常智能。

904
01:05:47,770 --> 01:05:52,600
So this kind of largely static routing, forces us
所以这种基本上静态的路由，迫使我们

905
01:05:52,600 --> 01:05:57,460
to to make the forwarding plane more smart in our own design.
在我们自己的设计中使转发平面更加智能。

906
01:05:57,460 --> 01:06:04,100
And it actually works very well, we deployed this hyperbolic routing
我们已经部署了这种双曲路由，而且实际上运行得非常好，

907
01:06:04,100 --> 01:06:10,010
in the NDN testbed, along with an adaptive forwarding strategy.
在NDN测试床上，我们还结合了一种自适应转发策略。

908
01:06:11,450 --> 01:06:14,600
So that's another example of how we can
所以这是我们可以如何的另一个例子。

909
01:06:16,940 --> 01:06:23,650
show the difference or benefits of NDN over IP.
展示NDN相较于IP的不同之处或优势。

910
01:06:24,700 --> 01:06:31,630
The third example, I think, is decentralized applications.
第三个例子，我认为，是去中心化应用程序。

911
01:06:31,630 --> 01:06:35,690
Today a lot of social media and
今天很多社交媒体和~!@#$%^&*()

912
01:06:35,690 --> 01:06:40,150
other applications their centralized cloud based.
其他应用程序它们是基于中心化的云服务的。

913
01:06:40,150 --> 01:06:42,800
Users don't really own their own data.
用户实际上并不拥有他们自己的数据。

914
01:06:43,865 --> 01:06:50,420
NDN, shy in that domain by decentralizing these applications, so
通过去中心化这些应用程序，NDN在该领域变得更加隐秘。

915
01:06:50,420 --> 01:06:56,610
users have their own data, they can control their own privacy.
用户可以控制自己的数据，从而管理自己的隐私。

916
01:06:56,610 --> 01:07:02,240
So in this area, I think we've started to look at decentralized social
所以在这个领域，我认为我们已经开始考虑去中心化的社交媒体应用程序，去中心化的智能家居系统。

917
01:07:02,240 --> 01:07:08,240
media applications, decentralized smart home systems.
媒体应用程序，去中心化智能家居系统。

918
01:07:08,240 --> 01:07:16,610
I think these are very good applications to show the advantages of NDN over IP.
我认为这些是非常好的应用程序，用来展示NDN（命名数据网络）相较于IP（互联网协议）的优势。

919
01:07:16,610 --> 01:07:21,620
So these are the some of the examples.
所以这些就是一些例子。

920
01:07:21,620 --> 01:07:27,514
I think that can really help people appreciate how
我认为这真的可以帮助人们更加欣赏如何

921
01:07:27,514 --> 01:07:33,136
NDN is different in terms of the architecture.
NDN在架构方面是不同的。

922
01:07:35,374 --> 01:07:39,311
>> Thank you for showing the spectrum of things covered
>> 感谢您展示了涉及事物的范围。

923
01:07:39,311 --> 01:07:42,810
in the project in that ten years looking back.
在那个项目中回顾过去十年。

924
01:07:44,170 --> 01:07:48,363
I would like to invite Beichuang to continue with his points.
我想邀请北川继续他的观点。

925
01:07:53,434 --> 01:07:59,331
>> Yeah, so Christian in the email gave us sort of guidelines a thinking,
是的，所以克里斯蒂安在邮件中给了我们一些指导思想，

926
01:07:59,331 --> 01:08:03,150
building in the end as building a house.
就像建造房子一样最终建造建筑。

927
01:08:03,150 --> 01:08:10,130
And what are the highlights and improvements and what is the status?
那么，有哪些亮点和改进，以及目前的状态是什么？

928
01:08:10,130 --> 01:08:13,770
So maybe I'm the only one follow in that direction.
所以或许只有我一个人在那个方向上前进。

929
01:08:14,810 --> 01:08:19,450
So, I'm not an expert in building a house or building.
所以，我不是建造房屋或建筑的专家。

930
01:08:19,450 --> 01:08:20,910
But think of a house.
但想想一个房子。

931
01:08:20,910 --> 01:08:27,120
I think there are three aspects, one is the aesthetic aspect of it, and
我认为有三个方面，第一个是它的美学方面，还有

932
01:08:27,120 --> 01:08:31,930
second one is the functioning of it, and the third one is the engineering of it.
第二个方面是它的功能性，第三个方面是它的工程技术。

933
01:08:31,930 --> 01:08:32,728
All back to beauty.
回归至美。

934
01:08:32,728 --> 01:08:36,670
But so [COUGH] thinking from this angle.
但是从这个角度来思考。

935
01:08:36,670 --> 01:08:44,550
And to me the biggest highlight of NDN is really the very basic core idea,
对我来说，NDN最大的亮点真的是它那个非常基本的核心理念，

936
01:08:44,550 --> 01:08:49,320
as Dave said is very bold idea many other proposals.
正如戴夫所说，这是一个非常大胆的想法，远超许多其他的提案。

937
01:08:49,320 --> 01:08:53,370
But I think that not only is it bold but also very simple, right?
但我认为这不仅大胆，而且非常简单，对吧？

938
01:08:53,370 --> 01:08:56,320
the very core is your name the data.
数据是你名字的核心。

939
01:08:56,320 --> 01:08:56,960
After that,
之后，

940
01:08:56,960 --> 01:09:02,090
if you accept that as your basic starting point without anything else.
如果你接受那作为你的基本出发点，而不需要任何其他东西。

941
01:09:02,090 --> 01:09:06,660
You naturally do have other things, like myspace in the network,
你当然还有其他东西，比如网络中的Myspace，

942
01:09:06,660 --> 01:09:09,920
the data centric security, trust schema and
数据中心安全、信任模式和

943
01:09:09,920 --> 01:09:14,770
so, it's very powerful idea.
所以，这是一个非常有力的想法。

944
01:09:14,770 --> 01:09:17,550
And I think to me,
我认为对我来说，

945
01:09:17,550 --> 01:09:23,450
I really appreciated this authentic aspect of this NDN house.
我真的很欣赏这个NDN房子的真实特色。

946
01:09:23,450 --> 01:09:26,040
And the highlight is, I think in the last 10 years.
而且我认为亮点在于过去的十年里。

947
01:09:26,040 --> 01:09:30,200
We've seen the emergence of the ICN/NDN resort community, really means more and
我们已经看到了ICN/NDN度假社区的出现，这确实意味着更多的

948
01:09:30,200 --> 01:09:35,490
more people start to appreciate that and are willing to work on this idea.
更多的人开始欣赏这个想法，并且愿意为之努力。

949
01:09:35,490 --> 01:09:38,910
So, to me that's the biggest one.
对我来说，那是最重要的一点。

950
01:09:38,910 --> 01:09:47,210
And in terms of functioning, I think it's application development by the users.
在功能方面，我认为是用户的应用程序开发。

951
01:09:47,210 --> 01:09:51,880
So in last 10 years, we have quite a number of developments.
所以在过去的10年里，我们有了相当多的发展。

952
01:09:51,880 --> 01:09:55,090
And we have application users like,
我们还有像……这样的应用程序用户。

953
01:09:55,090 --> 01:09:59,640
data intensive scientists and media and crystals walking with.
数据密集型科学家、媒体以及与水晶共行。

954
01:09:59,640 --> 01:10:03,970
And we have the AR VR application Jeff work has been working on and
以及杰夫一直在研究的AR VR应用程序。

955
01:10:03,970 --> 01:10:06,210
a bunch of other applications.
还有许多其他应用程序。

956
01:10:06,210 --> 01:10:09,460
In terms of the engineering of it.
在工程方面。

957
01:10:09,460 --> 01:10:14,440
We did designed a bunch of protocols implemented
我们设计并实现了一系列协议。

958
01:10:14,440 --> 01:10:19,150
them in the prototype, and we deployed on test flight.
我们在原型中实现了这些协议，并且我们已经在TestFlight上部署。

959
01:10:19,150 --> 01:10:26,660
And we also come up with new mechanism to deal with providing new features.
我们还提出了一种新机制来处理提供新功能。

960
01:10:26,660 --> 01:10:32,196
So, looking at an NDN house, it seems like we
所以，当我们观察一个NDN房子时，看起来我们

961
01:10:32,196 --> 01:10:38,260
have achieved quite some very basic things.
我们已经完成了一些非常基础的事情。

962
01:10:38,260 --> 01:10:40,610
Okay. I think it's a far from finish,
好的。我认为它还远未完成，

963
01:10:40,610 --> 01:10:46,180
but quite some components already there.
但是已经有相当多的组件在那里了。

964
01:10:46,180 --> 01:10:50,430
And it's more and more people are working on it.
越来越多的人正在参与其中。

965
01:10:50,430 --> 01:10:54,710
So, I think that's pretty much, I think it's the highlights.
所以，我认为这已经差不多了，我认为这些是重点。

966
01:10:57,050 --> 01:10:58,530
Yeah, that's it.
嗯，就是这样。

967
01:10:58,530 --> 01:11:00,310
>> Thank you very much.
>> 非常感谢你。

968
01:11:00,310 --> 01:11:05,960
That's the topic per se but really nicely told the story and
这就是主题本身，但确实讲述了一个很好的故事。

969
01:11:05,960 --> 01:11:08,900
the aesthetic parts also being part of the equation.
审美部分也是方程的一部分。

970
01:11:08,900 --> 01:11:09,780
Thank you.
谢谢。

971
01:11:09,780 --> 01:11:15,600
And the next slide now and that is now rounding up past with she,
下一张幻灯片，现在我们来总结一下她的过去经历。

972
01:11:18,250 --> 01:11:22,250
when asked about the role, she also said keeping the team going.
当被问及角色时，她还说了是维持团队运作。

973
01:11:22,250 --> 01:11:29,211
And I think Darlene already pointed out that role, so please, Lixia, your slide.
而且我认为Darlene已经指出了那个角色，所以请，Lixia，你的幻灯片。

974
01:11:31,913 --> 01:11:32,770
>> Thank you.
>> 谢谢。

975
01:11:32,770 --> 01:11:34,251
I hope you can see me now.
我希望你现在能看见我。

976
01:11:34,251 --> 01:11:40,690
The being the last one, I can echo back what the people have said already.
作为最后一个发言的人，我可以回顾并重复之前人们已经说过的话。

977
01:11:41,800 --> 01:11:44,060
I think Darlene is exactly right.
我认为达琳完全正确。

978
01:11:46,090 --> 01:11:51,032
With the great idea NDN proposed without the NSF funding,
在没有国家科学基金会资助的情况下，NDN 提出了一个很好的想法，

979
01:11:51,032 --> 01:11:56,442
the NDN project without help started, I think for that the whole NDN team.
在没有帮助的情况下，NDN 项目启动了，我认为整个 NDN 团队为此感到自豪。

980
01:11:56,442 --> 01:12:02,480
And I guess the community really appreciated the support from NSF So
我猜测社区真的很感激来自 NSF 的支持。

981
01:12:02,480 --> 01:12:04,360
all these years.
这么多年来。

982
01:12:04,360 --> 01:12:09,280
And second, I would say that during this not just that I, you know, persisted.
其次，我想说，在这期间不仅仅是我坚持下来了。

983
01:12:09,280 --> 01:12:10,290
I think it's the team.
我认为是团队。

984
01:12:11,370 --> 01:12:19,260
The team persisted over ten years despite a number of unexpected challenges.
团队尽管遇到了许多意想不到的挑战，但仍然坚持了十多年。

985
01:12:19,260 --> 01:12:21,920
So we don't have to go down that path further.
所以我们不必再继续走那条路了。

986
01:12:21,920 --> 01:12:26,750
There are really dark times difficult times almost like someone was killing
有些时候真的很黑暗，很艰难，几乎就像有人在杀戮

987
01:12:26,750 --> 01:12:27,640
the project.
项目。

988
01:12:27,640 --> 01:12:31,370
But the team believed this direction.
但是团队相信这个方向。

989
01:12:31,370 --> 01:12:32,940
That is this name.
这就是这个名字。

990
01:12:32,940 --> 01:12:38,680
The security data is the direction to build the future networking.
安全数据是构建未来网络方向的基础。

991
01:12:38,680 --> 01:12:43,830
So, there's a long road, but i think we did great.
所以，虽然路途遥远，但我认为我们做得很好。

992
01:12:45,160 --> 01:12:51,110
Going back to the idea that I think the 10 years of experience
回到我认为拥有十年经验的想法

993
01:12:51,110 --> 01:12:57,010
really proved that using the named secure the data.
确实证明了使用命名来保护数据是有效的。

994
01:12:57,010 --> 01:13:04,290
As the basic architecture building block is exactly the right direction to go.
作为基础架构构建模块，这确实是正确的方向。

995
01:13:04,290 --> 01:13:07,560
Patron. I already mentioned that,
顾客。我已经提到过了，

996
01:13:09,030 --> 01:13:13,890
I remember that Dave Clark had this paper many years back
我记得多年前Dave Clark写过这篇论文。

997
01:13:13,890 --> 01:13:18,380
on the design philosophy of the tapper internet protocols.
那篇论文在同一天发表了关于因特网协议设计哲学的基本架构要求。

998
01:13:19,680 --> 01:13:25,290
That paper make a statement the same day that the fundamental architectural
那篇论文在同一天发表了关于因特网协议设计哲学的基本架构陈述。

999
01:13:25,290 --> 01:13:31,170
feature of the Internet is the use of datagrams because of that,
因特网的一个特点是使用数据报，因为这样，

1000
01:13:31,170 --> 01:13:37,450
correct the building block, and then the Internet achieved many things that
纠正了构建模块之后，因特网实现了许多事情，这些事情

1001
01:13:37,450 --> 01:13:45,210
property wasn't foreseen at the time of the TCP IP spec publication.
当时发布TCP/IP规范时，并未预见到该属性。

1002
01:13:45,210 --> 01:13:50,260
I think that's exactly the same happened with the NDN lan mentioned
我认为同样的情况也发生在提到的NDN局域网上。

1003
01:13:50,260 --> 01:13:56,440
that these days were utilizing the basic idea of semantically named the data and
这些天我们正在利用语义命名数据的基本概念，以及

1004
01:13:56,440 --> 01:14:03,160
security data to push the frontier of this distributed applications
安全数据来推动这些分布式应用程序的前沿发展。

1005
01:14:03,160 --> 01:14:10,400
last to developers that completely distributed that social app tools.
最后向完全分布式的社交应用程序开发者提供工具。

1006
01:14:10,400 --> 01:14:15,520
And UCLA is now developing this thing called NDN light,
加州大学洛杉矶分校现在正在开发一种名为NDN light的东西，

1007
01:14:15,520 --> 01:14:21,440
that is completely end user controlled smart home system.
这是一套完全由最终用户控制的智能家居系统。

1008
01:14:21,440 --> 01:14:23,750
We don't mean to say Cloud is not useful.
我们并不是说云服务没有用处。

1009
01:14:23,750 --> 01:14:29,270
Cloud is a great resources, just like where the control is
云服务是一个很棒的资源，正如控制权所在之处。

1010
01:14:29,270 --> 01:14:34,860
the control has to be returned back to the end users hands yonder to really move
控制权必须真正地交还到最终用户手中，才能向前迈进。

1011
01:14:34,860 --> 01:14:40,820
internet into the next stage of distributed and the secured system.
互联网进入下一个阶段：分布式和安全系统。

1012
01:14:42,610 --> 01:14:47,820
So what, I would also want to point out that I think I named the security data
所以，我还想指出，我认为我命名了安全数据

1013
01:14:47,820 --> 01:14:49,660
is that building block but
那是基石，但是

1014
01:14:49,660 --> 01:14:54,660
that idea didn't just drop from the sky one day need to pass had.
这个想法并非有一天突然从天而降，需要经过验证。

1015
01:14:54,660 --> 01:14:59,590
I've been working with one for many years started from my MIT
我已经和一个人合作了很多年，起初是从我在麻省理工学院开始的。

1016
01:14:59,590 --> 01:15:04,570
student that is when he and I argued a lot until later,
那时候他还是个学生，我们经常争论，直到后来，

1017
01:15:04,570 --> 01:15:10,790
I started appreciating the technical insight.
我开始欣赏这种技术洞察力。

1018
01:15:10,790 --> 01:15:15,500
Yeah, we're working on the things started with say this a scalable,
是的，我们正在研究一些以可扩展性为起点的事物。

1019
01:15:15,500 --> 01:15:17,300
reliable multicast.
他们本质上结合了来自静态理论的可靠组播的想法。

1020
01:15:17,300 --> 01:15:21,860
They essentially combined the idea from still theories multicast
他们本质上结合了来自静态理论的组播的想法。

1021
01:15:21,860 --> 01:15:25,790
with Dave's idea of application level framing.
他们结合了Dave关于应用层框架的想法。

1022
01:15:25,790 --> 01:15:30,750
That is the network is not about the shooting the bullets to test nations.
这就是说，网络并不是关于向各国射击子弹来进行测试。

1023
01:15:30,750 --> 01:15:33,280
But it's really about shaping the data.
但它实际上是关于塑造数据的。

1024
01:15:33,280 --> 01:15:38,430
Lissa application data to deliver to whoever the dessert parties are.
丽莎将应用程序数据传递给所有甜点派对的参与者。

1025
01:15:40,640 --> 01:15:47,970
The, I would also say that since that I've been involved with IETF for so many years,
我还想说，由于我参与了IETF这么多年，

1026
01:15:47,970 --> 01:15:54,760
you can see that this state centric direction has been picked up by mania.
你可以看到这种以国家为中心的方向已经被很多人采纳。

1027
01:15:54,760 --> 01:15:59,670
Other efforts, just the question is that how far we push that
其他的努力，只是问题在于我们要推进到多远。

1028
01:15:59,670 --> 01:16:04,390
a direction for the for the time being is mostly stayed at a higher level.
目前的方向大多仍停留在较高层面。

1029
01:16:04,390 --> 01:16:08,900
And I think that's a really nice vision that pushes direction all the way down
我认为这是一个非常好的愿景，它将方向推向了全面发展。

1030
01:16:08,900 --> 01:16:13,860
to build the infrastructure, so that the whole thing will be more coherent.
为了构建基础设施，使整个系统更加连贯。

1031
01:16:13,860 --> 01:16:19,310
Yeah, the secure as a foundation to support the future networking.
是的，安全性作为基础来支撑未来的网络建设。

1032
01:16:21,190 --> 01:16:23,770
And if I put them in the last sentence there,
如果我把它们放在最后一句话中，

1033
01:16:23,770 --> 01:16:29,835
I think that the security has to be built into the gene.
我认为安全性需要内嵌于基因之中。

1034
01:16:29,835 --> 01:16:34,160
Of all the systems, I think there's, you know, one part of the NDN getting
在所有的系统中，我认为有一个部分是NDN在获取

1035
01:16:34,160 --> 01:16:40,200
the right story isn't semantically named and the security data as a building block.
正确的故事在语义上并没有得到命名，安全数据作为一个构建块。

1036
01:16:41,560 --> 01:16:43,250
That's from me for now.
这就是我现在的全部了。

1037
01:16:45,520 --> 01:16:46,930
>> Thank you, Lixia.
谢谢你，丽霞。

1038
01:16:46,930 --> 01:16:49,359
And now we have all eight panellists.
现在我们有了全部八位小组讨论者。

1039
01:16:50,630 --> 01:16:57,280
I would like to ask them, how would you know like to organize the discussion?
我想问他们，你们希望如何组织讨论？

1040
01:16:57,280 --> 01:17:02,250
Should I bring up some topic or would somebody like to react on
我应该提出一些话题，还是有人愿意对此做出回应？

1041
01:17:02,250 --> 01:17:06,059
some panelists others comments complimented
一些小组成员对其他人的评论表示赞美。

1042
01:17:14,111 --> 01:17:17,085
So, let me make a first step here.
那么，让我先迈出第一步。

1043
01:17:17,085 --> 01:17:22,450
Lixia at the end has that statement any angles the basic idea,
立夏最后那个声明有任何角度的基本概念，

1044
01:17:22,450 --> 01:17:28,015
right and we heard a lot about the applications being the validation
我们听说很多关于应用程序是验证的事情。

1045
01:17:28,015 --> 01:17:32,530
of exactly why in the end got it right.
正是因为这样，我们最终明白了原因。

1046
01:17:33,590 --> 01:17:38,500
Do you have some memories of specific events where, this now simply becomes
你是否有一些特定事件的记忆，在那些事件中，这现在变得简单了？

1047
01:17:38,500 --> 01:17:43,740
easy or that was really a breakthrough now with that new building block ID,
易于处理，或者说现在有了那个新的构建模块ID，真的是一个突破。

1048
01:17:43,740 --> 01:17:46,870
the basic ID that you can report on.
你可以报告的基础ID。

1049
01:17:46,870 --> 01:17:51,980
That would be one part of the question and do you see other areas where still.
这将是问题的一部分，你还看到其他仍然存在的领域吗？

1050
01:17:51,980 --> 01:17:58,301
We might find such nice discoveries, that now with NDN things get better.
我们可能会发现一些很好的发现，现在有了NDN，事情变得更好了。

1051
01:17:58,301 --> 01:18:03,490
>> And out the letter, others have their opportunity.
让信件发出去后，其他人就有了机会。

1052
01:18:03,490 --> 01:18:06,070
Let me just mention one simple thing, security.
让我简单提一件事，那就是安全性。

1053
01:18:07,470 --> 01:18:10,700
I think in the early days when the man talk to me about putting this whole
我认为在早期，当那个人跟我谈论把这整个

1054
01:18:10,700 --> 01:18:11,940
project together,
项目整合在一起，

1055
01:18:11,940 --> 01:18:15,630
he keeps mentioning that it's really about securing a data directory.
他一直提到这实际上是为了保护一个数据目录。

1056
01:18:16,720 --> 01:18:22,720
But from there, the utility of that idea,
但从那里开始，这个想法的实用性，

1057
01:18:22,720 --> 01:18:26,280
I just expand it without the boundary.
我只是在没有界限的情况下扩展它。

1058
01:18:26,280 --> 01:18:32,790
For example, the crypto keys is nothing more than a piece of name the data and
例如，加密密钥不过是给数据命名而已，

1059
01:18:32,790 --> 01:18:38,500
if you send it as a certificate, so therefore NDN makes a security
如果你将其作为证书发送，因此NDN实现了安全性。

1060
01:18:38,500 --> 01:18:44,150
really straightforward as a built in the gene into the system.
真的很直接，因为它是内置在系统的基因中的。

1061
01:18:44,150 --> 01:18:49,730
The certificate is just a piece of data so you can fetch it from anywhere.
证书只是一段数据，所以你可以从任何地方获取它。

1062
01:18:49,730 --> 01:18:54,850
Today if we want to know what's the UserWay's crypto key,
如果我们今天想知道UserWay的加密密钥是什么，

1063
01:18:54,850 --> 01:18:58,930
I really don't know what would be the way to find it
我真的不知道该如何找到它。

1064
01:18:58,930 --> 01:19:03,090
by the find in everything become the trivialized to use that word.
在一切事物中，通过寻找变得平凡，以至于使用那个词。

1065
01:19:03,090 --> 01:19:07,070
And so and so is the trust policies.
如此这般便是信任政策。

1066
01:19:07,070 --> 01:19:11,290
If you want to know what are the UserWay's of policies for this and for
如果你想知道UserWay对此有什么政策，以及对于

1067
01:19:11,290 --> 01:19:15,250
that the one time my students aggressor of course and
那一次我的学生攻击了课程，以及

1068
01:19:15,250 --> 01:19:19,060
the registration page directed him to some payment page.
注册页面将他引导至某个支付页面。

1069
01:19:19,060 --> 01:19:21,825
That's not, can we share the website and
这不是，我们可以共享网站和

1070
01:19:21,825 --> 01:19:26,140
this happened to be a student's work on security.
这恰好是一名学生关于安全的作业。

1071
01:19:26,140 --> 01:19:29,950
He passed a special they go there, right?
他通过了一个特别的，他们去那里，对吗？

1072
01:19:29,950 --> 01:19:34,640
That's a simple [INAUDIBLE] example to say that what is your trust policy,
这是一个简单的[无法听清]例子来说明，你的信任政策是什么，

1073
01:19:34,640 --> 01:19:37,860
which website you say we actually trust this or that.
你说我们实际上信任这个或那个网站。

1074
01:19:37,860 --> 01:19:41,520
They direct the students to go there to handle the payment.
他们指导学生去那里处理付款。

1075
01:19:41,520 --> 01:19:45,510
What is the security policies someone mentioned earlier about
~!@#$%^&*()

1076
01:19:45,510 --> 01:19:48,990
NDN has this concept of a trust schema.
NDN拥有一个信任模式的概念。

1077
01:19:48,990 --> 01:19:55,670
And that, again, it's simply a piece of named security data with established and
而且，这又是一段具有既定的安全数据命名约定的简单数据。

1078
01:19:55,670 --> 01:19:59,510
naming conventions, again, you can just refresh that piece of data and
命名约定，同样，你可以刷新那段数据并且

1079
01:19:59,510 --> 01:20:04,060
construct the name to say, give me use your way security policy for whatever.
构建名称以表示，给我使用你的方式安全策略来处理任何事情。

1080
01:20:05,120 --> 01:20:06,010
But then we are working.
但那时我们正在工作。

1081
01:20:06,010 --> 01:20:07,002
I would just stop there.
我会就此打住。

1082
01:20:11,682 --> 01:20:15,079
>> Thank you, somebody that's fun to joining that discussion.
>> 谢谢，很高兴有人加入这个讨论。

1083
01:20:20,773 --> 01:20:23,178
>> Well, I'll offer up a comment.
>> 好的，我来发表一个评论。

1084
01:20:23,178 --> 01:20:29,280
I think this may lead us into the second round of questions you want to ask but
我认为这可能会引导我们进入你想要提出的第二轮问题，但是

1085
01:20:29,280 --> 01:20:34,610
I think that, one of the questions you have to ask as you explore what's
我认为，在你探索什么是的过程中，你必须要问的一个问题是

1086
01:20:34,610 --> 01:20:40,100
been discovered here is, what is the right entanglement of the ideas?
在这里被发现的是，什么是正确的思想纠缠？

1087
01:20:40,100 --> 01:20:43,690
What I mean by that is that, I think,
我的意思是，我认为，

1088
01:20:45,080 --> 01:20:51,120
having data that is self secured state, that is signed up
拥有一种自我保护状态的数据，即已注册的数据。

1089
01:20:51,120 --> 01:20:56,220
as a building block is a very powerful idea.
作为一个构建模块，这是一个非常有力的想法。

1090
01:20:59,357 --> 01:21:01,980
It's an idea that could, and there are limitations here,
这是一个可能的想法，但这里有局限性，

1091
01:21:01,980 --> 01:21:04,770
that's an idea that could be integrated, into the internet.
这是一个可以被整合进互联网的想法。

1092
01:21:05,980 --> 01:21:08,670
We could have a framework for
我们可以有一个框架用于……

1093
01:21:08,670 --> 01:21:13,570
data that allows it to be signed and so forth and so on.
数据可以进行签名等等。

1094
01:21:13,570 --> 01:21:17,770
And I think the fact that we haven't moved in that direction
我认为我们还没有朝那个方向发展。

1095
01:21:17,770 --> 01:21:22,560
in the context of the internet or we've moved further than we have is a is
在互联网的背景下，或者我们已经比我们有的更进一步是一个是

1096
01:21:22,560 --> 01:21:26,869
a really interesting issue to contemplate.
这确实是一个值得深思的有趣问题。

1097
01:21:26,869 --> 01:21:32,050
But it's sort of begs the question of whether
但这确实引出了一个问题，即是否

1098
01:21:32,050 --> 01:21:38,030
there is a uniform framework for securing data that's universal.
是否存在一个适用于所有数据的统一安全框架。

1099
01:21:38,030 --> 01:21:43,160
And I think the the idea in NDN was that well,
我认为在NDN中的想法是，嗯，

1100
01:21:43,160 --> 01:21:46,770
of course, there is a universal framework.
当然，有一个通用框架。

1101
01:21:46,770 --> 01:21:48,130
Because in the end,
因为最终，

1102
01:21:48,130 --> 01:21:52,520
every piece of information can be reduced to a bag of bits and bits is bits.
每一条信息都可以被简化为一堆比特，而比特就是比特。

1103
01:21:52,520 --> 01:21:56,960
And so if you put the security at the bit level,
那么如果你将安全措施放在比特级别，

1104
01:21:56,960 --> 01:21:59,610
then you've got a universal architecture.
那么你就拥有了一个通用架构。

1105
01:22:01,520 --> 01:22:07,050
I think that's an area where there's still the possibility of some debate it,
我认为那是一个仍然可能存在一些争论的领域。

1106
01:22:07,050 --> 01:22:12,040
it might very well be the case that you might like to apply the security
你可能确实希望应用安全措施。

1107
01:22:12,040 --> 01:22:16,230
at a level where you haven't necessarily reduced it to a bag of bits you need more
在你还没有必要将其简化为一堆二进制数据的层面上，你需要更多。

1108
01:22:16,230 --> 01:22:21,150
diversity and how it's done that I think should be divorced.
那种多样性以及其实现方式，我认为应该被区分开来。

1109
01:22:21,150 --> 01:22:26,430
That conversation should be divorced from packet forwarding.
那种对话应该与数据包转发区分开来。

1110
01:22:28,330 --> 01:22:33,860
And the question of whether you you want to integrate
要不要将安全模型集成到数据包级别，也就是说，

1111
01:22:33,860 --> 01:22:38,230
the security model into the packet level that is to say,
要不要将安全模型集成到数据包级别，也就是说，

1112
01:22:38,230 --> 01:22:41,740
in some sense the NDN science packets, it doesn't sign bags of bits.
在某种意义上，NDN科学数据包，并不对比特的包进行签名。

1113
01:22:41,740 --> 01:22:46,690
It I asked for the first packet as for the second packet, so the third packet.
如果我要求第一个数据包，对于第二个数据包也是如此，那么第三个数据包也是一样。

1114
01:22:46,690 --> 01:22:49,740
I think one of the really interesting questions
我认为其中一个非常有趣的问题是

1115
01:22:49,740 --> 01:22:54,230
that this architecture helped to expose, but I don't think we've yet answered
这种架构有助于揭示的问题，但我认为我们还没有找到答案

1116
01:22:54,230 --> 01:22:59,870
is the extent to which these ideas are powerful when they're coupled together.
这些观点结合在一起的强大程度。

1117
01:22:59,870 --> 01:23:03,070
Or in fact now that we understand them all,
或者实际上现在我们都理解它们了，

1118
01:23:03,070 --> 01:23:06,430
you should freshly ask do they need to be bundled together?
你应该重新询问，它们是否需要被捆绑在一起？

1119
01:23:06,430 --> 01:23:12,530
And I think that's a there's some really interesting lacking
我认为这里确实有一些非常有趣的缺失。

1120
01:23:12,530 --> 01:23:17,330
deep architectural questions here which, In some sense,
在某种意义上，这里存在一些深层次的建筑问题。

1121
01:23:17,330 --> 01:23:22,220
you have to have a project as bold and as as as
你必须要有一个像这样大胆的项目。

1122
01:23:22,220 --> 01:23:27,230
vigorous as NDN to sort of help force the thinking through those things.
你必须要有一个像这样大胆的项目，像NDN那样充满活力的，以帮助推动对这些事情的思考。

1123
01:23:31,365 --> 01:23:36,338
>> I like to partly disagree with Dave in.
我在某种程度上不同意Dave的观点。

1124
01:23:36,338 --> 01:23:41,359
There was the genesis of the NDN data up yet
NDN数据的起源还没有出现。

1125
01:23:41,359 --> 01:23:46,237
was that Ron Rico's work on sightsee and
那是不是罗恩·里科关于观光的工作？

1126
01:23:46,237 --> 01:23:51,418
some of the theoretical associated work.
一些相关的理论工作。

1127
01:23:51,418 --> 01:23:56,701
Said, every security artifact that we know
说，我们所知道的每一个安全设备。

1128
01:23:56,701 --> 01:24:01,839
how to build that we can conceive of is based
我们能够构想出的每一个构建都是基于

1129
01:24:01,839 --> 01:24:08,264
on certificates is based on these item potent units,
在证书上的构建是基于这些幂等单元，

1130
01:24:08,264 --> 01:24:16,115
where you bind together a name that has some context a key object,
将具有一定上下文的名称与关键对象绑定在一起，

1131
01:24:16,115 --> 01:24:21,398
and then a provenance signature that says,
然后是一个声明来源的签名，它表示，

1132
01:24:21,398 --> 01:24:26,680
what party asserts that this name is the name
哪个方声称这个名字就是该名字

1133
01:24:26,680 --> 01:24:31,153
of this public key, this artifact.
这个公钥，这个工件。

1134
01:24:31,153 --> 01:24:36,498
And if you say well, that data part doesn't
如果你说得对，那个数据部分并不需要

1135
01:24:36,498 --> 01:24:41,988
have to be a key, it can just be arbitrary bits
不必是关键的，它可以只是任意的比特。

1136
01:24:41,988 --> 01:24:47,044
that you know it's a speech act you want to
使得你知道这是一个你想要进行的言语行为。

1137
01:24:47,044 --> 01:24:52,392
make an edit adaptation that this context,
这个上下文需要进行编辑改编。

1138
01:24:52,392 --> 01:24:58,920
this data is asserted as a Indivisible by this party.
这一方认为这些数据是不可分割的。

1139
01:25:02,100 --> 01:25:06,230
Given that that seemed to be sort of a universal building block, and
考虑到那似乎是某种普遍的基本构件，以及

1140
01:25:06,230 --> 01:25:11,130
we build our global scale trust systems out of it, question comes up.
我们将其作为构建我们全球规模信任系统的基础，问题随之而来。

1141
01:25:12,410 --> 01:25:13,910
Can you build other things?
您能构建其他东西吗？

1142
01:25:15,960 --> 01:25:21,890
The constraints of security means lots of different things.
安全的限制意味着很多不同的事情。

1143
01:25:21,890 --> 01:25:26,950
Usually its product in the context of internet as some sort of global
通常在互联网的语境中，它的产品被视作某种全球性的东西。

1144
01:25:26,950 --> 01:25:31,990
trust deriving from global routes of trust and Domain Name System and a bunch of
信任源自全球信任路径和域名系统以及一堆其他东西，但如果你想要自下而上地做些什么，比如在一个房子里？

1145
01:25:31,990 --> 01:25:37,130
other stuff but what if you wanted to do something bottom up like in a house?
其他东西，但如果你想要自下而上地做些什么，比如在一个房子里？

1146
01:25:38,490 --> 01:25:43,290
What if you wanted to do something that was between two parties or
如果你想做一些介于两方之间的事情，或者

1147
01:25:43,290 --> 01:25:46,830
small set of parties that have a common interest and they just want to
想要做的事情只涉及一小群有共同利益的人，他们只是想要……

1148
01:25:48,590 --> 01:25:53,330
have privacy and trust or solely around their common interest?
保护隐私和信任或者仅仅围绕他们的共同利益？

1149
01:25:55,740 --> 01:26:00,830
So there was a theoretical proof, forgetting the paper but
所以有一个理论证明，忘记了那篇论文，但

1150
01:26:00,830 --> 01:26:05,760
I can forward it to you that said, well, certs to
我可以转发给你，那就是说，嗯，证书到

1151
01:26:05,760 --> 01:26:09,160
the extent we can build those things your building block is going to be searched.
我们能够构建那些东西的程度，你的构建基块将会是搜索。

1152
01:26:09,160 --> 01:26:14,300
The way that the search interrelate is what defines the system.
搜索相互关联的方式定义了系统。

1153
01:26:14,300 --> 01:26:18,430
And that has to do with the structure that you put in the names.
这与您在名称中设置的结构有关。

1154
01:26:18,430 --> 01:26:25,050
And so I wanted NDN to have that building block and I wanted
因此，我希望NDN能拥有那个构建模块，我也希望

1155
01:26:25,050 --> 01:26:30,670
it to be used for lots of different systems that mostly hasn't been.
它被用于许多不同的系统，尽管大多数情况下并非如此。

1156
01:26:32,030 --> 01:26:36,930
There is work outside of NN.l There's
这是在NN.l之外的工作。

1157
01:26:36,930 --> 01:26:42,030
all area called self sovereign security that's currently exploding
目前正在迅速发展的一个领域被称为自主安全。

1158
01:26:42,030 --> 01:26:47,360
partly driven by another building block getting Blockchains where
部分原因是另一个构建模块的发展，即区块链技术。

1159
01:26:47,360 --> 01:26:51,820
the security transactions are solely between interested parties.
安全交易仅限于有关各方之间进行。

1160
01:26:51,820 --> 01:26:53,530
There's not a global trust route.
全球并没有一个统一的信任路径。

1161
01:26:54,721 --> 01:26:57,640
I think models like that.
我认为模型就是那样的。

1162
01:27:00,060 --> 01:27:05,480
Kathy Nichols has been doing baited work in IoT trying to say
凯西·尼科尔斯一直在物联网领域从事诱饵工作，试图说服别人。

1163
01:27:05,480 --> 01:27:10,320
okay, a home can be a self sovereign security environment and how,
好的，一个家庭可以是一个自主安全环境，但如何做到这一点呢？

1164
01:27:10,320 --> 01:27:12,480
how do we bootstrap that?
我们如何启动它？

1165
01:27:12,480 --> 01:27:13,920
How can you make it automatic?
你如何使它自动化？

1166
01:27:13,920 --> 01:27:16,639
How do you make it work without people having a lot of involvement?
你如何使它在不需要人们大量参与的情况下运作？

1167
01:27:18,200 --> 01:27:20,640
And she's finding that NDN and
她发现NDN和~!@#$%^&*()

1168
01:27:20,640 --> 01:27:24,540
a particular take on trust schemas work pretty well for it.
特定的信任模式对它来说效果相当不错。

1169
01:27:24,540 --> 01:27:28,650
So I think there's a lot of potential there.
所以我认为那里有很多潜力。

1170
01:27:30,160 --> 01:27:34,860
I don't think the potential is in the global scale security architectures,
我认为潜力并不在于全球规模的安全架构中，

1171
01:27:34,860 --> 01:27:37,580
because they're just way too constrained, but.
因为它们受到的限制实在是太多了，但是。

1172
01:27:38,650 --> 01:27:44,120
I think there's a huge potential in doing vocal security and
我认为在语音安全方面有巨大的潜力，

1173
01:27:44,120 --> 01:27:49,772
trust architectures in a way that's fairly automatic using the building block.
利用构建块以一种相当自动的方式构建信任架构。

1174
01:27:54,226 --> 01:27:58,050
>> It's not clear that Van disagreed with me.
>> 并不清楚范是否不同意我的观点。

1175
01:27:58,050 --> 01:28:04,414
>> Yes I would certainly agree with point answer
>> 是的，我当然同意这个观点的回答。

1176
01:28:04,414 --> 01:28:08,560
>> Looking at time and also now
>> 看看时间，还有现在

1177
01:28:14,489 --> 01:28:20,601
And also now that people start to look into the next step, where are we?
现在人们开始考虑下一步，我们现在处于什么位置？

1178
01:28:21,980 --> 01:28:27,580
Let's quickly do in the middle the Round 2 and switch to slide sequence
让我们快速进行第二轮，在此过程中切换幻灯片顺序。

1179
01:28:27,580 --> 01:28:32,830
where the question was asked, where can we improve.
在哪里提出了问题，我们可以在哪里做出改进。

1180
01:28:32,830 --> 01:28:37,800
And I keep the sequence of panelists and I would like to invite Van
我保持了嘉宾的顺序，并且我想邀请Van。

1181
01:28:38,800 --> 01:28:42,948
to expand on his line that he sends me.
来扩展他发给我的那条线索。

1182
01:28:42,948 --> 01:28:48,397
>> Hi, it as I looked through the hundred
嗨，正如我浏览那一百

1183
01:28:48,397 --> 01:28:53,505
thousand lines of c plus, plus that
千行的C++代码，那就是

1184
01:28:53,505 --> 01:28:58,787
represents the NDN cxx_library and
代表了NDN的cxx库和

1185
01:28:58,787 --> 01:29:02,895
NFD the forwarding daemon.
NFD转发守护进程。

1186
01:29:05,514 --> 01:29:10,146
What I see is a bunch of code that's basically replicating
我看到的是一堆基本上是在复制的代码。

1187
01:29:10,146 --> 01:29:15,156
functionality this in IP is trying to make NDN be the internet or
这个功能中的IP正试图让NDN成为互联网的实现方式。

1188
01:29:15,156 --> 01:29:18,860
an implementation vehicle for the internet.
一个互联网的实现工具。

1189
01:29:21,010 --> 01:29:28,067
There are two or three versions of TCP congestion control in the cxx_library.
cxx_library 中有两到三个版本的 TCP 拥塞控制。

1190
01:29:28,067 --> 01:29:32,823
Okay, but this
好的，但是这个

1191
01:29:32,823 --> 01:29:39,930
wonderful things that you have talked about
你谈到的那些精彩的事物

1192
01:29:39,930 --> 01:29:45,461
increase to serve a huge unexplored problem areas
增加服务于大量未开发的问题领域。

1193
01:29:45,461 --> 01:29:51,640
where there's just a crying need for a different way of doing things.
在那里迫切需要一种不同的做事方式。

1194
01:29:51,640 --> 01:29:56,450
Because the IP model isn't a very good way of doing things,
因为IP模型并不是一种很好的做事方式，

1195
01:29:56,450 --> 01:30:00,540
things that based on agreement and broadcast distribution.
基于协议和广播分发的事物。

1196
01:30:02,800 --> 01:30:07,566
Things that are about the data in fundamental ways
关于数据的基本方面的事物。

1197
01:30:07,566 --> 01:30:12,112
not about conversations between parties and,
不涉及各方之间的对话，

1198
01:30:16,658 --> 01:30:21,565
I feel like the balance is wrong, but there haven't been,
我感觉平衡有些不对劲，但还没有，

1199
01:30:25,757 --> 01:30:31,960
Enough applications driving the research.
足够的应用推动了研究。

1200
01:30:31,960 --> 01:30:39,410
Instead, the research is largely what's in the researchers comfort zone.
相反，研究很大程度上是在研究人员的舒适区内进行的。

1201
01:30:39,410 --> 01:30:44,008
Well, I've got a lot of experience with this I want to apply NDN and
我有很多相关经验，我想要应用NDN并且

1202
01:30:44,008 --> 01:30:47,620
see how NDN affects inter domain routing.
看看NDN如何影响跨域路由。

1203
01:30:49,390 --> 01:30:56,735
Okay, but communications vehicle is like NDN or
好的，但通信工具就像NDN这样的。

1204
01:30:56,735 --> 01:31:01,412
IP is a tool to solve problems.
IP是解决问题的工具。

1205
01:31:01,412 --> 01:31:07,080
It's not self contained within itself its value is
它的价值不是自身所固有的，而是

1206
01:31:07,080 --> 01:31:12,700
how it helps people solve problems, create new things.
它如何帮助人们解决问题，创造新事物。

1207
01:31:12,700 --> 01:31:18,330
And particularly at the start, it seems like your focus should be okay,
在开始的时候，看起来你应该能够集中注意力。

1208
01:31:18,330 --> 01:31:20,490
who would like to take a risk on using this?
谁会愿意冒险使用这个？

1209
01:31:20,490 --> 01:31:23,420
Like Jeff Burke signed up early on said, hey,
就像早期报名的Jeff Burke说的，嘿，

1210
01:31:23,420 --> 01:31:26,380
it's gonna be really painful because there's nothing there.
这将会非常痛苦，因为那里什么都没有。

1211
01:31:26,380 --> 01:31:29,390
We don't know what's gonna work but lots of false starts.
我们不知道什么会奏效，但会有很多错误的开始。

1212
01:31:29,390 --> 01:31:31,430
It's the gap but the idea is really intriguing.
这是个差距，但这个想法真的很吸引人。

1213
01:31:31,430 --> 01:31:33,150
So I'll buy into the pain.
所以我会接受这份痛苦。

1214
01:31:34,240 --> 01:31:41,110
It's mature enough so that there's less pain and think see it this meeting.
它已经足够成熟，因此减少了痛苦，我认为在这次会议上可以看出来。

1215
01:31:41,110 --> 01:31:45,940
There's a lot of people interested in solving problems with it but
很多人对用它来解决问题感兴趣，但是

1216
01:31:45,940 --> 01:31:49,630
the foundation that they've got to build on,
他们必须依靠的基础，

1217
01:31:49,630 --> 01:31:52,680
I think isn't nearly as good as it could have been.
我认为它并不像它本应达到的那样好。

1218
01:31:52,680 --> 01:31:57,100
Because it's been more inwardly focused and not outwardly focused towards okay,
因为它更多地专注于内部而不是着眼于外部，好的，

1219
01:31:57,100 --> 01:31:59,470
what's the right thing to do for the users?
为用户做正确的事情是什么？

1220
01:31:59,470 --> 01:32:01,370
How can we make things easy for
我们如何能让事情变得简单？

1221
01:32:01,370 --> 01:32:04,140
people who wanna do applications on top of this framework?
想要在这个框架上进行应用开发的人？

1222
01:32:07,260 --> 01:32:10,330
And my feeling is that
而我感觉是这样的，

1223
01:32:13,080 --> 01:32:18,570
resulted in lots of lost opportunities on both sides,
导致了双方都错失了许多机会，

1224
01:32:18,570 --> 01:32:24,500
the researchers in sort of expanding their horizons in their comfort zone.
研究人员在拓展他们的视野和舒适区方面。

1225
01:32:24,500 --> 01:32:29,970
And the application developers in not having a usable,
和应用程序开发者在没有一个可用的方面。

1226
01:32:29,970 --> 01:32:33,510
useful tool they can see as a useful idea, but
他们可以看作是一个有用的想法，但是

1227
01:32:33,510 --> 01:32:39,090
that the usability is my feeling is not where it should be 10 years in.
可用性在我看来，在十年的时间里并没有达到它应有的水平。

1228
01:32:40,240 --> 01:32:40,840
Stop there.
停在那里。

1229
01:32:47,091 --> 01:32:51,920
>> Okay, sorry I lost connectivity it seems.
好的，抱歉看起来我失去了连接。

1230
01:32:51,920 --> 01:32:57,410
Thank you I get the topic of NFD
谢谢，我明白了NFD的主题。

1231
01:32:57,410 --> 01:33:02,680
maybe we can take it among all
也许我们都可以一起承担这个任务。

1232
01:33:02,680 --> 01:33:07,741
that I might take over but,
我可能会接管，但是，

1233
01:33:13,729 --> 01:33:16,420
>> I assume, Kristen, should I go ahead?
我猜，Kristen，我应该继续吗？

1234
01:33:17,840 --> 01:33:19,550
>> I think you should go ahead.
我认为你应该继续。

1235
01:33:19,550 --> 01:33:22,160
>> Go ahead. >> So the same bullets as earlier so
继续。所以和之前一样的要点。

1236
01:33:22,160 --> 01:33:26,770
maybe I can just in terms of where things could be improved,
也许我可以就改进的地方提一些看法，

1237
01:33:26,770 --> 01:33:29,230
I agree with what Van was saying.
我同意Van所说的话。

1238
01:33:29,230 --> 01:33:32,385
>> Maybe here, Mr.
也许在这里，先生。

1239
01:33:32,385 --> 01:33:37,059
Bean, >> Yes.
Bean，>> 是的。

1240
01:33:37,059 --> 01:33:40,320
>> Okay, and
>> 好的，还有

1241
01:33:40,320 --> 01:33:45,590
certainly ease of use would go a long way in kind of two different ways.
当然，易用性在两个不同方面会有很大帮助。

1242
01:33:45,590 --> 01:33:49,200
One, certainly the act of experimentation at the application layer.
一方面，当然是在应用层进行实验的行为。

1243
01:33:49,200 --> 01:33:53,620
But also something I think we learned more recently from ICR
但也是我们最近从ICR那里学到的东西。

1244
01:33:53,620 --> 01:33:58,780
was being able to throw simple applications into
能够将简单的应用程序投入到

1245
01:33:58,780 --> 01:34:04,010
challenging network environments that lP deployment would struggle with.
面对具有挑战性的网络环境，IP部署可能会遇到困难。

1246
01:34:04,010 --> 01:34:09,300
With something that also is hard that it takes a fair amount to sustain
在这样的情况下还需要相当的努力才能维持。

1247
01:34:09,300 --> 01:34:15,260
a reasonable NDN network infrastructure for testing applications.
一个合理的NDN网络基础设施用于测试应用程序。

1248
01:34:15,260 --> 01:34:18,450
And so it means that some of the robustness and
这就意味着其中一些健壮性和

1249
01:34:18,450 --> 01:34:22,570
in particular for use of multiple even things as simple as
特别是对于使用多个即使是像简单的事物

1250
01:34:22,570 --> 01:34:26,850
use of multiple interfaces are implementing redundancy in producers.
使用多个接口在生产者中实现冗余。

1251
01:34:26,850 --> 01:34:31,410
And so on those things are challenging to do so both ease of use for
以及那些事情很难做到，同时也要便于使用，对于

1252
01:34:31,410 --> 01:34:34,450
applications but also ease of use in terms of
应用程序，同时也要在使用方面简便，

1253
01:34:34,450 --> 01:34:37,775
deploying in challenging situations where NDN's should be well.
在充满挑战的环境中部署，NDN应该表现良好。

1254
01:34:37,775 --> 01:34:43,090
And with even very simple applications that we that we already have,
即使是我们已经拥有的非常简单的应用程序，

1255
01:34:43,090 --> 01:34:45,940
and so those are two I think areas of improvement.
所以我认为那是两个需要改进的领域。

1256
01:34:45,940 --> 01:34:51,120
I think during some of the conversation, it feels like we are still orbiting around
我认为在谈话中的某些部分，我们仍然在围绕着这个问题打转。

1257
01:34:51,120 --> 01:34:57,030
network forwarding as the kind of the key part of the conversation.
网络转发作为谈话的关键部分。

1258
01:34:57,030 --> 01:34:57,992
And I also think,
我也这么认为，

1259
01:34:57,992 --> 01:35:02,954
Missha I think had mentioned this in previous conversations in other venues.
Missha我认为之前在其他场合的对话中提到过这个。

1260
01:35:02,954 --> 01:35:08,810
We may have missed some of the criticality of working with integrating storage and
我们可能忽略了集成存储工作的一些关键性。

1261
01:35:08,810 --> 01:35:12,640
trying to understand the crossover between at least from an application
试图理解至少从应用程序角度的交叉点。

1262
01:35:12,640 --> 01:35:14,020
developers perspective.
开发者的视角。

1263
01:35:14,020 --> 01:35:18,490
The crossover between what are networking problems and what our database problems.
在网络问题和数据库问题之间的交叉点。

1264
01:35:18,490 --> 01:35:22,820
And storage problems that kind of come together in trying to figure out how to
以及存储问题，这些问题在尝试解决如何进行时汇集在一起。

1265
01:35:22,820 --> 01:35:30,210
design applications to take full advantage of a data centric stack underneath.
设计应用程序以充分利用底层的数据中心堆栈。

1266
01:35:30,210 --> 01:35:33,700
And so hopefully I know, at least at UCLA,
希望至少在加州大学洛杉矶分校，我知道。

1267
01:35:33,700 --> 01:35:36,410
some of our research will hopefully come back around to that.
希望我们的一些研究能够回归到那个话题上。

1268
01:35:36,410 --> 01:35:39,570
So those are just a few things that I think could be improved.
所以那些只是我认为可以改进的几件事情。

1269
01:35:42,970 --> 01:35:43,600
>> Thank you, Jeff.
>> 谢谢你，杰夫。

1270
01:35:43,600 --> 01:35:48,460
And sorry about getting the slides wrong for you.
抱歉给你准备的幻灯片出错了。

1271
01:35:48,460 --> 01:35:50,530
Next in line would be Dave and
接下来轮到Dave了，还有……

1272
01:35:50,530 --> 01:35:54,540
here I extracted one line which is not really where things could improve.
这里我提取了一行，并不是真正能改进事情的地方。

1273
01:35:54,540 --> 01:35:59,333
But I think you already wanted to move in taking up a topic of your own
但我认为你已经想要自己选一个话题来深入探讨了。

1274
01:35:59,333 --> 01:36:03,885
when it comes to where things could be improved, please Dave.
在谈到哪些方面可以改进时，请讲，戴夫。

1275
01:36:06,636 --> 01:36:10,950
>> Well, I wanna respond to what some of the people have been saying here because,
好的，我想回应一下这里的一些人所说的话，因为，

1276
01:36:12,370 --> 01:36:19,020
Along about 1995, I had this bucket of cold water realization
大约在1995年，我突然意识到了一个冷酷的现实

1277
01:36:19,020 --> 01:36:23,976
about the future of the Internet, which is the technology was not shaping the future.
关于互联网的未来，技术并没有塑造未来。

1278
01:36:23,976 --> 01:36:29,420
It was the economics, it was the investment decisions.
它是经济学，它是投资决策。

1279
01:36:29,420 --> 01:36:33,430
And it was the role of the different actors in the ecosystem.
它是生态系统中不同参与者的角色。

1280
01:36:33,430 --> 01:36:35,220
That was shaping the future of the Internet.
这在塑造互联网的未来。

1281
01:36:36,530 --> 01:36:42,210
And I want to play off again, sort of what Spanng said and Jeff said and so forth.
我想再次发挥Spanng和Jeff等人所说的话的作用。

1282
01:36:43,420 --> 01:36:48,540
One of the challenges you have when you're trying to set up
在你尝试建立时面临的一个挑战是

1283
01:36:48,540 --> 01:36:52,940
a network in your home is the question of how
你在家里建立网络时的问题是如何

1284
01:36:52,940 --> 01:36:55,730
much you're dependent on resources that are not under your control.
你有多依赖于不受你控制的资源。

1285
01:36:57,180 --> 01:37:02,500
And and we do have a problem there that most consumers
我们确实在这里面临一个问题，那就是大多数消费者

1286
01:37:02,500 --> 01:37:06,720
are not qualified to import a Linux box into their house or on a server on it.
并不具备将Linux系统的计算机引入他们家中或在服务器上进行操作的资格。

1287
01:37:06,720 --> 01:37:07,280
And in fact,
实际上，

1288
01:37:07,280 --> 01:37:12,510
the ability to have services out in the cloud is very appealing until of course,
拥有云端服务的能力非常吸引人，直到当然，

1289
01:37:12,510 --> 01:37:15,990
you're amputated from the cloud and you discover your cat on lock your front door.
你突然被云服务断开，然后你发现你的猫竟然锁上了你的前门。

1290
01:37:17,200 --> 01:37:22,100
And I think that the tension we've dealt with in the global Internet
我们在全球互联网中所面临的紧张局势

1291
01:37:22,100 --> 01:37:25,450
is the realization that you're in an ecosystem in which you have to accept
是认识到你身处一个必须接受的生态系统中

1292
01:37:25,450 --> 01:37:28,590
the fact there are actors there whose incentives are not aligned with yours.
事实上，那里有些参与者的动机与你的不一致。

1293
01:37:29,750 --> 01:37:30,720
And so
因此

1294
01:37:30,720 --> 01:37:35,145
there is a question of what role you how very carefully how you delegate a role.
有一个问题，那就是你如何非常谨慎地委派一个角色。

1295
01:37:35,145 --> 01:37:40,730
And Jeff just talked about storage and you can't talk about storage in the network,
杰夫刚刚谈到了存储，而你不能在网络中谈论存储，

1296
01:37:40,730 --> 01:37:45,000
that sentence is not up I would like to unstained that sentence.
这句话不在上面，我想要弄懂那句话。

1297
01:37:46,800 --> 01:37:50,610
Because I don't trust all elements in the network equally.
因为我不完全信任网络中的所有元素。

1298
01:37:50,610 --> 01:37:55,110
I am not prepared to just talk about a homogeneous architecture of storage.
我不准备只讨论存储的同质化架构。

1299
01:37:57,270 --> 01:38:01,020
And I think that Vance comment about trust is dead on that.
我认为Vance关于信任的评论非常准确。

1300
01:38:01,020 --> 01:38:04,560
That the relationship between where things are done
在网络中，事情发生的地方必须与它们被信任的地方以及谁持有信任有关。

1301
01:38:04,560 --> 01:38:09,700
in the network has to relate to where they are trusted and who holds the trust.
在网络中，事情发生的地方必须与它们被信任的地方以及谁持有信任有关。

1302
01:38:09,700 --> 01:38:12,940
And I take a very edge centric view here.
我在这里采取了一种非常边缘中心的观点。

1303
01:38:12,940 --> 01:38:16,600
Let me say that which is trust ought to derive from users,
让我说一下，信任应该来源于用户，

1304
01:38:16,600 --> 01:38:20,580
that is to say, if I'm willing to trust Google, well,
也就是说，如果我愿意信任谷歌，那么，

1305
01:38:20,580 --> 01:38:23,780
that's my decision, doesn't mean you have to trust Google.
这是我的决定，并不意味着你也必须信任谷歌。

1306
01:38:23,780 --> 01:38:27,330
I don't want somebody up above telling me to trust Google, or
我不想要某个高高在上的人告诉我去信任谷歌，或者

1307
01:38:27,330 --> 01:38:30,580
trust Comcast, because Comcast is my provider.
信任康卡斯特，因为康卡斯特是我的服务提供商。

1308
01:38:30,580 --> 01:38:32,380
Now, that's the tension here,
现在，这就是这里的紧张关系，

1309
01:38:32,380 --> 01:38:36,520
that I have no choice as to whether to have Comcast as my provider.
我别无选择，只能用康卡斯特作为我的服务提供商。

1310
01:38:36,520 --> 01:38:40,140
And because I have no choice, I want to minimize the trust.
因为我别无选择，我想尽量减少信任。

1311
01:38:40,140 --> 01:38:41,120
And that actually says,
这实际上意味着，

1312
01:38:41,120 --> 01:38:46,820
maybe I don't want Comcast doing certain things in the architecture I want
也许我不希望康卡斯特在我想要的架构中做某些事情。

1313
01:38:46,820 --> 01:38:51,410
to minimize what they do precisely because I have to use them and I don't trust them.
为了尽量减少他们的行为，因为我必须使用他们的服务，而我又不信任他们。

1314
01:38:51,410 --> 01:38:55,180
And I need not trust them, I want to minimize my trust.
我不需要信任他们，我想尽量减少我的信任。

1315
01:38:55,180 --> 01:39:01,430
And and once you begin thinking about the positioning of function based on trust,
一旦你开始考虑基于信任的功能定位，

1316
01:39:01,430 --> 01:39:07,510
I think you may discover that you want to remodularize some of your thoughts.
我认为你可能会发现你想要重新构思你的一些想法。

1317
01:39:07,510 --> 01:39:10,966
I was going to say several other things that I'll just mention them because i
我本来还想说其他几件事，但我只是提一下因为我

1318
01:39:10,966 --> 01:39:13,340
don't want to run out of time here.
不想在这里耗尽时间。

1319
01:39:13,340 --> 01:39:16,270
All ideas when they get real come down with complexity.
所有的想法一旦变为现实，都会带来复杂性。

1320
01:39:16,270 --> 01:39:20,710
And we have to face the fact that one of the tests of
我们必须面对一个事实，即成功的一个考验是

1321
01:39:20,710 --> 01:39:25,130
an architecture is how well it copes with the complexity of success.
一个架构能否成功应对成功带来的复杂性。

1322
01:39:25,130 --> 01:39:29,840
Clearly I'd say the Internet has come down with a high degree of complexity.
显然，我会说互联网已经带来了高度的复杂性。

1323
01:39:29,840 --> 01:39:32,300
In some cases, it's powerful.
在某些情况下，它非常强大。

1324
01:39:32,300 --> 01:39:35,210
Some cases, it's incredibly irritating.
在某些情况下，它异常令人恼火。

1325
01:39:35,210 --> 01:39:38,690
I want to come back to this point of the power of state in the routers,
我想再次强调路由器中的状态功率这一点。

1326
01:39:38,690 --> 01:39:42,950
I think that's an idea who was full utility has not yet been extracted.
我认为这是一个尚未被完全利用的想法。

1327
01:39:44,790 --> 01:39:48,500
And of course, we knew what was going to be hard about information centric network,
当然，我们知道信息中心网络会遇到的困难。

1328
01:39:48,500 --> 01:39:50,880
which was information centric routing.
这就是以信息为中心的路由。

1329
01:39:50,880 --> 01:39:55,700
And I think there's a fundamental challenge there, which again relates to
我认为这里存在一个根本的挑战，这再次涉及到

1330
01:39:55,700 --> 01:40:00,780
how much I want to tell different parts of the network what I am doing.
我想要告诉网络中不同部分我在做什么的程度。

1331
01:40:00,780 --> 01:40:04,630
And I've always had this lurking concern.
而我一直有这个潜在的担忧。

1332
01:40:04,630 --> 01:40:06,500
And again, Vance and I have disagreed here.
而且，我和Vance在这里又有了分歧。

1333
01:40:06,500 --> 01:40:13,130
I've always had this lurking concern that maybe I would like, I don't want all
我一直有这样一个潜在的担忧，也许我会这样，我不想要所有

1334
01:40:13,130 --> 01:40:17,490
of the networks I'm using to know the name of all the information I'm retrieving.
我不想要我使用的所有网络都知道我检索的所有信息的名字。

1335
01:40:18,740 --> 01:40:24,020
And that's not a technical comment about trust and balance of power.
这不是关于信任和权力平衡的技术性评论。

1336
01:40:24,020 --> 01:40:27,780
And that's a dimension, which in fact,
这实际上是一个维度，

1337
01:40:27,780 --> 01:40:32,160
a lot of computer scientists are not well trained to think through.
很多计算机科学家没有受过良好的训练去深入思考。

1338
01:40:32,160 --> 01:40:36,110
So this is another forcing function which I think is becoming more and more
所以这是另一个强制功能，我认为它变得越来越

1339
01:40:37,220 --> 01:40:42,630
critical for us as the network becomes more and more a central part of society.
对我们来说至关重要，因为网络变得越来越成为社会的中心部分。

1340
01:40:42,630 --> 01:40:46,219
So those are the sort of my thoughts about what we ought to do and
所以这些就是我对我们应该做什么的一些想法。

1341
01:40:46,219 --> 01:40:49,065
that may have been my brown three answer as well.
这也可能是我之前的第三个答案。

1342
01:40:50,937 --> 01:40:55,350
>> So, of course I come from NSF, so I have the NSF perspective.
>> 所以，我来自国家科学基金会（NSF），因此我有国家科学基金会的视角。

1343
01:40:55,350 --> 01:41:02,785
I'm always concerned as the NDM teams about funding.
我一直像神经决策模型（NDM）团队一样关注资金问题。

1344
01:41:02,785 --> 01:41:10,280
So, the bigger the project gets the more people you have, the more money you need.
因此，项目越大，你需要的人手就越多，需要的资金也就越多。

1345
01:41:10,280 --> 01:41:15,810
It also I think bleeds from research to development to deployment.
它也我认为从研究到开发再到部署之间相互渗透。

1346
01:41:15,810 --> 01:41:22,130
And from NSF perspective, it's always where does the research begin and end?
从美国国家科学基金会（NSF）的角度来看，研究的起点和终点在哪里？

1347
01:41:22,130 --> 01:41:24,400
And if it's research, is it still innovative?
研究是否仍然具有创新性？

1348
01:41:25,770 --> 01:41:31,670
And does the research community that does the reviews of proposals see
研究社区在审查提案时是否能看到

1349
01:41:33,470 --> 01:41:38,670
the challenge and understand the challenges and NDN.
面临的挑战并理解NDN的挑战。

1350
01:41:38,670 --> 01:41:41,190
And not just say, well, IPS already solved it.
并不能只是说，嗯，IPS已经解决了这个问题。

1351
01:41:41,190 --> 01:41:42,850
So what are you doing?
那你在做什么？

1352
01:41:42,850 --> 01:41:44,137
Because it's already been solved.
因为它已经被解决了。

1353
01:41:44,137 --> 01:41:45,792
I think there's a lot of issues here and
我认为这里有很多问题。

1354
01:41:45,792 --> 01:41:48,410
other funding sources are going to have different concerns.
但我认为，这只是一个关于你如何筹集资金以及其他资金来源会有不同顾虑的问题。

1355
01:41:48,410 --> 01:41:53,087
But I think, this is just a problem of how do you fund and
但我认为，这只是一个关于你如何筹集资金的问题，并且

1356
01:41:53,087 --> 01:41:56,773
continue funding big projects like that.
继续为这样的大型项目筹措资金。

1357
01:41:56,773 --> 01:42:01,848
I think another big challenge is selling the end end concept and
我认为另一个重大挑战是推广最终的概念并且

1358
01:42:01,848 --> 01:42:06,840
its usage to broad spectrum of users and making it easy to use.
将其使用范围扩展到广泛的用户群，并使其易于使用。

1359
01:42:06,840 --> 01:42:08,640
This has been brought up before.
这之前已经被提出过了。

1360
01:42:08,640 --> 01:42:12,980
I think others have noted and I think I agree that use at the edge or within
我认为其他人已经指出了，我也同意，在边缘或内部使用

1361
01:42:12,980 --> 01:42:17,770
an enterprise is more promising than trying to take over the whole internet.
在企业内部使用比试图控制整个互联网更有前景。

1362
01:42:17,770 --> 01:42:20,330
But even that, even those are challenging.
但即便如此，那些也充满挑战。

1363
01:42:20,330 --> 01:42:24,390
I think the third up chat set of challenges
我认为第三个挑战是

1364
01:42:24,390 --> 01:42:28,390
is managing transitions because the context changed,
是管理过渡，因为情境发生了变化，

1365
01:42:28,390 --> 01:42:33,770
expertise may change, funnding may change, somebody sources, so on and so forth.
专业知识可能会变化，资金可能会变化，还有一些资源等等。

1366
01:42:33,770 --> 01:42:39,260
And then a question I have is as NDN moves from
把NDN从

1367
01:42:39,260 --> 01:42:45,100
all NDN development and research project out into usage and community, how
在将所有NDN开发和研究项目推向使用和社区的过程中，如何

1368
01:42:46,510 --> 01:42:52,280
do you create a common base of of NDN?
您是否应该创建一个NDN的共同基础？

1369
01:42:52,280 --> 01:42:56,410
Or do you just let 100 flowers grow independently is that okay or
或者你只是让百花齐放、独立成长，这样可以吗？还是……

1370
01:42:56,410 --> 01:42:58,450
is this going to be a future challenge?
这将是一个未来的挑战吗？

1371
01:42:58,450 --> 01:42:59,710
And then finally,
最后，

1372
01:42:59,710 --> 01:43:05,860
because my original interest in FIA was in supporting a secure internet.
因为我最初对FIA的兴趣在于支持一个安全的互联网。

1373
01:43:05,860 --> 01:43:10,470
I want to ask the question about in addition to designing or
我想问一个问题，除了设计之外……

1374
01:43:10,470 --> 01:43:14,098
having been secured by design is that also secured by implementation.
在设计上已经确保了安全，那么在实现上也同样得到了保障吗？

1375
01:43:14,098 --> 01:43:20,370
And are NDN folks using formal methods of verification or
NDN团队是否使用形式化验证方法？

1376
01:43:20,370 --> 01:43:24,720
other approaches that helped create a more reliable and
其他方法有助于创建更可靠和安全的产品基础设施代码集等。

1377
01:43:24,720 --> 01:43:29,930
secure product infrastructures code set and so on.
安全的产品基础设施代码集等。

1378
01:43:29,930 --> 01:43:35,470
And then do we need more research on new to NDN security risks?
我们是否需要对新的NDN安全风险进行更多的研究？

1379
01:43:35,470 --> 01:43:37,830
So I don't know the answers to those but
所以我不知道这些问题的答案，但是

1380
01:43:37,830 --> 01:43:41,520
those are some questions I would raise about the future.
这些是我对未来提出的一些问题。

1381
01:43:41,520 --> 01:43:46,950
>> So, if I were to summarize my position on where I think
那么，如果我总结一下我对我们所处位置的看法，我认为

1382
01:43:46,950 --> 01:43:52,630
things can be improved, it would be simply by saying we need a success story.
我们可以改进的地方，简单来说就是我们需要一个成功案例。

1383
01:43:52,630 --> 01:43:58,116
We need NDN to solve a problem from beginning to end,
我们需要NDN从头到尾解决一个问题，

1384
01:43:58,116 --> 01:44:04,120
be adopted, have users that are outside our circle.
被采纳，拥有我们圈子之外的用户。

1385
01:44:04,120 --> 01:44:09,450
And do something that these is universally recognized as useful.
并做一些被普遍认为有用的事情。

1386
01:44:11,160 --> 01:44:17,182
I think that will go a long way towards helping everybody else understand
我认为这将极大地帮助其他人理解。

1387
01:44:17,182 --> 01:44:22,922
that NDN can actually do things, be used in production and so forth.
NDN实际上可以做事情，可以用于生产等等。

1388
01:44:22,922 --> 01:44:25,740
And I think that can happen.
我认为那是可能的。

1389
01:44:26,940 --> 01:44:32,410
We started working with users with climate and
我们开始与关注气候和环境问题的用户合作。

1390
01:44:32,410 --> 01:44:34,780
physics and genomics, and I think that's great.
物理学和基因组学方面合作，我认为这很棒。

1391
01:44:34,780 --> 01:44:37,250
And I think that that should continue.
我认为这种合作应该继续下去。

1392
01:44:38,280 --> 01:44:43,680
And I really wanna see something useful coming out of them.
我真的希望能看到一些有用的东西从中产生出来。

1393
01:44:43,680 --> 01:44:47,702
And by useful I mean something that the the scientists will use.
而所谓有用，我的意思是科学家们会使用的东西。

1394
01:44:47,702 --> 01:44:52,890
And then actually turn around and say yes, this helped me to improve my research.
然后实际上回过头来说，是的，这帮助我改进了我的研究。

1395
01:44:54,450 --> 01:45:00,480
The the other area that I'm looking at these days and there's by no means
我最近在关注的另一个领域，并没有任何保证我们会成功，就是汽车部分。

1396
01:45:00,480 --> 01:45:05,940
any guarantee that we'll be successful, is the automotive part.
并没有任何保证我们会成功，就是汽车部分。

1397
01:45:05,940 --> 01:45:10,913
And then what I see there is an industry that has rapidly moved
然后我看到的是一个迅速发展变化的行业。

1398
01:45:10,913 --> 01:45:15,497
from networking that according to our standards will be
从我们的标准来看，将会是网络化的。

1399
01:45:15,497 --> 01:45:19,706
the Dark Ages the limbus, the canvas and so forth.
黑暗时代，边缘地带，帆布等等。

1400
01:45:19,706 --> 01:45:22,979
Through automotive Ethernet into a world where
通过汽车以太网进入一个世界，在这里……

1401
01:45:22,979 --> 01:45:27,654
all the Internet technologies have now become accessible to them.
所有的互联网技术现在都已经对他们开放了。

1402
01:45:27,654 --> 01:45:29,051
I mean, they're talking about security.
我的意思是，他们正在讨论安全问题。

1403
01:45:29,051 --> 01:45:34,872
They're talking about using VLANs to secure their devices.
他们正在讨论使用VLAN来保护他们的设备。

1404
01:45:34,872 --> 01:45:40,254
And they have moved from a tiny world of interconnected things in a car,
他们已经从汽车内部相互连接的小世界转变到了，

1405
01:45:40,254 --> 01:45:44,828
to dozens of ECUs in a car but also through connected vehicles
到车辆中数十个电子控制单元，还有通过相互连接的车辆。

1406
01:45:44,828 --> 01:45:49,872
through the infrastructure, essentially the rest of the world.
通过基础设施，基本上是连接了世界的其他部分。

1407
01:45:49,872 --> 01:45:53,200
That's a huge leap.
这是一个巨大的飞跃。

1408
01:45:53,200 --> 01:45:59,040
My impression is that they're hoping that Internet technologies are there and
我印象中他们希望互联网技术能够存在并且

1409
01:45:59,040 --> 01:46:06,980
they're ready to help them solve some of these big problems that they're facing.
他们准备帮助他们解决他们所面临的一些大问题。

1410
01:46:06,980 --> 01:46:12,460
But I suspect that just like what we have discovered, the problems
但我怀疑，就像我们所发现的那样，这些问题

1411
01:46:12,460 --> 01:46:17,110
in the Internet, they will soon find out that the Internet technologies that
他们很快就会发现，在互联网上，那些互联网技术

1412
01:46:17,110 --> 01:46:22,690
they're looking at may not be as wonderful as they initially think.
他们正在关注的东西可能并不像他们最初认为的那么美好。

1413
01:46:22,690 --> 01:46:29,122
And I'm hoping to be there with NDN to catch them when they realize that.
我希望当他们意识到这一点时，我能与NDN一起在那里支持他们。

1414
01:46:29,122 --> 01:46:31,140
Again, this may completely fail.
这可能会彻底失败。

1415
01:46:31,140 --> 01:46:34,530
I have no idea if this is going to succeed,
我不知道这是否会成功，

1416
01:46:34,530 --> 01:46:37,050
the automotive industry is very conservative.
汽车行业非常保守。

1417
01:46:37,050 --> 01:46:39,610
It's very standards oriented.
它非常注重标准。

1418
01:46:39,610 --> 01:46:45,371
They will not do things that haven't been vetted really well.
他们不会做那些没有经过非常仔细审查的事情。

1419
01:46:45,371 --> 01:46:48,280
But on the other hand, they are a very competitive industry.
但另一方面，他们是一个竞争非常激烈的行业。

1420
01:46:48,280 --> 01:46:54,910
And they are looking for ways to be on top of the competition.
而且他们在寻找方法以保持在竞争的前列。

1421
01:46:54,910 --> 01:46:59,783
And I'm hoping that the reaction we can get from them is something
我希望我们能从他们那里得到的反应是某种东西

1422
01:46:59,783 --> 01:47:04,568
analogous to what we got from the scientists when they saw NDN and
类似于当科学家们看到NDN时我们从他们那里得到的反应。

1423
01:47:04,568 --> 01:47:07,866
they said, I want this, I gotta have this.
他们说，我想要这个，我必须得到这个。

1424
01:47:07,866 --> 01:47:10,654
This is going to help me.
这将会帮助我。

1425
01:47:10,654 --> 01:47:14,870
So the jury's still out there, we will see.
所以结果还没有出来，我们拭目以待。

1426
01:47:14,870 --> 01:47:19,533
But just to summarize, I think what we need is success stories.
但总结一下，我认为我们需要的是成功案例。

1427
01:47:19,533 --> 01:47:22,079
I think we should try multiple places.
我认为我们应该尝试多个地方。

1428
01:47:24,080 --> 01:47:26,070
We're trying health, we're trying climate,
我们正在尝试健康领域，我们也在尝试气候领域。

1429
01:47:26,070 --> 01:47:28,670
we're trying automotive, we're trying other things.
我们正在尝试汽车行业，我们也在尝试其他领域。

1430
01:47:29,800 --> 01:47:34,700
But we need to keep trying and, hopefully get ourselves to a point
但我们需要继续尝试，希望能够让自己达到一个境界

1431
01:47:34,700 --> 01:47:38,560
where we do have this success story that we can point to, thanks.
我们确实有一个成功的案例可以指出来，谢谢。

1432
01:47:39,970 --> 01:47:46,942
>> So I think I wrote three points for what could be improved.
所以我想我写了三点可以改进的地方。

1433
01:47:46,942 --> 01:47:54,764
One is more usable applications and tools.
一个是更实用的应用程序和工具。

1434
01:47:54,764 --> 01:48:00,239
I think that's consistent with what previous panelists have talked about.
我认为这与之前的小组成员们讨论的内容是一致的。

1435
01:48:02,268 --> 01:48:08,250
So I think one problem is that we
所以我认为其中一个问题是我们

1436
01:48:08,250 --> 01:48:12,150
have abandoned some of the applications or
放弃了一些应用程序或

1437
01:48:12,150 --> 01:48:17,470
tools we developed ourselves and did not maintain them.
我们自己开发的工具却没有进行维护。

1438
01:48:17,470 --> 01:48:22,990
That's one issue that we need to address going forward.
这是我们未来需要解决的一个问题。

1439
01:48:22,990 --> 01:48:27,897
So whenever we update the libraries, we need to update
所以，每当我们更新库的时候，我们需要更新

1440
01:48:27,897 --> 01:48:33,030
the applications, make sure that they still function.
应用程序，确保它们仍然能够正常运行。

1441
01:48:33,030 --> 01:48:38,509
And also listen to the users and
并且也要倾听用户的声音，

1442
01:48:38,509 --> 01:48:44,610
make changes that they request.
做出他们所要求的改变。

1443
01:48:44,610 --> 01:48:49,910
So this is a lot of work, I think, for a research team.
所以我认为，对于一个研究团队来说，这是一项繁重的工作。

1444
01:48:49,910 --> 01:48:54,144
We are not, at least the funding,
我们至少在资金上并不是这样的，

1445
01:48:54,144 --> 01:49:00,424
most of it is not supposed to support maintenance or
大部分并不是用来支持维护或者

1446
01:49:00,424 --> 01:49:05,401
features in the tools or applications.
功能在工具或应用程序中。

1447
01:49:05,401 --> 01:49:10,696
But I think for usability, for maintaining a community,
但我认为为了可用性，为了维护一个社区，

1448
01:49:10,696 --> 01:49:15,244
we have to do that, that's our responsibility.
我们必须这么做，这是我们的责任。

1449
01:49:15,244 --> 01:49:20,353
That's something we have to commit to going forward.
这是我们今后必须承担的责任。

1450
01:49:20,353 --> 01:49:28,669
The second one is, Let me see actually,
第二个是，让我实际看看，

1451
01:49:31,623 --> 01:49:35,960
More wireless and mobile support.
更多的无线和移动支持。

1452
01:49:35,960 --> 01:49:44,624
And this has been lacking I think for awhile.
而且我认为这已经缺乏了一段时间。

1453
01:49:44,624 --> 01:49:48,935
I think most of us are not originally
我认为我们大多数人原本不是

1454
01:49:48,935 --> 01:49:54,404
researchers in the wireless mobile domain.
所以我们更习惯于在有线设置中进行研究。

1455
01:49:54,404 --> 01:50:02,070
So we're more used to doing research in a wired setting.
所以我们更习惯于在有线设置中进行研究。

1456
01:50:02,070 --> 01:50:04,950
But I think a lot of applications
但我认为很多应用程序

1457
01:50:04,950 --> 01:50:12,990
are more edge oriented.
它们更倾向于边缘计算。

1458
01:50:12,990 --> 01:50:15,730
They need wireless and mobile support.
它们需要无线和移动支持。

1459
01:50:15,730 --> 01:50:21,140
So that is something we really have to focus on for
所以这确实是我们必须要专注于的事情。

1460
01:50:21,140 --> 01:50:26,230
the next stage if we really want to
如果我们真的想要进入下一个阶段，

1461
01:50:26,230 --> 01:50:33,260
have a successful application that many end users will adopt.
我们需要有一个成功的应用程序，以便许多终端用户会采用。

1462
01:50:34,550 --> 01:50:36,970
So that's the second point.
这就是第二点。

1463
01:50:36,970 --> 01:50:44,100
The third point is more running code, not just designs in papers or simulations.
第三点是更多地运行代码，而不仅仅是论文中的设计或模拟。

1464
01:50:44,100 --> 01:50:49,920
But this is something I think the PIs and advisors have to pay attention to.
但这是我认为PI（主要研究员）和导师们需要注意的事情。

1465
01:50:53,100 --> 01:51:01,260
The students definitely need publications to graduate and for their job search.
学生们毕业和找工作时肯定需要发表论文。

1466
01:51:01,260 --> 01:51:03,921
We also need papers for funding.
我们也需要发表论文来获得资金。

1467
01:51:03,921 --> 01:51:09,554
But in order to have this architecture
但为了拥有这种架构

1468
01:51:09,554 --> 01:51:16,953
adopted by the community, we need running code.
被社区采纳，我们需要运行的代码。

1469
01:51:16,953 --> 01:51:24,290
Just like IETF, we have the RFC plus the running code, we need that too.
就像IETF一样，我们有RFC加上运行的代码，我们也需要这些。

1470
01:51:24,290 --> 01:51:30,375
So one, I think in one of the earlier NDN conferences,
所以我认为在早期的一个NDN会议上，

1471
01:51:30,375 --> 01:51:35,404
I said before graduate students graduates,
我之前说过，在研究生毕业之前，

1472
01:51:35,404 --> 01:51:42,833
they need to finish their implementation in NFT or the libraries.
他们需要在NFT或者库中完成他们的实现工作。

1473
01:51:42,833 --> 01:51:45,520
So I guess this is more for the advisors.
所以我猜这更多是针对顾问们的。

1474
01:51:45,520 --> 01:51:52,420
They need to keep in mind that the running code is as important as the publication.
他们需要牢记，运行中的代码和发表的出版物一样重要。

1475
01:51:54,730 --> 01:51:59,460
That's my three wishes of what could be improved.
这是我希望能改进的三个愿望。

1476
01:51:59,460 --> 01:52:04,230
>> So a lot of people already mentioned a lot of points.
很多人已经提到了很多观点。

1477
01:52:04,230 --> 01:52:06,140
I will just focus on one.
我将只关注其中一个。

1478
01:52:07,160 --> 01:52:12,576
Back to the house analogy Christian gave us, I think what we could
回到克里斯蒂安给我们的房子比喻，我认为我们可以

1479
01:52:12,576 --> 01:52:18,820
The improve is the functioning of the house and
提高房屋的功能性并且

1480
01:52:18,820 --> 01:52:22,470
engineering policy especially the interface between these causes.
工程政策尤其是这些原因之间的接口。

1481
01:52:22,470 --> 01:52:25,377
So that occasion and the network,
所以那个场合和网络，

1482
01:52:25,377 --> 01:52:31,099
when we started this Indian project is new internet architecture.
当我们开始这个印度项目时，它是新的互联网架构。

1483
01:52:31,099 --> 01:52:37,540
So people at least me included is a lot of I think about layer three, right.
所以至少包括我在内的人们，很多都在考虑第三层，对吧。

1484
01:52:37,540 --> 01:52:42,780
That's a network like that you have a new architecture, but
这就像你有了一个新的网络架构，但是

1485
01:52:42,780 --> 01:52:48,319
actually it's a very much understatement and
实际上这是非常轻描淡写的，还有

1486
01:52:48,319 --> 01:52:55,842
the impact or requirements of both the upper layer,
影响或要求包括上层，

1487
01:52:55,842 --> 01:53:01,510
the applications and as well as the lower layer two and the network media.
应用程序以及下层的网络媒体也是如此。

1488
01:53:01,510 --> 01:53:07,050
Otherwise you don't get all the full architectural benefits, right.
否则你就无法完全享受到架构的全部优势，对吧。

1489
01:53:07,050 --> 01:53:07,850
For example,
例如，

1490
01:53:07,850 --> 01:53:13,730
you can just run some very simple translation run over Indian network.
你可以在印度网络上运行一些非常简单的翻译。

1491
01:53:13,730 --> 01:53:17,680
Then you may be able to run it by your own be able to get all the full benefits,
那么你可能就能够自己运行它，从而获得所有的完整好处。

1492
01:53:18,890 --> 01:53:19,580
though.
但是。

1493
01:53:19,580 --> 01:53:26,320
But when you design network, we're constantly struggle between
但是在设计网络时，我们不断地在...之间挣扎

1494
01:53:26,320 --> 01:53:31,390
having systems that can work reasonably well with given
拥有可以与给定的系统合理工作的系统

1495
01:53:33,790 --> 01:53:38,140
underlying infrastructure, existing infrastructure on the internet.
现有的互联网基础设施。

1496
01:53:38,140 --> 01:53:42,630
You need to work on those reasonable while, so that you can compete or
您需要在这段合理的时间内努力工作，以便您可以竞争或

1497
01:53:42,630 --> 01:53:48,446
demonstrate but as well as providing the functionality is required.
提供所需的功能的同时，也要展示出来。

1498
01:53:48,446 --> 01:53:50,764
Wish applique [INAUDIBLE] So,
愿望贴花 [无法听清] 所以，

1499
01:53:50,764 --> 01:53:55,220
I think that was a lot of struggles through out the years.
我认为这些年来有很多挣扎。

1500
01:53:58,780 --> 01:54:05,660
With real or not bold enough to do some of and looking forward,
有真实的或者不够大胆去做一些事情，并且展望未来，

1501
01:54:05,660 --> 01:54:12,460
I think I totally agree with crystals and other people said, we need success story,
我认为我完全同意水晶和其他人说的，我们需要成功的故事，

1502
01:54:12,460 --> 01:54:17,340
we need applications that can make the case for any.
我们需要能够为任何情况做出论证的应用程序。

1503
01:54:17,340 --> 01:54:22,590
I think we need more iteration between application design and network design and
我认为我们需要在应用程序设计和网络设计之间进行更多的迭代。

1504
01:54:22,590 --> 01:54:27,600
to, to make that iteration effective and more often.
为了使那种迭代更有效并且更频繁。

1505
01:54:27,600 --> 01:54:32,130
I think that API that interface between the application and
我认为那个API作为应用程序与

1506
01:54:32,130 --> 01:54:35,629
the network, I think that is a crucial piece.
网络之间的接口，我认为那是一个关键部分。

1507
01:54:37,140 --> 01:54:39,860
The common name library developed by Jeff Burke,
杰夫·伯克开发的通用名称库，

1508
01:54:39,860 --> 01:54:45,770
I think that's very good foundation for this kind of API.
我认为这为这类API提供了非常好的基础。

1509
01:54:45,770 --> 01:54:51,570
Once we can flush out most of detail of this API that can help
一旦我们能够详尽地完善这个API的大部分细节，这将会有所帮助。

1510
01:54:51,570 --> 01:54:57,420
users to write applications without understanding,
用户可以在不理解的情况下编写应用程序，

1511
01:54:57,420 --> 01:55:02,840
the underlying details of Indian, they just look at how to manipulate data
他们只关注如何操作数据，而不必担心网络如何支持这一点。

1512
01:55:02,840 --> 01:55:06,280
without worrying how network supports that.
他们不必担心网络如何支持这一点。

1513
01:55:06,280 --> 01:55:09,540
And with that API and network can also think,
并且有了那个API，网络也能够进行思考，

1514
01:55:09,540 --> 01:55:13,480
hey, how can I support this API in a more efficient way?
~!@#$%^&*()

1515
01:55:13,480 --> 01:55:17,350
And of course, this API can take some time, either way.
当然，这个API可能需要一些时间来处理，不管怎样。

1516
01:55:17,350 --> 01:55:21,330
But I think that's, to me going forward.
但我认为对我来说，向前看就是这样。

1517
01:55:21,330 --> 01:55:23,220
That's the thing.
这就是问题所在。

1518
01:55:23,220 --> 01:55:26,090
Well, in the past, we shouldn't have done this much earlier.
嗯，在过去，我们本不应该这么早就这么做。

1519
01:55:26,090 --> 01:55:32,150
But going forward as a team, we should focus and have that flush out,
但是作为一个团队向前看，我们应该集中精力并且彻底解决这个问题，

1520
01:55:32,150 --> 01:55:38,570
so that we can allow one more application to be easily divided up by different
以便我们能够让另一个应用程序更容易地被不同的

1521
01:55:38,570 --> 01:55:43,590
users, as well as give them to evolve over time.
用户使用，并且随着时间的推移不断演变。

1522
01:55:45,030 --> 01:55:52,899
So, if I pick one thing concrete standpoint.
所以，如果我从一个具体的立场来选择一件事。

1523
01:55:52,899 --> 01:55:54,316
[INAUDIBLE].
~!@#$%^&*()

1524
01:55:54,316 --> 01:55:58,139
Between the functioning of the house and the, engineering of the house.
在房屋的运作和房屋的工程之间。

1525
01:56:02,228 --> 01:56:03,939
>> [INAUDIBLE].
~!@#$%^&*()

1526
01:56:03,939 --> 01:56:05,214
Yeah, go ahead.
是的，请继续。

1527
01:56:08,184 --> 01:56:12,199
>> I think next thing around two is leisure, next slide.
>> 我认为接下来大约两点的议题是休闲，下一张幻灯片。

1528
01:56:17,800 --> 01:56:21,550
>> Well, he put the for the two of the things together, but
>> 嗯，他把两件事情放在了一起，但是

1529
01:56:21,550 --> 01:56:24,510
let me just say that my answer to the second one about,
让我说说我的回答，关于第二个问题，

1530
01:56:24,510 --> 01:56:27,610
what could have been done better is really the first bullet.
可以做得更好的真的是第一个要点。

1531
01:56:27,610 --> 01:56:32,550
That is I wish we had been truly application driven architecture
这就是我希望我们当初真的是以应用驱动的架构发展。

1532
01:56:32,550 --> 01:56:41,100
development as we claim the in the early days of the project.
那样我们就能在项目初期像我们所声称的那样进行开发。

1533
01:56:41,100 --> 01:56:45,039
And then that will drive us to build more usable applications.
那么这将驱使我们构建更加易用的应用程序。

1534
01:56:46,420 --> 01:56:49,858
For that have some light words.
为此有一些轻描淡写的话语。

1535
01:56:49,858 --> 01:56:54,920
I have always feel happy that my last name started with Z so
我一直感到高兴，因为我的姓氏是以Z开头的，所以

1536
01:56:54,920 --> 01:56:57,180
and end up with the last one.
并且最终成为最后一个。

1537
01:56:57,180 --> 01:56:59,930
If things are there, divide the alphabet.
如果事情存在，就按字母表顺序来分配。

1538
01:56:59,930 --> 01:57:04,080
But today after last talk I really wish my last name started with A,
但今天在最后一次谈话之后，我真的希望我的姓氏是以A开头的，

1539
01:57:04,080 --> 01:57:08,510
I can go read after that, I think neither one should have
我那之后可以去读书，我认为两者都不应该有

1540
01:57:08,510 --> 01:57:12,410
put the situation in the proper time perspective.
将情况放入正确的时间角度来看。

1541
01:57:13,770 --> 01:57:19,560
Back then in 2010, we are under the future internet architecture program.
那时在2010年，我们是在未来互联网架构计划下。

1542
01:57:19,560 --> 01:57:24,260
And at that time, although we didn't say that we do application
那时候，虽然我们没有说我们做应用程序开发，

1543
01:57:24,260 --> 01:57:27,600
driven architecture developments, whether we're under the pressure
驱动架构的发展，无论我们是否承受着压力

1544
01:57:28,760 --> 01:57:34,380
about making the Indian scale to the global internet.
关于让印度规模扩展到全球互联网。

1545
01:57:34,380 --> 01:57:41,230
I remembered we get bombarded with all the questions, how this can possibly scale
我记得我们被所有这些问题轰炸，这怎么可能扩展规模。

1546
01:57:41,230 --> 01:57:46,150
when you keep the state per daily gram,
当你每天按克来保持状态时，

1547
01:57:46,150 --> 01:57:49,950
I think that's where the early days of effort went into,
我认为那是早期努力的投入之处，

1548
01:57:49,950 --> 01:57:55,720
which is the two response to the community about those challenging questions.
这是对社区关于那些具有挑战性问题的两种回应。

1549
01:57:56,820 --> 01:58:00,810
But with the hinge site, of course,
但是与铰链站点一样，当然，

1550
01:58:00,810 --> 01:58:05,780
we should have totally focused on just the application development.
我们本应该完全专注于应用程序开发。

1551
01:58:05,780 --> 01:58:11,260
And that will actually force all the hard problems on the table.
这实际上会把所有棘手的问题摆到桌面上来。

1552
01:58:11,260 --> 01:58:13,730
For example, the security,
例如，安全性，

1553
01:58:13,730 --> 01:58:18,670
when you divide the usable applications with the Indians notion that security
当你将可用的应用程序与印第安人的观念相结合，即安全性

1554
01:58:18,670 --> 01:58:23,070
has to be built into the gene of every single piece of the architecture.
必须将其构建到每一个架构部件的基因中。

1555
01:58:24,450 --> 01:58:28,960
Usability and security besides we get to the basic building block right, but
可用性和安全性除此之外，我们还得把基本构建块做对，但是

1556
01:58:28,960 --> 01:58:33,970
the usability of the security will be right there one has to address,
安全性的可用性将是必须要解决的问题。

1557
01:58:35,510 --> 01:58:40,350
what are the nicest stories about how Indian can easily support security but
抱歉，您提供的内容不完整，无法进行准确翻译。如果您能提供完整的句子或段落，我将很乐意为您翻译。

1558
01:58:40,350 --> 01:58:43,760
the code is not there in terms of usability.
代码在可用性方面并不存在。

1559
01:58:45,110 --> 01:58:49,350
They've mentioned about there's the complexity situation.
他们提到了复杂性的情况。

1560
01:58:49,350 --> 01:58:54,430
But once you feel the real applications, I think Jeff mentioned this many
但一旦你真正感受到了实际应用，我认为杰夫提到了这个很多次。

1561
01:58:54,430 --> 01:58:59,640
times is actually gonna highlight how you get the architecture right.
这实际上将突出展示你如何正确构建架构。

1562
01:58:59,640 --> 01:59:05,710
That can simplify the system design really by orders of magnitude.
这实际上可以将系统设计简化数个数量级。

1563
01:59:05,710 --> 01:59:06,785
Look at the today's internet.
看看今天的互联网。

1564
01:59:06,785 --> 01:59:10,540
Broad applications never cared about addresses.
广泛的应用从不关心地址。

1565
01:59:10,540 --> 01:59:16,410
That's why people are doing the HTTP using URL or URI rather than
这就是为什么人们使用URL或URI进行HTTP操作，而不是直接使用

1566
01:59:16,410 --> 01:59:22,030
IP addresses because they look for that piece of HTTP object, not the note.
因为它们寻找的是那个HTTP对象的一部分，而不是注释。这样连接到它，因为今天的互联网是基于地址工作的。

1567
01:59:22,030 --> 01:59:26,000
That connects to it, for the today's internet works on the address.
这样连接到它，因为今天的互联网是基于地址工作的。

1568
01:59:26,000 --> 01:59:32,210
And that created all the complexity about how we might between this disconnect,
这就产生了所有关于我们如何可能在这种脱节之间的复杂性，

1569
01:59:32,210 --> 01:59:36,250
between what the network does and what the applications want.
在网络所做之事与应用程序所需之间。

1570
01:59:36,250 --> 01:59:40,940
I think that how do we focus on the applications are building the use of
我认为我们应该如何专注于构建应用程序的使用。

1571
01:59:40,940 --> 01:59:42,090
applications.
应用程序。

1572
01:59:42,090 --> 01:59:45,600
I think all of these advantages of Indiana will be again, right.
我认为印第安纳的所有这些优势将会再次出现，对吧。

1573
01:59:46,750 --> 01:59:52,310
You can see it on the table regarding the naming question, and
你可以在桌子上关于命名问题看到它，还有

1574
01:59:52,310 --> 01:59:56,760
again, that thing can also be addressed if we have focused on the application.
再次，如果我们专注于应用程序，那个问题也可以得到解决。

1575
01:59:57,910 --> 02:00:04,470
The privacy or not worried about privacy applications were gonna tell us yeah,
如果我们不担心隐私的应用程序，它们会告诉我们的，是的。

1576
02:00:04,470 --> 02:00:09,430
and if a privacy becomes really the fundamental thing, I mean,
如果隐私真的成为了根本的事情，我的意思是，

1577
02:00:09,430 --> 02:00:11,960
where computer science everyone knows there's a quote
在计算机科学领域，每个人都知道有这样一句话。

1578
02:00:11,960 --> 02:00:15,490
that one level of indirection solve all the problem.
它不是那么多的语义名称。

1579
02:00:15,490 --> 02:00:17,930
It's not so much semantical names.
它不是那么多的语义名称。

1580
02:00:17,930 --> 02:00:23,690
It's the wrong choice for the rather edges that how you can obscure that name.
它是一个错误的选择，对于那些边缘部分，你怎样可以让那个名字变得模糊不清。

1581
02:00:23,690 --> 02:00:28,805
All you needed is really consistent mapping between whatever the names,
你所需要的只是在各种名字之间进行一致的映射，

1582
02:00:28,805 --> 02:00:35,830
you wish to use and whatever the names that get exposed to the outsiders.
你希望使用的名称，以及那些暴露给外人的名称。

1583
02:00:35,830 --> 02:00:39,850
So, back now we do the Indian light design.
所以，现在我们回来做印度风格的灯光设计。

1584
02:00:39,850 --> 02:00:41,830
We actually figure out how we can do that right?
我们实际上已经弄清楚我们该如何做这件事，对吧？

1585
02:00:42,850 --> 02:00:47,660
Using semantic names but not exposed as plain text of what you're talking about.
使用语义化的名称，但并不以明文形式暴露你所讨论的内容。

1586
02:00:49,450 --> 02:00:54,510
The, I think Betrand said things are the if we
贝特朗说的事情如果我们~!@#$%^&*()

1587
02:00:54,510 --> 02:00:59,890
want to do the Architecture driven, I mean, the application
想要做架构驱动的，我的意思是，应用程序

1588
02:00:59,890 --> 02:01:04,660
driven architecture development we had to make the applications easy.
我们必须让应用程序变得简单，以实现以架构为驱动的开发。

1589
02:01:04,660 --> 02:01:08,910
I did that tell people around, I think Jeff heard this many times that
我这样做是为了告诉周围的人，我认为Jeff已经听到这个很多次了，即

1590
02:01:08,910 --> 02:01:14,260
I think Jeff is really the boss of the edge-in team because he
我认为Jeff真的是边缘团队的老大，因为他

1591
02:01:14,260 --> 02:01:18,650
has kept telling us in now what you need to do,
一直在告诉我们现在你需要做什么，

1592
02:01:18,650 --> 02:01:22,380
we just didn't listen to that well.
我们只是没有好好听从那些建议。

1593
02:01:22,380 --> 02:01:25,199
And I think over the last year or so
我认为在过去的一年左右时间里

1594
02:01:25,199 --> 02:01:30,039
will help definitely change the direction of addressing
将会明确有助于改变解决问题的方向

1595
02:01:30,039 --> 02:01:35,299
the challenges of supporting NDN application development.
支持NDN应用开发的挑战。

1596
02:01:37,671 --> 02:01:41,250
And also Tellagami added the last sentence there.
Tellagami在最后加上了那句话。

1597
02:01:41,250 --> 02:01:47,360
The history actually is a filled with lots of kind of random factors you might think.
历史其实充满了许多你可能认为的随机因素。

1598
02:01:47,360 --> 02:01:51,770
Yeah and actually say that Indian team which has been lucky that we can just
是的，实际上可以说那支印度队很幸运，我们只需

1599
02:01:51,770 --> 02:01:58,100
work, he really pushed the architecture design forward
他真的推动了架构设计的进步。

1600
02:01:58,100 --> 02:02:05,070
by presenting the real issues that the applications actually care.
通过呈现应用程序实际关心的真正问题。

1601
02:02:05,070 --> 02:02:06,880
I mentioned this to Jeff myself.
我亲自向杰夫提到了这件事。

1602
02:02:06,880 --> 02:02:10,370
I think that I don't know how the India would help in over the ten years,
我认为我不知道印度在未来十年里将如何提供帮助，

1603
02:02:10,370 --> 02:02:14,060
I think 70 we're gonna eventually end up right but
我认为我们最终会正确地结束，但70可能有所指代，没有上下文我无法理解其含义。

1604
02:02:14,060 --> 02:02:19,060
the probably gonna take longer without the Jeff's view of unity.
可能在没有杰夫对团结的看法下，事情会花更长的时间。

1605
02:02:19,060 --> 02:02:19,820
That's all from me for now.
这就是我现在要说的全部内容。

1606
02:02:22,720 --> 02:02:24,170
>> Okay. Thank you, Lisa.
好的。谢谢你，丽莎。

1607
02:02:24,170 --> 02:02:28,830
Next slide in Christian's deck on round 3.
接下来是克里斯蒂安第三轮演示的下一张幻灯片。

1608
02:02:28,830 --> 02:02:34,130
The question is, where are we now and closing statements?
问题是，我们现在在哪里，以及结束语？

1609
02:02:34,130 --> 02:02:36,210
And starting with Van Jacobson.
开始讲述范·雅各布森。

1610
02:02:42,844 --> 02:02:47,560
>> I didn't know how to answer this one because it's without one answer.
我不知道该如何回答这个问题，因为它没有唯一的答案。

1611
02:02:53,748 --> 02:02:58,653
Different people have different views of the world and
不同的人对世界有着不同的看法，

1612
02:02:58,653 --> 02:03:03,670
they do their work based on their views and their goals.
他们根据自己的观点和目标来开展工作。

1613
02:03:08,866 --> 02:03:15,133
There's a growing interest in NDN as an idea and
对NDN作为一个理念越来越受到关注。

1614
02:03:15,133 --> 02:03:19,832
is a toolkit, it, many have said it
是一个工具包，很多人都这么说过。

1615
02:03:19,832 --> 02:03:24,218
needs work to flesh out the idea,
需要努力去充实这个想法，

1616
02:03:24,218 --> 02:03:30,016
make it more concrete, more understood and
使其更加具体、更易于理解并且

1617
02:03:30,016 --> 02:03:35,027
I think the toolkit needs quite a lot of
我认为这个工具包需要相当多的~!@#$%^&*()

1618
02:03:35,027 --> 02:03:40,982
work because it's been research vehicle and
因为它一直是研究用的车辆，所以需要很多工作。

1619
02:03:40,982 --> 02:03:46,020
it contains many different agendas.
它包含了许多不同的议程。

1620
02:03:46,020 --> 02:03:52,108
It's way too vague and as Leisha pointed out,
它过于模糊不清，正如莱莎所指出的，

1621
02:03:52,108 --> 02:03:57,884
its original genesis was the FIA project and
它的原始起源是FIA项目和

1622
02:03:57,884 --> 02:04:04,460
it was very focused on next generation internet.
它非常专注于下一代互联网。

1623
02:04:04,460 --> 02:04:08,468
So it was focused on global scale,
所以它专注于全球范围。

1624
02:04:08,468 --> 02:04:13,307
which is not really the target of Indian,
它并非真正是印度的目标，

1625
02:04:13,307 --> 02:04:20,221
the Internet does a really really good job at local scale but
互联网在本地规模上做得非常非常好，但是

1626
02:04:20,221 --> 02:04:25,010
it's not so great at local scale.
在本地规模上就没那么好了。

1627
02:04:25,010 --> 02:04:30,380
Like my house, the solving
解决我家的问题，

1628
02:04:31,610 --> 02:04:36,860
local problems locally is not something that's easy with the internet.
本地问题在互联网上并不容易解决。

1629
02:04:36,860 --> 02:04:39,772
It should be easy with NDN.
但是使用NDN应该很容易。

1630
02:04:39,772 --> 02:04:45,200
But the toolkit we have doesn't support it.
但是我们拥有的工具包不支持它。

1631
02:04:45,200 --> 02:04:46,870
As land pointed out.
正如Land所指出的。

1632
02:04:46,870 --> 02:04:52,600
Wireless has been broken in NFV for several years now, as I discovered,
无线在NFV中已经损坏了好几年，正如我所发现的，

1633
02:04:52,600 --> 02:05:00,590
much to my chagrin when trying to use it locally, and that's kind of inexcusable.
在尝试本地使用时，这让我非常懊恼，这种情况有些无法原谅。

1634
02:05:00,590 --> 02:05:05,130
It still supports a broadcast model but it's fine replicated unicast and
它仍然支持广播模型，但复制单播也是可以接受的。

1635
02:05:05,130 --> 02:05:06,950
haven't spoken.
我们还没有说过话。

1636
02:05:06,950 --> 02:05:07,550
I'm sorry.
我很抱歉。

1637
02:05:08,750 --> 02:05:09,610
You've got radios.
你们有收音机。

1638
02:05:09,610 --> 02:05:10,730
They should be radios.
他们应该是收音机。

1639
02:05:15,530 --> 02:05:22,670
Hey, I think some of the problems that they've
嘿，我认为他们遇到的一些问题，他们已经

1640
02:05:22,670 --> 02:05:27,860
brought up both struck me one because they're gonna related.
他们提出的两个问题都让我印象深刻，因为它们是相关的。

1641
02:05:33,991 --> 02:05:38,269
You get complexity when you get big because you have a lot of different
你在变大的时候会遇到复杂性，因为你会有很多不同的...

1642
02:05:38,269 --> 02:05:41,530
interests that you've got to balance and control.
利益，你必须去平衡和控制。

1643
02:05:42,880 --> 02:05:46,810
And if you want something with high function, but
如果你想要的是功能高端的东西，但是

1644
02:05:46,810 --> 02:05:52,010
it's at a global scale you
它是在全球范围内的你。

1645
02:05:52,010 --> 02:05:55,980
don't wanna end up high function means you don't want the lowest common denominator.
不想最终只追求高效率意味着你不想满足于最低公约数。

1646
02:05:55,980 --> 02:06:00,050
But global scale means you've got kazillion constraints.
但全球规模意味着你将面临数不清的限制。

1647
02:06:00,050 --> 02:06:07,070
And so you end up with something that's not nearly as tuned as it could be
因此，你最终得到的东西可能没有达到它本可以达到的那种调整精度。

1648
02:06:08,810 --> 02:06:13,230
in the end lets you do things that local scale.
最终让你能够做到本地规模的事情。

1649
02:06:13,230 --> 02:06:17,800
And again we're trying to do it in my house where I'm sitting,
我们再次尝试在我正坐着的房子里实施这一计划。

1650
02:06:17,800 --> 02:06:23,210
we're trying to set up an IoT system based on a very simple pub sub
我们正在尝试建立一个基于非常简单的发布/订阅模型的物联网系统。

1651
02:06:23,210 --> 02:06:29,690
over Indian using local trust schemas that are more or less automatically set up.
我们正在利用印度的本地信任模式，这些模式或多或少是自动建立的。

1652
02:06:31,490 --> 02:06:33,650
I think
我认为

1653
02:06:36,950 --> 02:06:40,720
we're avoiding traps, like saying there has to be a common namespace,
我们在避免陷阱，比如说必须有一个公共的命名空间，

1654
02:06:40,720 --> 02:06:44,780
because there isn't, that namespace is bind, right up.
因为并不存在，那个命名空间是紧密绑定的。

1655
02:06:44,780 --> 02:06:49,350
I generated the search that anchor that namespace.
我生成了锚定那个命名空间的搜索。

1656
02:06:49,350 --> 02:06:53,410
They never leave this house, I can't even get the signing key is buried in
他们从不离开这所房子，我甚至无法获取到埋藏在里面的签名密钥。

1657
02:06:53,410 --> 02:06:58,480
a hardware module, a TPM that I can't pull it out.
所以只有房子里的东西才能使用那个命名空间，还有一个我无法取出的硬件模块，一个TPM。

1658
02:06:58,480 --> 02:07:04,117
So only things in the house that can you can use that namespace and
所以只有房子里的东西才能使用那个命名空间，

1659
02:07:04,117 --> 02:07:08,540
that really limits
这确实限制了

1660
02:07:08,540 --> 02:07:12,950
the problems that you can get into with a routing, I never have to worry about these
你可能会遇到的路由问题，我从不需要担心这些。

1661
02:07:12,950 --> 02:07:16,470
devices routing over the internet because they can't get to the internet.
因为这些设备无法连接到互联网，所以它们无法通过互联网进行路由。

1662
02:07:16,470 --> 02:07:18,750
They can't get out of the house.
他们无法离开家。

1663
02:07:18,750 --> 02:07:23,340
There's a really limited number of things that can do anything in that namespace and
在那个命名空间中，能够起作用的事物真的很有限。

1664
02:07:23,340 --> 02:07:27,120
they all talk by a broadcast so they never rout.
他们都是通过广播进行通信，因此从不需要路由。

1665
02:07:27,120 --> 02:07:32,000
There's no net any way that
信息想要上网的唯一方式是通过一个重新发布它的代理。

1666
02:07:32,000 --> 02:07:37,520
information wants to get to the internet is via an agent that republishes it.
信息想要上网的方式是通过一个重新发布它的代理。

1667
02:07:38,660 --> 02:07:41,640
And that agent is something that I own.
而那个代理是我所拥有的东西。

1668
02:07:41,640 --> 02:07:46,510
And it can filter the information the way that I want it filtered.
它可以按照我希望的方式过滤信息。

1669
02:07:47,668 --> 02:07:53,900
I'll tell our solar
我会告诉我们的太阳能公司关于我们面板生产的事情，因为他们需要它来

1670
02:07:53,900 --> 02:07:58,050
company something about the production of our panels because they need it for
公司的事情，因为他们需要它来进行

1671
02:07:58,050 --> 02:08:03,100
maintenance, but I'm the one that presents them that information and
维护保养，但提供给他们这些信息的人是我，并且

1672
02:08:03,100 --> 02:08:06,920
it's done by my agent on the border and they can't talk to my panels.
由我在边境的代理完成，他们无法与我的面板对话。

1673
02:08:09,870 --> 02:08:11,530
So, I think that you can.
所以，我认为你可以。

1674
02:08:14,059 --> 02:08:18,419
Make pieces that co-evolve, if you start locally and
制作可以共同演变的部分，如果你从本地开始，

1675
02:08:18,419 --> 02:08:24,228
solve local problems, that solution inherently includes a boundary.
解决本地问题，那个解决方案本质上包含了一个边界。

1676
02:08:24,228 --> 02:08:30,410
You've got a set of names that you know exactly who the community is,
你有一组名字，你确切地知道那是谁的社区，

1677
02:08:30,410 --> 02:08:34,710
and that makes a boundary that you can then put agents that say,
这样就形成了一个边界，你可以在其上放置代理，它们会说，

1678
02:08:34,710 --> 02:08:38,890
all right, here's how this community is going to interact with the outside world.
好的，这就是这个社区将如何与外界互动。

1679
02:08:38,890 --> 02:08:45,550
With some other community or with some provider that I think lets you grow
与其他社区或者我认为能让你成长的提供者互动。

1680
02:08:45,550 --> 02:08:51,870
in an orderly way, preserve the economics but not influence the privacy.
有序地保持经济效益，但不影响隐私。

1681
02:08:51,870 --> 02:08:54,530
I don't think we've done enough work there, but
我认为我们在这方面还没有做足够的工作，但是

1682
02:08:54,530 --> 02:08:56,010
I think there's huge potential there.
我认为那里有巨大的潜力。

1683
02:08:57,070 --> 02:08:57,570
Stop.
停止。

1684
02:08:58,920 --> 02:09:04,090
>> Sure, I think we've already talked,
当然，我认为我们已经谈过了，

1685
02:09:04,090 --> 02:09:09,780
on on this panel I think about the, and yesterday in the community meeting, about
在这个小组讨论中我在思考，还有昨天在社区会议上，关于

1686
02:09:09,780 --> 02:09:14,546
a lot of different application areas where there's interest in potential for NDN.
很多不同的应用领域对NDN都表现出了兴趣和潜力。

1687
02:09:14,546 --> 02:09:18,470
But I think just to add one different perspective or
但我认为仅仅为了增加一个不同的视角或

1688
02:09:18,470 --> 02:09:23,820
different group of users is that we've had some discussions, and Wayne alluded to,
不同用户群体的讨论，正如韦恩所提到的，

1689
02:09:23,820 --> 02:09:28,890
is that it does seem like there's a nice opportunity to make the existing
它确实似乎是一个很好的机会去利用现有的

1690
02:09:28,890 --> 02:09:34,910
set of ideas and tools available to people who are not industries.
向不是行业从业者的人们提供一套可用的想法和工具。

1691
02:09:34,910 --> 02:09:39,340
Who are making smaller interesting experimental projects in the hacker and
在黑客和制造者空间中进行小型有趣实验项目的是哪些人？

1692
02:09:39,340 --> 02:09:42,830
maker space in education that
在教育中的创客空间，那

1693
02:09:42,830 --> 02:09:48,050
are basically building on existing tools for decentralization.
基本上是在现有的去中心化工具基础上进行构建。

1694
02:09:48,050 --> 02:09:53,390
Whether it's coming from the IPFS realm or DAT, other solutions that may or
可能来自IPFS领域或DAT，其他可能的解决方案或许

1695
02:09:53,390 --> 02:09:57,240
may not be compatible with an NDN way of thinking, but are when you say,
可能与NDN的思维方式不兼容，但当你说的时候，它们是兼容的，

1696
02:09:57,240 --> 02:10:00,180
I'm gonna make a decentralized app or where people are looking.
我打算开发一个去中心化的应用程序，供人们浏览。

1697
02:10:00,180 --> 02:10:04,750
And it still is sort of fascinating to me that we haven't yet
而且对我来说仍然相当有趣的是，我们还没有

1698
02:10:04,750 --> 02:10:10,630
been able to position NDN for that community as an experimental tool set.
成功地将NDN定位为那个社区的一套实验性工具。

1699
02:10:10,630 --> 02:10:15,980
I think the other example recently, being remote from
我认为最近的另一个例子是，由于远离

1700
02:10:15,980 --> 02:10:20,980
our UCLA facilities has caused it to look at zero tier and
我们的加州大学洛杉矶分校设施导致它开始考虑使用ZeroTier这样的工具，以及~!@#$%^&*()

1701
02:10:20,980 --> 02:10:24,320
other solutions to create sort of virtualized ethernet networks
其他解决方案来创建一种虚拟化的以太网网络

1702
02:10:27,820 --> 02:10:29,960
among the systems and devices that we wanna work with.
在我们想要工作的系统和设备之间。

1703
02:10:29,960 --> 02:10:33,240
And so that the half of me that has to deploy things
以便我必须部署事务的那一半

1704
02:10:33,240 --> 02:10:37,140
is excited about the solutions that are out there for
对于那些存在的解决方案感到兴奋

1705
02:10:37,140 --> 02:10:43,250
reasonable deployment of some remote and quasi decentralized apps.
合理部署一些远程和准去中心化应用程序。

1706
02:10:43,250 --> 02:10:49,110
And then the part of me looking at an NDN is like why can't we deliver the current
然后我看着NDN的那部分就在想，为什么我们不能交付当前的

1707
02:10:49,110 --> 02:10:54,980
ideas, which may not be done, may not be ready for certain applications to that
想法可能尚未完成，可能还不适用于某些应用。

1708
02:10:54,980 --> 02:10:59,919
community that would like to experiment with decentralized applications.
希望尝试分布式应用的社区。

1709
02:11:01,030 --> 02:11:03,520
And that's kind of a frustrating point to be at.
这确实是一个令人沮丧的境地。

1710
02:11:03,520 --> 02:11:07,770
But it does seem to sort of reflect this point that we're at now,
但它似乎确实反映了我们现在所处的这个时点，

1711
02:11:07,770 --> 02:11:12,768
which is there really are two faces to use the NDN term maybe poorly.
对于NDN社区和NDN架构来说，确实有两种面孔去使用NDN这个术语，或许这种说法并不准确。

1712
02:11:12,768 --> 02:11:16,500
For the NDN community and the NDN architecture which
对于NDN社区和NDN架构来说，确实有两种面孔去使用NDN这个术语，或许这种说法并不准确。

1713
02:11:16,500 --> 02:11:21,520
are the face looking to users that want solutions and
是面向寻求解决方案的用户的那一面，

1714
02:11:21,520 --> 02:11:26,350
then the face that needs to continue driving forward the individual
那是需要继续推动个体前进的那一面，

1715
02:11:26,350 --> 02:11:30,110
sort of research topics to make the architecture viable and secure.
这些研究课题在某种程度上是为了使得架构可行且安全。

1716
02:11:30,110 --> 02:11:34,970
And I think it's an exciting place to be in, but I think both of them have the type
我认为这是一个令人兴奋的领域，但我认为这两者都有这种类型。

1717
02:11:34,970 --> 02:11:39,150
of funding and structural challenges that Darlene alluded to earlier.
的资金和结构性挑战，这些是Darlene早些时候提到的。

1718
02:11:39,150 --> 02:11:43,827
And putting some energy around figuring out how to get both of those things moving
并且投入一些精力去搞清楚如何让这两件事情都动起来。

1719
02:11:43,827 --> 02:11:46,108
is both daunting and kind of exciting.
既让人畏惧又有点令人兴奋。

1720
02:11:49,583 --> 02:11:51,200
>> Thanks, Jeff.
>> 谢谢，杰夫。

1721
02:11:51,200 --> 02:11:53,210
Dave, what are your thoughts on the question?
戴夫，你对这个问题有什么看法？

1722
02:11:53,210 --> 02:11:53,990
Where are we now?
我们现在在哪里？

1723
02:11:55,530 --> 02:11:59,450
>> I know we're running behind, so let me try to be quick.
>> 我知道我们进度落后了，所以让我尽快说。

1724
02:11:59,450 --> 02:12:03,280
I absolutely understand what Jeff was saying where he wants to get
我完全理解杰夫所说的，他想要得到

1725
02:12:03,280 --> 02:12:06,620
tools out there in front of the hacker maker community and so forth.
将工具展示在黑客、创客社区等群体面前。

1726
02:12:06,620 --> 02:12:11,890
But if this architecture is going to succeed,
但如果这种架构要成功，

1727
02:12:11,890 --> 02:12:17,740
it has to be usable by people who do not have that skill set.
它必须能够被那些没有那些技能的人使用。

1728
02:12:17,740 --> 02:12:23,010
And I was listening to Van talking about setting up his home, and
我在听Van谈论布置他的家时，

1729
02:12:23,010 --> 02:12:28,000
I absolutely believe in Van's desire to have
我绝对相信Van想要拥有

1730
02:12:28,000 --> 02:12:30,680
an edge centric solution, I'm not disagreeing at all.
一个以边缘为中心的解决方案，我一点也不反对。

1732
02:12:35,493 --> 02:12:41,006
And what the market has learned is that users are happy having services
市场已经意识到，用户对于使用服务是满意的。

1733
02:12:41,006 --> 02:12:46,160
dedicated into the cloud because it makes them easier to manage.
因为这使它们更易于管理，所以用户愿意将服务专注地投入到云端。

1734
02:12:47,330 --> 02:12:51,420
And we lose a great deal of autonomy because of that.
因此，我们失去了很大一部分自主权。

1735
02:12:51,420 --> 02:12:56,540
And in fact, the users, if you look at behavior, are happy to give
实际上，如果你观察用户的行为，他们乐于放弃——

1736
02:12:56,540 --> 02:13:01,970
up that autonomy, give up that control, and lose control of the trust structure.
因为他们放弃了那种自主权，放弃了控制权，失去了对信任结构的掌控。

1737
02:13:01,970 --> 02:13:05,060
Because otherwise they're left with an unmanageable situation.
因为否则他们会陷入一种难以管理的局面。

1738
02:13:06,100 --> 02:13:10,990
And so I would say that there are two big challenges here.
所以我会说这里有两个主要的挑战。

1739
02:13:10,990 --> 02:13:13,620
And one of them is building applications is big.
其中一个挑战是构建应用程序的规模很大。

1740
02:13:15,250 --> 02:13:18,720
Applications are bigger than, I meanif you look at the complexity of the Internet
与互联网的复杂性相比，应用程序的规模要大得多，我的意思是如果你仔细观察。

1741
02:13:18,720 --> 02:13:22,660
versus the complexity of big applications, applications are a lot harder.
与大型应用程序的复杂性相比，应用程序的难度要大得多。

1742
02:13:22,660 --> 02:13:26,850
Where you get the resources, the commitment to build the applications.
你从哪里获取资源，以及建立应用程序的决心。

1743
02:13:26,850 --> 02:13:30,440
And then the second one is to think through from the very beginning
然后第二点是从一开始就仔细思考。

1744
02:13:30,440 --> 02:13:34,480
the question of systemic usability.
系统可用性的问题。

1745
02:13:34,480 --> 02:13:38,440
And I think that that's a question which is almost in some senses independent
我认为这是一个在某种意义上几乎是独立的问题。

1746
02:13:38,440 --> 02:13:39,060
of NDN.
即是说，我可以提出一个完全相同的问题，关于NDN的布线。

1747
02:13:39,060 --> 02:13:41,710
That is to say, I could ask exactly the same question about wiring up
即是说，我可以提出一个完全相同的问题，关于布线的问题。

1748
02:13:41,710 --> 02:13:44,450
my house with the Internet.
连接我的房子到互联网。

1749
02:13:44,450 --> 02:13:47,625
If NDN has made it easier, that's fine.
如果NDN使得这一切变得更容易，那就太好了。

1750
02:13:47,625 --> 02:13:50,450
But the proof of that is you can give this to somebody who doesn't know what
但是证明这一点的是，你可以把这个交给一个不知道什么是网络的人，他们可以启动它并使其工作。

1751
02:13:50,450 --> 02:13:52,930
a network is and they can turn it on and make it work.
网络是什么，他们可以打开它并使其运行。

1752
02:13:52,930 --> 02:13:56,870
And I think that's a really important challenge going forward.
我认为这是一个向前迈进时非常重要的挑战。

1753
02:13:56,870 --> 02:13:59,109
And it's big and it's clumsy, and
它又大又笨重，而且

1754
02:13:59,109 --> 02:14:02,775
computer scientists don't like to do that kind of stuff.
计算机科学家不喜欢做那种事情。

1755
02:14:06,813 --> 02:14:08,210
>> Darlene, any final thoughts?
>> 达琳，最后有什么想法吗？

1756
02:14:11,454 --> 02:14:16,464
>> Yeah, so much of what's been said in the panel has been extensions
>> 是的，在小组讨论中所说的很多内容都是对我之前听到的东西的扩展，或者是更多、更好、更清晰的陈述。

1757
02:14:16,464 --> 02:14:22,560
of things that I've heard before or more or better, more clear statements.
的事情我之前听说过，或者是更多的、更好的、更清晰的陈述。

1758
02:14:22,560 --> 02:14:26,940
But the thing that I have not heard before, and I'm curious about whether or
但我之前没听说过的事情，我很好奇是否……

1759
02:14:26,940 --> 02:14:29,370
not you knew this in 2010.
你在2010年并不知道这个。

1760
02:14:29,370 --> 02:14:34,730
Is the statement about should have focused on applications, not on global
应该专注于应用，而不是全球架构，或者专注于更小的

1761
02:14:34,730 --> 02:14:40,127
architectures, or focused on smaller
架构，或者专注于更小的

1762
02:14:40,127 --> 02:14:46,600
enterprise and location.
企业和地点。

1763
02:14:46,600 --> 02:14:50,220
Is this something you knew in 2010 or is that something you've come to realize?
这是你在2010年就知道的事情，还是你后来才意识到的？

1764
02:14:51,230 --> 02:14:52,710
That's my question to the community.
这是我对社区的问题。

1765
02:14:54,090 --> 02:14:56,878
>> That's something we knew in 2010 was,
>> 那是我们在2010年就知道的事情，

1766
02:15:01,435 --> 02:15:05,488
When Ben was describing the internet at ICCC in 1977,
当本在1977年的ICCC上描述互联网时，

1767
02:15:05,488 --> 02:15:10,100
Andy Frazier said, are you trying to reinvent the phone system?
安迪·弗雷泽问道，你是在尝试重新发明电话系统吗？

1768
02:15:10,100 --> 02:15:10,770
Ben said, no,
本说，不，

1769
02:15:10,770 --> 02:15:15,070
that would be stupid, we're trying to do things that the phone system doesn't do.
这样做会很愚蠢，我们正试图做电话系统做不到的事情。

1770
02:15:16,090 --> 02:15:21,520
And that was I thought a massively successful approach.
而我认为那是一个非常成功的方法。

1771
02:15:21,520 --> 02:15:26,440
And that's what we tried to follow within NDN by bringing
而这正是我们在NDN中尝试遵循的方法，通过引入

1772
02:15:26,440 --> 02:15:31,070
in applications that were the pain points
在应用中的痛点

1773
02:15:31,070 --> 02:15:34,490
of the Internet Protocol applications that weren't well served by the Internet.
因此，这并不是重新发明互联网，而是尝试为互联网协议应用中未能很好服务的部分发明通信方式。

1774
02:15:34,490 --> 02:15:40,738
So it was not reinvent the Internet, try and invent communications for
因此，这并不是重新发明互联网，而是尝试为

1775
02:15:40,738 --> 02:15:45,230
things that weren't well served by the Internet.
事物，这些事物并没有被互联网很好地服务。

1776
02:15:46,880 --> 02:15:51,806
>> I don't think that's necessarily what I heard when you said do applications and
我不认为这正是我听到你提到应用程序时的意思。

1777
02:15:51,806 --> 02:15:53,970
don't do, well anyway, that's okay.
不用做，反正，没关系。

1778
02:15:53,970 --> 02:16:00,029
But I found this really an interesting set of comments.
但我发现这真是一组有趣的评论。

1779
02:16:05,285 --> 02:16:07,910
>> Final thoughts?
>> 最后的想法？

1780
02:16:07,910 --> 02:16:09,680
>> Yeah, I'll be very brief.
>> 嗯，我会尽量简短。

1781
02:16:09,680 --> 02:16:14,220
So I think we're still a research project and
所以我认为我们仍然是一个研究项目，

1782
02:16:15,990 --> 02:16:19,500
we need to move out of being a research project into
我们需要从一个研究项目转变成

1783
02:16:21,660 --> 02:16:24,150
something that will actually help users.
一个真正能帮助用户的东西。

1784
02:16:24,150 --> 02:16:28,875
And we're having great conversations, discussing
我们正在进行非常棒的交流，讨论着

1785
02:16:28,875 --> 02:16:33,749
NDN and what it is and what it should be sort of at the fundamental level.
NDN及其本质上是什么以及它应该是什么。

1786
02:16:36,280 --> 02:16:41,160
What I'd like to see too at the same time in parallel with those conversations
我也希望同时并行地看到那些对话。

1787
02:16:41,160 --> 02:16:45,530
is reaching out to people out there who have real problems,
正在接触那些真正有问题的人。

1788
02:16:45,530 --> 02:16:48,810
trying to understand what their problems are, where their pain points are.
试图理解他们的问题是什么，他们的痛点在哪里。

1789
02:16:48,810 --> 02:16:54,740
And then sort of standing up the NDN approach to these problems,
并且开始采用NDN的方法来解决这些问题，

1790
02:16:54,740 --> 02:16:58,350
and trying to understand how NDN would solve these problems.
并尝试理解NDN如何解决这些问题。

1791
02:16:58,350 --> 02:17:04,743
I think these approach would not only help users understand NDN,
我认为这些方法不仅会帮助用户理解NDN，

1792
02:17:04,743 --> 02:17:09,430
but also help us mature our thinking about NDN.
而且还有助于我们深化对NDN的思考。

1793
02:17:09,430 --> 02:17:14,221
So I'd like to see a little more of that, thanks.
所以我想多看到一点那样的内容，谢谢。

1794
02:17:16,361 --> 02:17:17,165
>> Thanks Christos.
>> 谢谢克里斯托斯。

1795
02:17:17,165 --> 02:17:19,170
Lan, the last slide?
兰，最后一张幻灯片？

1796
02:17:22,770 --> 02:17:27,353
>> Okay, so I'm just borrowing this figure from
好的，所以我只是借用了这个图表来自

1797
02:17:27,353 --> 02:17:32,188
the Gartner's research report of last year.
这是从去年Gartner的研究报告中借用的。

1798
02:17:32,188 --> 02:17:37,210
They put NDN as one of the technologies that
他们将NDN列为其中一项仍在上升趋势的技术。

1799
02:17:37,210 --> 02:17:41,950
are still on the up curve.
仍然处于上升曲线中。

1800
02:17:44,030 --> 02:17:50,131
So that means still, it's a good prospect for
所以这意味着它仍然是一个很好的前景。

1801
02:17:50,131 --> 02:17:56,242
this technology and there's interest in it.
这项技术并且对它有兴趣。

1802
02:17:56,242 --> 02:18:01,447
I think that is a good
我认为那是件好事。

1803
02:18:01,447 --> 02:18:05,430
thing for NDN.
我认为那对NDN来说是件好事。

1804
02:18:05,430 --> 02:18:10,894
I think we need to, this is the critical stage now,
我认为我们现在需要做的是，这是关键阶段，

1805
02:18:10,894 --> 02:18:14,970
we don't want to fall off this curve.
我们不想从这个曲线上掉下来。

1806
02:18:16,630 --> 02:18:23,554
We want to expand the community and
我们想要扩大社区并且

1807
02:18:23,554 --> 02:18:27,613
make the code easily
使代码易于使用

1808
02:18:27,613 --> 02:18:33,104
usable by other people, so
可供其他人使用，所以

1809
02:18:33,104 --> 02:18:39,803
that we quickly go up this curve.
我们迅速沿着这条曲线向上发展。

1810
02:18:43,565 --> 02:18:48,530
But I think there's still a good amount of interest in the technology.
但我认为对这项技术仍然有相当多的兴趣。

1811
02:18:48,530 --> 02:18:51,190
And I believe in this direction and
我也相信这个方向。

1812
02:18:51,190 --> 02:18:55,110
I think all of us believe in this research direction.
我认为我们所有人都相信这个研究方向。

1813
02:18:55,110 --> 02:19:01,205
It's just that we need to really orient ourselves
我们只是需要真正地定位我们自己

1814
02:19:01,205 --> 02:19:06,430
to the application developers and users,
向应用程序开发者和用户,

1815
02:19:06,430 --> 02:19:12,234
so that we can quickly broaden the community and
以便我们能够迅速拓宽社区并且

1816
02:19:12,234 --> 02:19:17,330
develop some successful applications.
开发一些成功的应用程序。

1817
02:19:18,690 --> 02:19:25,214
Hopefully next year we will be higher in the curve.
希望明年我们能在曲线上更高一些。

1818
02:19:25,214 --> 02:19:27,750
>> Thank you Lan.
>> 谢谢兰。

1819
02:19:27,750 --> 02:19:29,784
Beichuang, are you the first?
北川，你是第一名吗？

1820
02:19:32,951 --> 02:19:36,371
>> So, I think we have the basic foundation for
>> 那么，我认为我们已经有了基本的基础。

1821
02:19:36,371 --> 02:19:39,580
future development model of NDN.
未来NDN的发展模式。

1822
02:19:39,580 --> 02:19:46,210
And more the focus in the future, I think that really with applications will
在未来，我认为真正与应用程序相关的重点将会更多。

1823
02:19:47,340 --> 02:19:52,493
be bolder in terms of exploring the architectural benefits.
在探索建筑优势方面要更加大胆。

1824
02:19:54,540 --> 02:19:58,460
So, I think that covers similar points.
所以，我认为这涵盖了类似的要点。

1825
02:19:58,460 --> 02:20:04,054
We need API easy and friendly to use so that different users with,
我们需要一个易于使用且用户友好的API，以便不同的用户能够，

1826
02:20:04,054 --> 02:20:10,054
we have no idea and can use NDN code to create their own applications and
实际上能够展示或从底层架构中受益。

1827
02:20:10,054 --> 02:20:16,950
actually can demonstrate or benefit from the underlying architecture.
实际上能够展示或从底层架构中受益。

1828
02:20:16,950 --> 02:20:22,794
I think that's what need to be done to move NDN to the next stage.
我认为这正是需要做的事情，以便将NDN推向下一个阶段。

1829
02:20:26,668 --> 02:20:27,290
Well, that's it.
好的，就这样。

1830
02:20:27,290 --> 02:20:29,250
>> Thanks Beichuang.
>> 谢谢北川。

1831
02:20:30,390 --> 02:20:35,180
Last but not the least Lixia, your final thoughts and you get to wrap up the panel.
最后但同样重要的是，丽霞，你的最终想法，你来总结一下这个讨论小组。

1832
02:20:36,480 --> 02:20:38,267
>> I know we're running out of time, but I do hope-
>> 我知道我们的时间不多了，但我真心希望-

1833
02:20:38,267 --> 02:20:39,339
>> Yeah.
>> 是的。

1834
02:20:39,339 --> 02:20:41,980
>> That some more discussion after me.
>> 在我之后还有一些更多的讨论。

1835
02:20:41,980 --> 02:20:45,859
I would agree with Beichuang either, after ten years,
我也同意北窗的观点，十年之后，

1836
02:20:45,859 --> 02:20:52,130
I think we built the basic foundation to let the broader community to explore.
我认为我们建立了基础框架，让更广泛的社区去探索。

1837
02:20:52,130 --> 02:20:55,810
Like I put it here that we actually learned what are the difficulties
就像我在这里提到的，我们实际上了解了什么是困难。

1838
02:20:55,810 --> 02:20:59,220
in pushing and where we should push, that is the edge-in.
在推动方面以及我们应该推动的地方，那就是所谓的边缘进入。

1839
02:20:59,220 --> 02:21:04,634
By edge, I really mean the two kind of ways of edge talking about
在提到边缘时，我真正指的是两种不同的边缘讨论方式。

1840
02:21:04,634 --> 02:21:09,599
the local applications that you don't have to consult your ISP or
您不需要咨询您的ISP或当地的应用程序。

1841
02:21:09,599 --> 02:21:12,780
clouds, you can just build it yourself.
您可以自己构建云计算资源。

1842
02:21:12,780 --> 02:21:18,280
Today we are in the resource rich environment, computations,
如今我们处于资源丰富的环境中，拥有大量的计算资源，

1843
02:21:18,280 --> 02:21:22,540
bandwidth memories, it's cheap, it's very cheap and everywhere.
带宽和存储器都很便宜，非常便宜且无处不在。

1844
02:21:22,540 --> 02:21:25,585
The question is really how we can make the best use of that,
问题真的是我们如何能最好地利用这些资源，

1845
02:21:25,585 --> 02:21:29,920
to build a very powerful applications right in your house.
来在你的家中构建非常强大的应用程序。

1846
02:21:29,920 --> 02:21:33,010
I would agree with Dave's challenge.
我同意戴夫的观点。

1847
02:21:33,010 --> 02:21:38,600
That application has to be usable, say by my mom, who is 88 years old,
这个应用程序必须易于使用，比如说，要能让我的88岁高龄的妈妈也能使用。

1848
02:21:38,600 --> 02:21:44,660
that's a big challenge, but that is a criteria.
这是一个巨大的挑战，但这也是一个标准。

1849
02:21:44,660 --> 02:21:51,520
So, another edge is the applications, that applications can run over anything.
所以，另一个优势是应用程序可以在任何平台上运行。

1850
02:21:51,520 --> 02:21:54,460
Just like early days of IP.
就像IP早期一样。

1851
02:21:54,460 --> 02:21:59,680
You do DevOps, you do whatever things that can carry datagrams around,
你做DevOps，你做任何可以传输数据报文的事情，

1852
02:21:59,680 --> 02:22:02,440
then NDN can communicate.
那么NDN就可以进行通信了。

1853
02:22:02,440 --> 02:22:06,340
So, that's where we should push.
那么，我们应该在那里加大力度。

1854
02:22:06,340 --> 02:22:08,419
I would also give them the last one.
我也会给他们最后一个。

1855
02:22:08,419 --> 02:22:13,020
I heard other people's questions, I'd like to clarify a few things.
我听到别人的问题，我想澄清几件事情。

1856
02:22:13,020 --> 02:22:18,273
That is like, what build applications is now that any of those
这就像是，现在构建应用程序的情况，任何这些

1857
02:22:18,273 --> 02:22:24,460
are gonna become, This big success themselves, maybe some would.
都将成为这个巨大成功本身，也许有些会成为。

1858
02:22:24,460 --> 02:22:30,850
But the fundamental thing to us as the architecture
但对我们来说，根本的事情是架构

1859
02:22:30,850 --> 02:22:35,198
is to actually understand what works, what's missing.
是要真正理解什么是有效的，什么是缺失的。

1860
02:22:35,198 --> 02:22:40,460
So, use the applications to drive the architecture development.
所以，使用应用程序来推动架构的发展。

1861
02:22:40,460 --> 02:22:46,630
That is at least, I think is the team's interest to understand how well
这至少是，我认为团队有兴趣了解的事情。

1862
02:22:46,630 --> 02:22:51,620
this basically design actually support applications and make things easier.
这基本上是设计实际上支持应用程序并使事情变得更简单。

1863
02:22:53,250 --> 02:22:57,750
But also I agree that the usability really has two parts, separable parts.
但我也同意可用性确实有两个部分，是可以分开的部分。

1864
02:22:57,750 --> 02:22:59,086
One is the design.
一个是设计。

1865
02:22:59,086 --> 02:23:04,180
How NDN's design should best support applications.
NDN设计应该如何最好地支持应用程序。

1866
02:23:04,180 --> 02:23:08,458
And then the other one is the challenge Lan mentioned,
然后另一个是Lan提到的挑战，

1867
02:23:08,458 --> 02:23:13,690
the usability of the code, the maintenance, support.
代码的可用性、维护、支持。

1868
02:23:13,690 --> 02:23:19,780
That is a challenge that I think graduate students being brilliant as they are,
这是一个挑战，我认为研究生们虽然非常聪明，

1869
02:23:19,780 --> 02:23:24,810
are not the right working force to provide that.
他们并不是提供这种服务的合适劳动力。

1870
02:23:24,810 --> 02:23:27,708
I think that remains as a challenge.
我认为那仍然是个挑战。

1871
02:23:32,250 --> 02:23:32,858
>> Thanks, Lixia.
>> 谢谢，丽霞。

1872
02:23:32,858 --> 02:23:34,630
We are behind schedule.
我们进度落后了。

1873
02:23:34,630 --> 02:23:38,320
There's an interesting discussion going on on the chat.
正在聊天中进行一场有趣的讨论。

1874
02:23:38,320 --> 02:23:42,662
But unfortunately, I don't think we can take questions.
但不幸的是，我认为我们不能回答问题。

1875
02:23:42,662 --> 02:23:47,862
So if there's any final thoughts from the panel, or a minute or two.
如果小组成员有任何最后的想法，或者还有一两分钟的时间。

1876
02:23:51,662 --> 02:23:55,460
Otherwise, we conclude the panel.
那么，我们就此结束小组讨论。

1877
02:23:55,460 --> 02:23:59,170
We thank you very much all the panelists.
我们非常感谢所有的小组成员。

1878
02:23:59,170 --> 02:24:02,550
And we're supposed to come back at 1:15.
我们应该在1点15分回来。

1879
02:24:02,550 --> 02:24:06,110
I think we can stick to that schedule and have a shorter break.
我认为我们可以按照那个时间表来，休息时间可以短一些。

1880
02:24:06,110 --> 02:24:08,419
So see you all back at 1:15.
那么我们1点15分再见。

1881
02:24:08,419 --> 02:24:09,820
Thank you very much.
非常感谢。

