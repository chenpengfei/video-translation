1
00:00:00,430 --> 00:00:01,720
欢迎大家回来。

2
00:00:02,770 --> 00:00:06,020
接下来我们将进行第二场关于ICN的会议

3
00:00:06,020 --> 00:00:11,494
由英特尔的Eve Schooler主持的无线边缘网络会议。

4
00:00:11,494 --> 00:00:13,130
伊芙，请开始吧。

5
00:00:13,130 --> 00:00:16,205
好的，今天我们有三场精彩的演讲。

6
00:00:16,205 --> 00:00:22,495
我们将首先介绍一个关于ICN的主题，当做一个项目概览。

7
00:00:22,495 --> 00:00:28,350
由Shree Katyayani Tsikata Suara博士主持，她也被称为Katyayani。

8
00:00:28,350 --> 00:00:31,540
谁是英特尔实验室的高级研究科学家，

9
00:00:31,540 --> 00:00:35,750
领先的研究专注于边缘计算的信息中心网络。

10
00:00:35,750 --> 00:00:41,080
她的研究重点是ICN能为行业增加价值的应用领域。

11
00:00:41,080 --> 00:00:46,921
Katyayani是英特尔与美国国家科学基金会合作的ICN-WEN中心的英特尔PI（主要研究员）。

12
00:00:46,921 --> 00:00:51,727
Eve，非常感谢你。

13
00:00:51,727 --> 00:00:56,644
我开始在这里分享我的想法了。

14
00:00:59,862 --> 00:01:04,215
好的，所以我将简要概述一下

15
00:01:04,215 --> 00:01:07,840
联合英特尔-美国国家科学基金会ICN-WEN中心。

16
00:01:07,840 --> 00:01:12,110
它实际上最近成功地完成了它的三年任期。

17
00:01:12,110 --> 00:01:16,540
我们还有两位出色的教授将对此进行讨论，但是

18
00:01:16,540 --> 00:01:21,450
我只是想简要概述一下。

19
00:01:22,960 --> 00:01:28,680
所以当我们与美国国家科学基金会（NSF）一起建立这个联合中心时的想法是。

20
00:01:28,680 --> 00:01:33,740
我们建立这个联合中心时的想法是探索信息中心网络（ICN）尤其是在未来可能的潜力。

21
00:01:33,740 --> 00:01:38,366
在5G视角下的无线边缘网络上

22
00:01:38,366 --> 00:01:42,280
5G+ 或网络的新演进。

23
00:01:42,280 --> 00:01:47,843
而且当我们在边缘拥有更多的设备和数据时，

24
00:01:47,843 --> 00:01:52,493
我们想要了解ICN有什么样的潜力。

25
00:01:52,493 --> 00:01:58,490
它能提供哪些解决方案来满足一些更严格的要求？

26
00:01:58,490 --> 00:02:02,000
无论是延迟、带宽等等。

27
00:02:02,000 --> 00:02:08,330
我们还想研究更现实的部署或应用情况。

28
00:02:08,330 --> 00:02:13,820
通常用于边缘计算，无论是增强现实虚拟现实、自动驾驶等等。

29
00:02:13,820 --> 00:02:19,210
另一个重要方面的中心是

30
00:02:19,210 --> 00:02:22,620
我们希望同时关注三大支柱。

31
00:02:22,620 --> 00:02:25,390
即无线设备端点，

32
00:02:25,390 --> 00:02:28,800
网络基础设施以及安全与隐私。

33
00:02:28,800 --> 00:02:32,810
所以我们希望安全成为故事的一部分，

34
00:02:32,810 --> 00:02:36,370
所以我们希望安全成为解决方案的一部分，而不是事后才想起的事情。

35
00:02:36,370 --> 00:02:43,133
我相信那些团队确实在这方面做得很好。

36
00:02:43,133 --> 00:02:50,950
我们这个中心主要有三个项目。

37
00:02:52,030 --> 00:02:57,020
我们这个中心主要有三个项目。ISAR是首先我在这里列出的几个项目之一，

38
00:02:57,020 --> 00:03:01,650
我们这个中心主要有三个项目。ISAR是首先我在这里列出的几个项目之一，他们使用了NDN和教授Jeff Burke和热床UCLA以及与霍比特计时器的SPLICE项目。

39
00:03:01,650 --> 00:03:06,262
他们使用了NDN和教授Jeff Burke以及

40
00:03:06,262 --> 00:03:10,212
Trina Chakotay 将会讲述这个话题。

41
00:03:10,212 --> 00:03:13,380
我会让他们给你讲述所有精彩的细节。

42
00:03:13,380 --> 00:03:20,930
第三行LSN使用的时候，它最初没有使用NDN，而是使用了mumble。

43
00:03:20,930 --> 00:03:26,354
当然，在整个努力中共有十所大学参与。

44
00:03:30,491 --> 00:03:36,140
我们还组建了一个非常棒的顾问团队。

45
00:03:36,140 --> 00:03:41,420
我们还组建了一个顾问团队，我相信今天晚些时候会有耿武发言。

46
00:03:41,420 --> 00:03:47,132
当然，你们都认识的Eve Schooler，还有Udayan Mukherjee也在其中。

47
00:03:47,132 --> 00:03:51,469
我们还有几位外部顾问，包括Dave Oran和Christian Tschudin。

48
00:03:51,469 --> 00:03:53,132
克里斯蒂安·楚丁。

49
00:03:53,132 --> 00:03:57,379
他们都提供了极好的反馈。

50
00:03:57,379 --> 00:04:01,900
在这整整三年里的指导。

51
00:04:01,900 --> 00:04:05,440
我们也得到了来自国家科学基金会的大量支持。

52
00:04:06,760 --> 00:04:10,552
Darleen Fisher、Monisha Ghosh和Thyaga一起开始了这个项目。

53
00:04:10,552 --> 00:04:16,278
我们还得到了英特尔管理团队的大力支持，

54
00:04:16,278 --> 00:04:23,022
我们还有多位英特尔的支持者会参加我们的每月电话会议。

55
00:04:23,022 --> 00:04:29,880
我们举办了年度研讨会，也有每半年一次的虚拟研讨会。

56
00:04:29,880 --> 00:04:32,890
与团队互动真的很棒。

57
00:04:32,890 --> 00:04:38,700
至少我个人从中心和互动中学到了很多。

58
00:04:40,450 --> 00:04:42,393
在最后一张幻灯片中，

59
00:04:42,393 --> 00:04:48,031
我想提一下的是关于我们自己的学习心得。

60
00:04:48,031 --> 00:04:53,126
我知道紧接着我们讨论的教授们将会回顾所有的技术细节以及他们在整个项目中积累的学习心得。

61
00:04:53,126 --> 00:04:57,550
细节以及他们在整个项目中积累的学习心得。

62
00:04:57,550 --> 00:05:02,730
但我认为如果我谈论一些我们自己的学习心得可能会更有帮助。

63
00:05:02,730 --> 00:05:05,340
作为一个英特尔的研究实验室。

64
00:05:05,340 --> 00:05:09,564
当我们尝试去采纳这些ICN解决方案并将其融入到行业解决方案中时。

65
00:05:09,564 --> 00:05:13,583
将它们融入到行业解决方案中。

66
00:05:13,583 --> 00:05:16,410
我认为这可能是每个人都会觉得有用的信息。

67
00:05:16,410 --> 00:05:20,395
所以，我们学到的第一件事之一是，

68
00:05:20,395 --> 00:05:25,600
当你在英特尔与业务部门的某人交谈时，

69
00:05:25,600 --> 00:05:28,612
在行业的其他任何地方。

70
00:05:28,612 --> 00:05:33,317
首先你会注意到的是，他们将ICN与现有系统进行了比较，

71
00:05:33,317 --> 00:05:36,390
不仅仅是TCP-IP或者带有增强功能的TCP-IP。

72
00:05:36,390 --> 00:05:41,510
所以如果你说，我有一个很棒的缓存或视频分发解决方案。

73
00:05:41,510 --> 00:05:46,020
他们会说，好的，这是我拥有的最新最先进的CDN。

74
00:05:46,020 --> 00:05:51,020
而且现在不仅仅是CDN，CDN正在进入运营商网络并且

75
00:05:51,020 --> 00:05:53,600
将它们放置在基站上，好吗？

76
00:05:53,600 --> 00:05:55,410
它与那个相比如何？

77
00:05:55,410 --> 00:06:00,340
所以那是我感觉在一些典型的情况下存在的差距。

78
00:06:00,340 --> 00:06:05,130
学术评价以及产业界的看法。

79
00:06:05,130 --> 00:06:09,898
以及在我们观察时，很多时候至少会更好。

80
00:06:09,898 --> 00:06:14,068
解决方案在哪里，ICN能提供最大的好处。

81
00:06:14,068 --> 00:06:15,226
解决方案在哪里，

82
00:06:15,226 --> 00:06:19,463
在没有真正解决方案的地方，那就提供一个更好的解决方案。

83
00:06:19,463 --> 00:06:23,751
所以在那些没有真正解决方案的领域，行业实际上是在挣扎。

84
00:06:23,751 --> 00:06:26,980
因此，当你这样做，并且说我这里有解决方案时。

85
00:06:26,980 --> 00:06:28,690
但是当你那样做时，另一件事情是，

86
00:06:28,690 --> 00:06:34,130
我们经常被问到的问题是，它如何与现有系统集成？

87
00:06:34,130 --> 00:06:40,108
因此我们相信NDN在动态边缘计算中有很大的潜力，并且

88
00:06:40,108 --> 00:06:41,582
orchestration.

89
00:06:41,582 --> 00:06:45,764
当你尝试将你的数据、软件以及

90
00:06:45,764 --> 00:06:50,602
硬件，尝试将它们实时整合起来并进行计算。

91
00:06:50,602 --> 00:06:54,196
但是当我们开始研究这个问题时，我们首先被问到的问题是好的，我们

92
00:06:54,196 --> 00:06:57,030
我们有Kubernetes，我们有这个、那个以及其他的。

93
00:06:57,030 --> 00:06:58,440
它与那个相比如何？

94
00:06:58,440 --> 00:07:02,256
因此，你首先要做的事情之一就是研究现有的系统。

95
00:07:02,256 --> 00:07:07,120
即使我们有了一个很好的解决方案，它也必须以某种方式与现有系统共存。

96
00:07:07,120 --> 00:07:08,900
它必须以某种方式与之接口对接。

97
00:07:08,900 --> 00:07:13,740
所以在我看来，NDN社区可以做出

98
00:07:13,740 --> 00:07:18,770
行业垂直领域进行研究的话，影响力会更大。如果你开始关注这些类型的

99
00:07:18,770 --> 00:07:23,580
解决特定问题的方案，就是说，我们可以这样做。

100
00:07:23,580 --> 00:07:27,200
现在，你不需要开发完整的商业解决方案。

101
00:07:27,200 --> 00:07:29,800
但即使你抽象地说，

102
00:07:29,800 --> 00:07:33,800
这通常是它们在某些示例系统中的实现方式。

103
00:07:33,800 --> 00:07:35,860
这就是我们如何与之交互的方式，或者

104
00:07:35,860 --> 00:07:38,050
这就是我们如何能够让它变得更好。

105
00:07:38,050 --> 00:07:42,060
所以，这大概就是我想给你留下的东西，以及

106
00:07:42,060 --> 00:07:44,210
所以这大概就是我想让你开始思考一个话题的东西。

107
00:07:44,210 --> 00:07:48,940
我们还相信，当涉及到动态可组合的边缘计算时，

108
00:07:48,940 --> 00:07:50,920
目前还没有太多的解决方案。

109
00:07:50,920 --> 00:07:56,080
因此，这是一个很好的领域，社区可以在此发展更多的支持，

110
00:07:56,080 --> 00:08:01,210
因此，这也增强了对无线环境下NDN的支持。

111
00:08:01,210 --> 00:08:03,670
因为当我们开始使用任何NDSM时，

112
00:08:03,670 --> 00:08:07,625
我们发现有许多事情可以做得更好，例如，

113
00:08:07,625 --> 00:08:10,370
只是创建动态面孔，删除它们等等。

114
00:08:10,370 --> 00:08:15,143
所以这就结束了我的演讲，我想给你们留下一些这些

115
00:08:15,143 --> 00:08:19,760
要思考的一些要点，我想知道是否有任何问题。

116
00:08:26,751 --> 00:08:29,270
如果没有问题，Eve，我会把它交还给你。

117
00:08:30,350 --> 00:08:30,850
>> 好的。

118
00:08:36,152 --> 00:08:41,350
有没有人想问一个问题？

119
00:08:44,630 --> 00:08:51,813
也许现在程序的状态是怎样的？

120
00:08:51,813 --> 00:08:55,960
>> 所以我们基本上已经处于最后阶段，只是在收尾了。

121
00:08:55,960 --> 00:09:01,561
我们在今年六月份进行了最后一次研讨会，所以到目前为止，

122
00:09:01,561 --> 00:09:07,395
基本上是解决了一些尾巴问题，差不多就是这样了。

123
00:09:12,571 --> 00:09:18,826
Catchavin，你能谈谈你对未来方向的兴趣吗？

124
00:09:18,826 --> 00:09:23,527
这项工作已经被这些团队所了解。

125
00:09:23,527 --> 00:09:26,030
这是一个很好的问题，谢谢你，Eve。

126
00:09:26,030 --> 00:09:28,600
所以正如我所暗示的，其中一件事情是

127
00:09:28,600 --> 00:09:31,500
它是的，最后一张幻灯片与此有些关联。

128
00:09:31,500 --> 00:09:34,240
所以当然，作为一个英特尔和~!@#$%^&*()

129
00:09:34,240 --> 00:09:38,750
我们也在关注那些我们认为有很大潜力的领域。

130
00:09:38,750 --> 00:09:43,110
NDN在动态网络中以及用于计算。

131
00:09:43,110 --> 00:09:48,267
我知道NDN最初是为固定网络上的数据传输而开发的，但

132
00:09:48,267 --> 00:09:53,423
至少如果我们想要将这些解决方案应用到工业领域，还有很多需要填补的空白，无论是NDN还是其他方面都需要填补。

133
00:09:53,423 --> 00:09:58,434
存在许多需要填补的空白，无论是NDN还是其他方面都需要填补。

134
00:09:58,434 --> 00:10:01,930
边缘处有如此多的设备，边缘计算正在进行。

135
00:10:01,930 --> 00:10:05,504
边缘产生的数据，边缘也有资源。

136
00:10:05,504 --> 00:10:09,690
因此，我们不再仅限于基础设施拥有资源。

137
00:10:09,690 --> 00:10:12,780
资源可以存在于任何地方，它可以是汽车中的一个zeon。

138
00:10:12,780 --> 00:10:16,730
它可以是用户家中的笔记本电脑或者是个人电脑等等。

139
00:10:16,730 --> 00:10:20,820
我们如何将所有这些内容纳入边缘计算的范畴？

140
00:10:20,820 --> 00:10:23,670
我相信NDN在那里有很大的潜力。

141
00:10:23,670 --> 00:10:27,728
所以我也非常鼓励社区更多地深入了解这个问题。

142
00:10:32,168 --> 00:10:34,197
我们这里有一个问题。

143
00:10:34,197 --> 00:10:35,488
是的？

144
00:10:35,488 --> 00:10:38,855
我正打算读它，来自Kathy Nichols的。

145
00:10:38,855 --> 00:10:41,535
您有没有一个您最喜欢的应用程序列表？

146
00:10:41,535 --> 00:10:44,607
那能使用动态组合解决方案吗？

147
00:10:44,607 --> 00:10:49,379
我认为是的，我认为在某些情况下，正如问题本身所述。

148
00:10:51,160 --> 00:10:54,690
我们通常认为需要那样做的应用场景有……

149
00:10:54,690 --> 00:10:58,260
我相信还有更多，大家思考一下会很好。

150
00:10:58,260 --> 00:11:01,760
通常情况下，任何事物都与智能交通有关。

151
00:11:01,760 --> 00:11:06,523
它具有移动性，它具有无线功能，它拥有移动资源等等，

152
00:11:06,523 --> 00:11:09,452
我们的智能工厂、云游戏、增强现实与虚拟现实。

153
00:11:09,452 --> 00:11:13,606
所以这些是我想到的一些事情，但我相信如果你仔细思考

154
00:11:13,606 --> 00:11:16,830
你也许还能想到其他的一些事情。

155
00:11:16,830 --> 00:11:19,564
它们只是如果具备了动态的能力，

156
00:11:19,564 --> 00:11:22,573
无论网络是否在变化，无论是否有无线，

157
00:11:22,573 --> 00:11:24,660
无论是否有移动性，只需考虑。

158
00:11:24,660 --> 00:11:28,233
然后再加上一些严格的延迟要求，

159
00:11:28,233 --> 00:11:31,053
它在我看来提供了一个很好的结合。

160
00:11:39,881 --> 00:11:43,001
>> 还有其他问题吗？

161
00:11:46,782 --> 00:11:49,930
好的，非常感谢你，Kathyayani。

162
00:11:49,930 --> 00:11:50,430
>> 谢谢你。

163
00:11:54,362 --> 00:11:59,263
我们有第二个讲话或第二场演讲。

164
00:11:59,263 --> 00:12:02,208
我想介绍的主题是SPLICE，

165
00:12:02,208 --> 00:12:06,363
安全预测性低延迟信息中心边缘技术用于

166
00:12:06,363 --> 00:12:08,791
下一代无线网络。

167
00:12:08,791 --> 00:12:14,538
received his PhD from the University of Illinois at Urbana Champaign.

168
00:12:14,538 --> 00:12:19,947
他在伊利诺伊大学厄巴纳-香槟分校获得了博士学位。

169
00:12:19,947 --> 00:12:23,020
他曾是斯坦福大学的博士后研究员。

170
00:12:23,020 --> 00:12:27,396
他目前是德克萨斯A&M大学电气系的教授。

171
00:12:27,396 --> 00:12:28,882
以及计算机工程。

172
00:12:28,882 --> 00:12:32,336
以及他的研究兴趣包括缓存内容分发，

173
00:12:32,336 --> 00:12:35,254
网络市场、多智能体学习和博弈论，

174
00:12:35,254 --> 00:12:39,859
无线网络、强化学习以及数据收集和分析。

175
00:12:39,859 --> 00:12:43,365
Srinivas是获奖者，哎呀，有人打字声音很大。

176
00:12:43,365 --> 00:12:48,340
Srinivas是国防威胁减少局青年

177
00:12:48,340 --> 00:12:50,130
调查员奖项，以及

178
00:12:50,130 --> 00:12:53,400
国家科学基金会职业奖，以及来自思科和谷歌的研究奖项。

179
00:12:53,400 --> 00:12:57,659
以及一个禁忌，他还获得了其他几个奖项，包括

180
00:12:57,659 --> 00:13:02,080
一个杰出教授奖和一个工程创世奖。

181
00:13:02,080 --> 00:13:04,510
斯里尼瓦斯，这全归你了。

182
00:13:04,510 --> 00:13:07,230
>> 谢谢你们，感谢大家的到来。

183
00:13:07,230 --> 00:13:12,182
所以，我会尽量保持简洁。

184
00:13:12,182 --> 00:13:16,452
这其实是几所大学三年研究的结合。

185
00:13:16,452 --> 00:13:18,180
这是几位研究员。

186
00:13:18,180 --> 00:13:22,002
所以SPLICE代表的是安全的、可预测的、低延迟的信息中心边缘。

187
00:13:22,002 --> 00:13:26,370
目标是将其融入到下一代无线技术中。

188
00:13:26,370 --> 00:13:28,590
所以那就是最终的目标。

189
00:13:28,590 --> 00:13:31,418
所以这个项目是跨越了多所大学进行的，一共五所。

190
00:13:31,418 --> 00:13:38,380
来自德克萨斯A&M大学的P R Kumar，我基本上是代表他来做这次演讲的。

191
00:13:38,380 --> 00:13:41,685
所以有Kumar，我自己，还有来自德克萨斯A&M大学的I-H.Hou。

192
00:13:41,685 --> 00:13:45,403
有Shroff和来自俄亥俄州立大学的Attila Errol Masse。

193
00:13:45,403 --> 00:13:49,586
查尔斯·默里来自伊利诺伊州，阿丽莎·贝蒂诺，以及

194
00:13:49,586 --> 00:13:54,018
查理·胡来自普渡大学，帕特里克·罗利来自圣路易斯华盛顿大学。

195
00:13:54,018 --> 00:13:55,869
所以如果你看看这个团队，

196
00:13:55,869 --> 00:14:00,375
我们团队由从事无线安全调度的人员组成，以及

197
00:14:00,375 --> 00:14:06,110
帕特里克是唯一一个特别投入于NDN的人。

198
00:14:06,110 --> 00:14:08,640
这对我们其他人来说也是一个很好的学习经历。

199
00:14:08,640 --> 00:14:10,020
我们其他人也是一样。

200
00:14:10,020 --> 00:14:15,080
我们进去的时候认为NDN非常有趣，

201
00:14:15,080 --> 00:14:19,020
在整个计划中我们只是略知一二，但实际上并没有太多与之工作的经验。

202
00:14:19,020 --> 00:14:23,822
当我们离开时，我们已经相当深入地投入到这些功能中了。

203
00:14:23,822 --> 00:14:27,913
部署，以及能够为其增强做出贡献。

204
00:14:27,913 --> 00:14:30,282
那么这个项目的目的是什么？

205
00:14:30,282 --> 00:14:31,890
我们进入时的目标是，

206
00:14:31,890 --> 00:14:35,921
我们进入时的目标是，试图理解什么样的应用是值得的？

207
00:14:35,921 --> 00:14:39,972
我们进入时的目标是，试图理解什么样的应用是值得的？

208
00:14:39,972 --> 00:14:43,540
无线边缘在某种意义上今天并不存在吗？

209
00:14:43,540 --> 00:14:47,730
而这在未来将会变得非常明显。

210
00:14:47,730 --> 00:14:51,320
我们在思考应用程序的可能性。

211
00:14:51,320 --> 00:14:54,910
在这方面，您是通过无线网络对系统进行控制。

212
00:14:54,910 --> 00:14:56,670
所以在许多这样的控制系统中，

213
00:14:56,670 --> 00:15:00,910
你想做的是在某种程度上重建一个物理的或虚拟的主题。

214
00:15:00,910 --> 00:15:03,153
例如，如果你考虑自动驾驶汽车，

215
00:15:03,153 --> 00:15:06,363
你有一些配备了激光雷达的车辆，一些配备了摄像头的，一些配备了雷达等等。

216
00:15:06,363 --> 00:15:11,169
而车辆关心的是物理场的一个抽象，

217
00:15:11,169 --> 00:15:15,510
它们位于何处，哪里有道路、人、自行车等。

218
00:15:15,510 --> 00:15:19,924
所以你对在所有这些节点重建一个物理动态场感兴趣。

219
00:15:19,924 --> 00:15:22,422
然后他们希望采取一些控制行动。

220
00:15:22,422 --> 00:15:26,205
同样地，如果你考虑虚拟现实，我们特别想到的是

221
00:15:26,205 --> 00:15:30,270
虚拟现实多人游戏，在这里你再次拥有一个虚拟的场地。

222
00:15:30,270 --> 00:15:34,150
你会遇到各种怪物、墙壁等等，这些都是实时发生的。

223
00:15:34,150 --> 00:15:36,075
你会遇到正在发生的事件，比如谁在哪里，

224
00:15:36,075 --> 00:15:37,555
谁在向什么射击等等。

225
00:15:37,555 --> 00:15:41,005
或者如果是一款赛车游戏，这些车辆在哪里移动等等。

226
00:15:41,005 --> 00:15:43,685
而那个虚拟场地需要被重建。

227
00:15:43,685 --> 00:15:47,123
在所有代理商这里几乎没有任何延迟，对吧，就是那些游戏玩家？

228
00:15:48,440 --> 00:15:52,020
在这两种情况下，如果你仔细想想，它们之间有很多共同点，

229
00:15:52,020 --> 00:15:57,380
你希望在这些代理商中，就领域而言，实现类似的重建。

230
00:15:57,380 --> 00:15:58,970
这些东西在哪里。

231
00:15:58,970 --> 00:16:02,450
因此，在用户信息需求之间存在很多相关性。

232
00:16:02,450 --> 00:16:04,034
因此，用户或者应用程序真正想要的是专注于提取所需信息。

233
00:16:04,034 --> 00:16:08,700
因此，应用程序真正想要的是专注于提取所需信息。

234
00:16:08,700 --> 00:16:10,922
例如，在虚拟现实中，有一个所谓的动作到光子延迟要求。

235
00:16:10,922 --> 00:16:13,157
称为动作到光子延迟要求。

236
00:16:13,157 --> 00:16:15,068
在这个意义上，为了移动你的头部，

237
00:16:15,068 --> 00:16:19,092
你需要在大约12到15毫秒内改变视角。

238
00:16:19,092 --> 00:16:22,844
所以这是相当严格的，因为在那个时间段内，

239
00:16:22,844 --> 00:16:25,496
你需要某种程度上识别出用户想要什么，

240
00:16:25,496 --> 00:16:28,940
要渲染那个特定的视角，就得转换那个视角。

241
00:16:28,940 --> 00:16:33,340
to be transmitted over the airwaves.

242
00:16:33,340 --> 00:16:37,515
要在用户的耳机上结束，它必须被解压并显示给用户。

243
00:16:37,515 --> 00:16:42,530
如果增加延迟，用户开始感到恶心等不适。

244
00:16:42,530 --> 00:16:47,226
这就是为什么当你真正去了解像Oculus这样的系统时，你会发现它们有一个大型的

245
00:16:47,226 --> 00:16:52,084
渲染引擎，一个大型的边缘计算盒子放置在你的客厅或其他地方。

246
00:16:52,084 --> 00:16:56,552
你有一根电缆将头戴设备连接到盒子上，这样你就能拥有非常低的延迟。

247
00:16:56,552 --> 00:16:57,646
非常低的延迟。

248
00:16:57,646 --> 00:17:01,722
现在，如果你想要剪断那根电缆，如果你想让一切都变成无线的，

249
00:17:01,722 --> 00:17:06,253
对信息需求以及也造成了相当多的限制。

250
00:17:06,253 --> 00:17:07,954
无线网络本身。

251
00:17:07,954 --> 00:17:12,060
这就是为什么我们专注于可控的无线传输方式。

252
00:17:12,060 --> 00:17:14,550
我们如何改变无线网络本身？

253
00:17:14,550 --> 00:17:17,496
我们主要将关注MAC调度算法，

254
00:17:17,496 --> 00:17:20,788
我们将牢记保持应用性能和确保安全性。

255
00:17:20,788 --> 00:17:21,842
在安全性方面，

256
00:17:21,842 --> 00:17:25,009
我们对于无线方面的连接性很感兴趣。

257
00:17:25,009 --> 00:17:29,211
我们也对NDN中加密解密方面的信息角度非常感兴趣。

258
00:17:29,211 --> 00:17:29,815
上下文。

259
00:17:29,815 --> 00:17:33,905
所以在那种上下文中，我们试图从头开始构建一种系统，在这种系统中我们可以基本上控制每一层。

260
00:17:33,905 --> 00:17:38,011
从头开始，我们基本上可以控制每一层。

261
00:17:38,011 --> 00:17:42,147
理想情况下，结合使用定制的软件和硬件。

262
00:17:42,147 --> 00:17:45,193
所以如果你看这里最底层的这一层，蓝色的那一层，

263
00:17:45,193 --> 00:17:47,305
它基本上是无线通信的角度。

264
00:17:47,305 --> 00:17:51,595
所以我们拥有的是一台软件定义无线电，我们可以完全访问它。

265
00:17:51,595 --> 00:17:53,860
我们可以完全访问到精细的MAC层，对吗？

266
00:17:53,860 --> 00:17:55,575
我们向上进入网络栈，

267
00:17:55,575 --> 00:17:58,794
您有一台主机，其中也包含了网络栈。

268
00:17:58,794 --> 00:18:03,249
所以换句话说，这些USRP就是连接到软件定义无线电的设备。

269
00:18:03,249 --> 00:18:07,851
一种基于LabVIEW的无控制器方案，对吗？

270
00:18:07,851 --> 00:18:13,197
在这个基础上，我们基本上可以在MAC调度等方面进行基于MAC地址的更改。

271
00:18:13,197 --> 00:18:16,731
我们在那里连接了这个UDP指示器，

272
00:18:16,731 --> 00:18:22,175
是机器内部的本地连接，不是通过空中的TCP IP连接。

273
00:18:22,175 --> 00:18:25,897
它仅使用UDP在内部连接LabVIEW至本地主机。

274
00:18:25,897 --> 00:18:29,620
然后我们有了NFD堆栈和应用程序。

275
00:18:29,620 --> 00:18:35,362
所以本质上，如果你愿意的话，这是一种纯粹或半纯粹的信息

276
00:18:35,362 --> 00:18:40,711
因此，在本质上，如果你愿意的话，这是一种纯粹或半纯粹的信息中心架构，在这种架构中，实际上甚至不需要TCP/IP，对吧？

277
00:18:40,711 --> 00:18:42,238
正如我所说，我们使用那个UDP来进行

278
00:18:42,238 --> 00:18:45,955
因为LabVIEW能够处理本地UDP套接字，所以它是一种本地连接。

279
00:18:45,955 --> 00:18:51,313
但是从服务器到客户端的端到端连接根本不是TCP/IP连接。

280
00:18:51,313 --> 00:18:53,760
连接它们的唯一东西是MAC ID。

281
00:18:53,760 --> 00:18:58,060
因此，一个USRP使用MAC ID，另一个USRP使用这个MAC ID。

282
00:18:58,060 --> 00:19:01,910
为了确定它来自哪里以及它的目的地是哪里。

283
00:19:01,910 --> 00:19:03,810
所以这就是我们的总体架构。

284
00:19:03,810 --> 00:19:07,026
接下来的几分钟里，我想讨论我们实现了什么或者

285
00:19:07,026 --> 00:19:08,916
这几个层级的目标是什么。

286
00:19:08,916 --> 00:19:14,443
我们是如何朝着这个最终目标即田野重构迈进的。

287
00:19:14,443 --> 00:19:15,216
控制。

288
00:19:15,216 --> 00:19:17,230
所以如果你看这个最底层，

289
00:19:17,230 --> 00:19:21,230
问题是我们能否使用现成的无线通信方案？

290
00:19:21,230 --> 00:19:24,390
例如，有WiFi，它本质上是基于

291
00:19:24,390 --> 00:19:28,030
载波侦听多路访问退避，因此是分布式的。

292
00:19:28,030 --> 00:19:29,950
而LTE则是更加有计划的调度。

293
00:19:29,950 --> 00:19:34,260
现在如果你想要确保延迟的保证，请记住这件事情，

294
00:19:34,260 --> 00:19:38,170
如果你需要的是大约15毫秒左右的延迟来满足虚拟现实的要求。

295
00:19:38,170 --> 00:19:41,458
基本上，我们计算出如果你需要那种大约15毫秒左右的延迟来满足虚拟现实的要求。

296
00:19:41,458 --> 00:19:45,436
渲染将会花费一些时间，大约需要四到五毫秒左右，

297
00:19:45,436 --> 00:19:46,892
然后是压缩。

298
00:19:46,892 --> 00:19:50,155
原来是无线角度，半边无线，

299
00:19:50,155 --> 00:19:53,370
你大约有两毫秒左右的时间，也许是三毫秒。

300
00:19:53,370 --> 00:19:57,850
所以本质上我们需要一个方案，能够保证每个数据包的延迟时间。

301
00:19:57,850 --> 00:20:00,790
所以本质上我们需要一个方案，能够保证每个数据包的延迟时间少于两到三毫秒，对吧？

302
00:20:00,790 --> 00:20:04,340
现在WiFi存在的问题是，由于它是CSMA，关键流存在的原因是这样的，

303
00:20:04,340 --> 00:20:06,390
你根本没有任何保证。

304
00:20:06,390 --> 00:20:10,830
如果你看一下LTE 4G，基本上，帧长度是十毫秒。

305
00:20:10,830 --> 00:20:13,233
但问题在于，当你传输一个数据包时，

306
00:20:13,233 --> 00:20:15,460
ack要么作为捆绑式应答返回，要么

307
00:20:15,460 --> 00:20:19,407
你必须安排ACK的调度，其最小延迟为七毫秒。

308
00:20:19,407 --> 00:20:22,967
换句话说，LTE不能实现这种低延迟的方案。

309
00:20:22,967 --> 00:20:27,508
还记得，当时我们在做这个的时候，5G还处于起步阶段。

310
00:20:27,508 --> 00:20:32,349
的确，即便是现在，具有超低延迟的5G部署仍然相当有限。

311
00:20:32,349 --> 00:20:34,881
所以本质上我们在寻找的是

312
00:20:34,881 --> 00:20:39,188
所以本质上我们在寻找的是我们自己定制的、对NDN友好的超低延迟方案，对吗？

313
00:20:39,188 --> 00:20:43,620
所以信息的边缘必须决定去实施这个想法。

314
00:20:43,620 --> 00:20:46,290
这本质上是我们在做场的重建。

315
00:20:46,290 --> 00:20:49,690
这个领域的价值在于它对现实的准确反映。

316
00:20:49,690 --> 00:20:54,680
所以如果你在研究自动驾驶，如果某个物体已经移动了并且

317
00:20:54,680 --> 00:20:56,620
你对此一无所知，好吧，你的领域，

318
00:20:56,620 --> 00:21:00,300
你对现实的感知与现实本身是不同的。

319
00:21:00,300 --> 00:21:01,830
你对现实的感知与现实本身是不同的。

320
00:21:01,830 --> 00:21:03,720
你对它的感知是信息的边缘。

321
00:21:03,720 --> 00:21:06,712
所以你想要尽量减少这种信息的边缘。

322
00:21:06,712 --> 00:21:08,797
这甚至适用于虚拟现实环境中，

323
00:21:08,797 --> 00:21:12,430
在这种意义上，有一个怪物在你的前面或者旁边等等。

324
00:21:12,430 --> 00:21:17,090
在规范虚拟世界里，这个怪物在哪里？

325
00:21:17,090 --> 00:21:21,100
相对于你所在的位置，这个怪物在哪里？我的意思是，你对它的感知在哪里？

326
00:21:21,100 --> 00:21:25,390
所以你想要尽量减少那种感知上的差异，对吗？

327
00:21:25,390 --> 00:21:29,390
现在我们说有多个用户，所以他们之间存在相关性。

328
00:21:29,390 --> 00:21:31,947
所以我们想要在某种程度上加入多播支持。

329
00:21:31,947 --> 00:21:37,010
确实，我们需要将这一点融入到NDN中，以增强对NDN的认识。

330
00:21:37,010 --> 00:21:41,200
所以发出的NDN数据包，请求，兴趣包以及

331
00:21:41,200 --> 00:21:45,220
这些响应等在无线层中得到了比较清晰的集成。

332
00:21:45,220 --> 00:21:49,792
这样他们在某种程度上可以揭示出他们的延迟要求等信息，以及

333
00:21:49,792 --> 00:21:51,791
我们可以将其整合并提供支持。

334
00:21:51,791 --> 00:21:55,834
所以我将为你展示一个关于主要成果之一的幻灯片。

335
00:21:55,834 --> 00:21:59,045
所以本质上，我将要讲述的就是第一个主题。

336
00:21:59,045 --> 00:22:04,247
在我们实例化的方式中，我们开发了延迟调度算法，它可以

337
00:22:04,247 --> 00:22:09,307
在我们的实例化方式中，我们开发了延迟敏感吞吐量最大化算法，我们称之为及时吞吐量。

338
00:22:09,307 --> 00:22:12,600
我们基本上实际上是在USRPs上实例化了它。

339
00:22:12,600 --> 00:22:16,423
之后有几篇论文实际上将其整合到了各种不同的~!@#$%^&*()

340
00:22:16,423 --> 00:22:17,300
政权。

341
00:22:17,300 --> 00:22:21,210
为了能够在各个不同层面上控制系统，我们实际上构建了一个RL平台，

342
00:22:21,210 --> 00:22:25,973
为了能够在各个不同层面上控制系统，我们实际上构建了一个RL平台，

343
00:22:25,973 --> 00:22:29,230
一个用于自动配置的强化学习平台。

344
00:22:29,230 --> 00:22:32,370
这就是去年出现的这件事情的最后部分。

345
00:22:32,370 --> 00:22:34,940
但我只是想告诉你关于容量区域，

346
00:22:34,940 --> 00:22:38,070
我认为，通过我们的低延迟调度算法。

347
00:22:38,070 --> 00:22:43,500
所以这张图表基本上展示的是实时与非实时之间的对比。

348
00:22:43,500 --> 00:22:49,340
无线信道在20兆赫频宽下同时支持的流量，对。

349
00:22:49,340 --> 00:22:52,167
所以最左边的是我们的调度方案。

350
00:22:52,167 --> 00:22:55,348
在这里你会注意到它达到了完整的凸区域。

351
00:22:55,348 --> 00:22:59,710
而其他的策略，例如最长优先、基本上是最大权重，或者

352
00:22:59,710 --> 00:23:02,803
随机策略或循环轮询等无法实现的。

353
00:23:02,803 --> 00:23:07,424
因此，基本上我们能够展示在分析上有价值的收获在

354
00:23:07,424 --> 00:23:11,463
调度算法的条款实际上在现实中有所影响。

355
00:23:11,463 --> 00:23:15,886
你能够支持更大范围的操作。

356
00:23:15,886 --> 00:23:20,515
现在，让我们来谈谈NDN架构的事情以及缓存技术。

357
00:23:20,515 --> 00:23:24,211
基本上，我们对NDN的思考过程是这样的

358
00:23:24,211 --> 00:23:28,061
NDN提供的一个重大优势是信息重用。

359
00:23:28,061 --> 00:23:33,042
即它被缓存在多个可用的内容存储位置中。

360
00:23:33,042 --> 00:23:36,019
因此，本质上可以被利用，一是，

361
00:23:36,019 --> 00:23:40,749
这种名字流过去，因为你看到了这些名字。

362
00:23:40,749 --> 00:23:45,007
你能预测出接下来会有哪个名字被提出来吗，本质上通过~!@#$%^&*()

363
00:23:45,007 --> 00:23:47,671
能否通过这些名字的流转来预测出多个可能性？

364
00:23:47,671 --> 00:23:51,274
是否因此能够预先确定可能会被请求的内容？

365
00:23:51,274 --> 00:23:52,382
是否因此能够预先缓存？

366
00:23:52,382 --> 00:23:55,053
现在当然了，NDN是机会主义的，我们希望它是这样的，并且

367
00:23:55,053 --> 00:23:57,096
让它基本上可以预测，对吗？

368
00:23:57,096 --> 00:24:01,610
所以我们想要一种主动的方式来安排事务。

369
00:24:01,610 --> 00:24:02,830
我们需要请求。

370
00:24:02,830 --> 00:24:04,210
我们需要将这个构建进NDN中。

371
00:24:04,210 --> 00:24:07,430
所以我们对NFD进行了一些修改，以便实现这一点。

372
00:24:07,430 --> 00:24:11,660
因此，我们想要通过智能方式实际提供延迟保证。

373
00:24:11,660 --> 00:24:17,240
缓存算法可以实际预取所需的项目。

374
00:24:17,240 --> 00:24:20,730
我们再次需要无线连接意识，因为连接可能会有丢失等问题。

375
00:24:20,730 --> 00:24:24,180
我们需要识别出哪些连接是我们应该重点关注的，以便于——

376
00:24:24,180 --> 00:24:29,500
这些预测以及你能在多大程度上进行预测与抓住机遇等问题。

377
00:24:29,500 --> 00:24:33,510
这些都是我们必须处理的与无线连接相关的问题。

378
00:24:33,510 --> 00:24:36,255
所以在这种情况下，我们有一大堆工作要做。

379
00:24:36,255 --> 00:24:41,690
前三者更多地与NFD的修改有关，我们的

380
00:24:41,690 --> 00:24:47,420
我们自己的NFD风格，基本上允许你预先请求一些东西。

381
00:24:47,420 --> 00:24:48,305
因为如果你仔细想一想，

382
00:24:48,305 --> 00:24:53,150
NFD本身并没有真正发行它自己的利益，对吧。

383
00:24:53,150 --> 00:24:58,300
所以我们所做的就是基本上插入了一个算法，就像是一个小模块，

384
00:24:58,300 --> 00:25:00,850
它观察着流动的利息，并且

385
00:25:00,850 --> 00:25:03,510
它自然地从NFT本身产生兴趣。

386
00:25:03,510 --> 00:25:07,080
因此，当这些兴趣得到满足时，它们将会涌现。

387
00:25:07,080 --> 00:25:11,400
因此，缓存中会保存已加载问题的内容存储。

388
00:25:11,400 --> 00:25:14,990
因此，即使在终端用户实际上还未

389
00:25:14,990 --> 00:25:16,500
感兴趣的问题。

390
00:25:16,500 --> 00:25:19,360
所以，本质上我们致力于主动请求。

391
00:25:19,360 --> 00:25:23,340
这主要是由华盛顿大学的研究人员所关注的。

392
00:25:23,340 --> 00:25:27,820
然后我们利用这些想法来实现这些预测性请求，

393
00:25:27,820 --> 00:25:30,020
然后我们利用这些想法来实现这些预测性请求，正如我之前提到的NFD修改。Another strain of thought was, if you're really interested in low latency,

394
00:25:30,020 --> 00:25:33,740
另一种思考方式是，如果你真的对低延迟感兴趣，

395
00:25:33,740 --> 00:25:37,890
也许NFD转发方案需要优化。

396
00:25:37,890 --> 00:25:40,840
因此，有些人实际上致力于这种工作。

397
00:25:40,840 --> 00:25:45,300
评估不同的转发方案，包括基于硬件的转发。

398
00:25:45,300 --> 00:25:47,790
为了减少NDN转发的延迟，

399
00:25:47,790 --> 00:25:51,780
特别是当你扩大到更大量的流量时，对吧？

400
00:25:51,780 --> 00:25:52,570
在缓存方面，

401
00:25:52,570 --> 00:25:57,360
我们得到了几个基本结果，特别是基于不可靠通道的研究。

402
00:25:57,360 --> 00:26:01,720
我们发现了一些违反直觉的结果，关于你应该何时缓存

403
00:26:01,720 --> 00:26:04,790
你应该如何分配你的缓存内存。

404
00:26:04,790 --> 00:26:06,800
那么关于这个问题，我就讲到这里。

405
00:26:06,800 --> 00:26:10,660
一个我们必须用到虚拟现实技术来实现的项目。

406
00:26:10,660 --> 00:26:14,395
这是整个系统的集成，其中你有VR头戴设备，

407
00:26:14,395 --> 00:26:18,700
你拥有NDN的缓存，并且还有底层的无线信道。

408
00:26:18,700 --> 00:26:21,680
这不是一个视频，它只是一个画面，请注意。

409
00:26:21,680 --> 00:26:25,480
基本上我们能够展示出来，我认为你们应该能在屏幕上看到它。

410
00:26:25,480 --> 00:26:29,510
左上角是带有预测功能的，我们能够支持一个更高频率的高解析度帧率。

411
00:26:29,510 --> 00:26:34,010
右下角应该看起来有点粗糙，分辨率帧比左上角要低。

412
00:26:34,010 --> 00:26:38,030
所以你在玩游戏的时候实际上会看到这个情况，

413
00:26:38,030 --> 00:26:42,460
你会发现更多的内容都以更高的分辨率呈现。

414
00:26:42,460 --> 00:26:45,500
你几乎可以确信它们中的大多数都是高分辨率的。

415
00:26:45,500 --> 00:26:48,320
只有少数会是低分辨率的。

416
00:26:48,320 --> 00:26:52,470
所以这就是我们能够提高最终用户体验质量的原因。

417
00:26:52,470 --> 00:26:55,650
通过结合缓存以及无线技术。

418
00:26:55,650 --> 00:26:58,830
所以我刚才提到的最后一件事，即VR应用，

419
00:26:58,830 --> 00:27:02,420
一般而言，VR应用的高级目标是实现无线化。

420
00:27:02,420 --> 00:27:06,640
所以当我开始这个演讲时，我主要谈的是Oculus，以及

421
00:27:06,640 --> 00:27:12,170
事实上，你需要一根电缆连接边缘渲染盒和你的头戴设备。

422
00:27:12,170 --> 00:27:16,410
目标实际上是通过智能无线调度来消除这种需求。

423
00:27:16,410 --> 00:27:17,310
预取。

424
00:27:17,310 --> 00:27:21,467
因此通过使用NDN，基本上是为了

425
00:27:21,467 --> 00:27:26,120
这种通信方式，对。

426
00:27:26,120 --> 00:27:30,850
现在最终，当然，我们需要这整个系统从设计上就是安全的。

427
00:27:30,850 --> 00:27:34,960
所以本质上，我们需要解决访问控制安全问题和信息安全问题。

428
00:27:34,960 --> 00:27:36,350
信息安全。

429
00:27:36,350 --> 00:27:37,452
信息安全，

430
00:27:37,452 --> 00:27:41,120
前两个要点表明，我们需要延迟保证。

431
00:27:41,120 --> 00:27:43,990
因为我们没有无限的时间，我们只有大约14或者

432
00:27:43,990 --> 00:27:47,470
所以，基本上如果我们意识到我们没有时间去浪费两毫秒或者在下一帧出现在头显之前。

433
00:27:47,470 --> 00:27:53,050
所以，基本上如果我们意识到我们没有时间去浪费两毫秒或者在下一帧出现在头显之前。

434
00:27:53,050 --> 00:27:55,470
在加密解密中的三毫秒。

435
00:27:55,470 --> 00:27:58,200
所以，我们需要轻量级加密方案，以及

436
00:27:58,200 --> 00:28:01,560
这基本上是丽莎·马蒂诺小组的重点。

437
00:28:01,560 --> 00:28:05,570
她主要关注的是基本上的访问控制方法。

438
00:28:05,570 --> 00:28:10,150
在LTE上，因为我们意识到未来5G将会基于LTE。

439
00:28:10,150 --> 00:28:13,190
以及我们的许多调度算法等等，

440
00:28:13,190 --> 00:28:15,840
在某种意义上，将会在5G中找到一个自然的归宿。

441
00:28:15,840 --> 00:28:19,770
尽管在过去三年的发展中，它已经

442
00:28:19,770 --> 00:28:24,240
即使是Wi-Fi也已经朝着基于调度的方案发展，例如Wi-Fi 6等。

443
00:28:24,240 --> 00:28:29,250
我喜欢调度，所以Wi-Fi和

444
00:28:29,250 --> 00:28:33,090
LTE或5G正在大力推进计划化方案，因为

445
00:28:33,090 --> 00:28:35,090
相对于随机接入而言。

446
00:28:35,090 --> 00:28:37,810
因此，从安全性方面来看，主要的结果是。

447
00:28:37,810 --> 00:28:43,100
前几个主要与接入安全有关，基本上是在寻找方案，

448
00:28:43,100 --> 00:28:48,340
在LTE中，与安全角度相关的部分发展得相对薄弱。

449
00:28:48,340 --> 00:28:53,920
后几个主要与签名方案、加密解密有关。

450
00:28:53,920 --> 00:28:58,180
这正是我想要重点关注的，作为我候选人策略的一部分。

451
00:28:58,180 --> 00:29:00,881
所以这基本上表明，>>如果你能肯定地快速地如果你能

452
00:29:00,881 --> 00:29:02,570
如果您能尽快结束，那就太好了。

453
00:29:02,570 --> 00:29:04,290
>> 我基本上已经完成了最后一张幻灯片。

454
00:29:04,290 --> 00:29:04,920
>> 好的。

455
00:29:04,920 --> 00:29:06,160
>> 哎呀，不好意思。

456
00:29:06,160 --> 00:29:12,070
所以本质上我们想说的是，我们有轻量级的签名

457
00:29:12,070 --> 00:29:16,390
方案中，你实际上可以更快地进行加密解密。

458
00:29:16,390 --> 00:29:21,350
所以我有一个关于那个实际系统的幻灯片，它在访问点方面是怎样的，

459
00:29:21,350 --> 00:29:22,560
以及多个主机。

460
00:29:22,560 --> 00:29:26,079
最后，这还与系统架构有一些更多的关联，但是

461
00:29:26,079 --> 00:29:27,719
我到此结束并说声谢谢。

462
00:29:29,742 --> 00:29:31,654
非常好，谢谢。

463
00:29:31,654 --> 00:29:32,795
有什么问题吗？

464
00:29:36,816 --> 00:29:38,510
>> 它说有人我需要一个亮点。

465
00:29:38,510 --> 00:29:39,489
我不想要油漆。

466
00:29:42,871 --> 00:29:47,120
>> 我也不知道重点是什么[笑]。

467
00:29:47,120 --> 00:29:51,510
但实际上，你能告诉我们下一步的工作计划吗？

468
00:29:52,550 --> 00:29:56,600
我们申请了无成本延期，

469
00:29:56,600 --> 00:29:59,490
我们从电力测试平台获得了一些资金。

470
00:29:59,490 --> 00:30:03,440
尝试通过空中在合理的距离上测试这些想法。

471
00:30:03,440 --> 00:30:08,750
所以我们基本上认为这种权力扩展是一个平台用于

472
00:30:08,750 --> 00:30:10,280
所以我们基本上认为这种权力扩展是一个平台用于先进无线研究。And what we're doing there is working with the Utah test bed.

473
00:30:10,280 --> 00:30:13,790
我们在那里所做的就是与犹他测试平台合作。

474
00:30:13,790 --> 00:30:18,440
他们在那里拥有USRPs和SRSNT，并且都在运行。

475
00:30:18,440 --> 00:30:21,615
我们想要尝试这种低延迟调度和联合的组合，

476
00:30:21,615 --> 00:30:25,980
NDN借鉴了这样的想法，即如果你考虑像自动驾驶汽车之类的事物。

477
00:30:25,980 --> 00:30:30,370
你将会在野外使用它们，通过这些远程链接进行操作。

478
00:30:30,370 --> 00:30:35,000
我们能通过使用NDN获得哪些性能提升？

479
00:30:35,000 --> 00:30:38,430
作为自动驾驶车辆背景下的场景重构。

480
00:30:38,430 --> 00:30:41,105
这是一个持续进行的思路。

481
00:30:42,210 --> 00:30:46,200
我们相信这个相同的想法在……也是有价值的。

482
00:30:46,200 --> 00:30:51,140
我认为在上一次会议中也提到了这个问题。

483
00:30:51,140 --> 00:30:55,245
基本上，它看起来像是整个ICN的概念以及

484
00:30:55,245 --> 00:30:59,440
NDN在共享方面似乎特别有价值，在自治车辆的背景下，有很多共性的信息。

485
00:30:59,440 --> 00:31:03,390
在自治车辆的背景下，有很多共性的信息。

486
00:31:03,390 --> 00:31:03,930
所以这就是~!@#$%^&*()

487
00:31:03,930 --> 00:31:05,230
我们认为有价值并值得期待的东西。

488
00:31:05,230 --> 00:31:09,430
>> 非常感谢您的洞察。

489
00:31:09,430 --> 00:31:10,366
那真是太棒了。

490
00:31:10,366 --> 00:31:12,375
>> 谢谢。

491
00:31:12,375 --> 00:31:18,970
>> 好的，我们将把讲话权交给Jeff Burke，他将向我们发言。

492
00:31:18,970 --> 00:31:23,170
他将向我们提供关于ICN支持的安全边缘网络的最新进展。

493
00:31:23,170 --> 00:31:27,150
他将介绍增强现实技术在ICE-AR项目中的应用。

494
00:31:27,150 --> 00:31:30,260
对于那些还不了解他的人来说，

495
00:31:30,260 --> 00:31:34,310
Jeff Burke 是加州大学洛杉矶分校戏剧系的常驻教授。

496
00:31:34,310 --> 00:31:37,160
他共同指导了REMAP研究中心，即研究与

497
00:31:37,160 --> 00:31:39,260
他共同指导了REMAP研究中心，即研究与工程媒介表现的加州大学洛杉矶分校戏剧、电影与电视学院联合中心。

498
00:31:39,260 --> 00:31:41,540
他共同指导了REMAP研究中心，即研究与工程媒介表现的加州大学洛杉矶分校戏剧、电影与电视学院联合中心。

499
00:31:41,540 --> 00:31:45,010
他共同指导了REMAP研究中心，即研究与工程媒介表现的加州大学洛杉矶分校戏剧、电影与电视学院联合中心。REMAP自2010年以来一直在NDN上进行应用研究，联合了戏剧、电影与电视学院和Samueli工程学院。

500
00:31:45,010 --> 00:31:48,890
自2010年以来，REMAP在NDN上进行了应用研究，

501
00:31:48,890 --> 00:31:53,978
杰夫是NSF Intel支持的ICE-AR项目的合作主要研究员(COPI)。

502
00:31:53,978 --> 00:31:55,417
都归你了，杰夫。

503
00:31:55,417 --> 00:31:57,110
>> 太好了，多亏了你。

504
00:31:58,200 --> 00:32:02,090
所以这是列在幻灯片底部和一些也参与此次通话的首席研究员们的合作工作。

505
00:32:02,090 --> 00:32:05,650
所以这是列在幻灯片底部和一些也参与此次通话的首席研究员们的合作工作。

506
00:32:05,650 --> 00:32:08,520
所以如果你最后有任何问题，他们也会在这里。

507
00:32:10,150 --> 00:32:15,506
我将快速概述ICE-AR项目，

508
00:32:15,506 --> 00:32:20,440
并谈一谈我们学到的一些教训。

509
00:32:20,440 --> 00:32:25,279
这些都是我们在内部反复讨论了很多次的事情。

510
00:32:25,279 --> 00:32:28,442
既是为了与英特尔和国家科学基金会分享，现在也与您分享。

511
00:32:28,442 --> 00:32:35,395
这里有四个研究重点，其中一个是在应用程序方面，这确实导致了API的发展，

512
00:32:35,395 --> 00:32:39,546
项目的一个重要部分是库的开发。

513
00:32:39,546 --> 00:32:44,451
在我们探索过程中，确切需要哪些应用程序。

514
00:32:44,451 --> 00:32:49,508
一个关于边缘安全的，一个关于信息中心无线的，

515
00:32:49,508 --> 00:32:54,050
所以基于数据中心的NDN方法对底层的影响

516
00:32:54,050 --> 00:32:57,239
无线技术在这种边缘计算环境中的应用。

517
00:32:57,239 --> 00:33:00,348
接着是将加速作为一项服务的使用，以及

518
00:33:00,348 --> 00:33:03,974
这些都是通过使用增强现实来推动的，

519
00:33:03,974 --> 00:33:08,710
这些都是通过使用分层混合现实来推动无线边缘网络中命名数据网络（NDN）的研究。

520
00:33:08,710 --> 00:33:12,800
在网站上，有大量的代码和~!@#$%^&*()

521
00:33:12,800 --> 00:33:14,680
更详细的出版物。

522
00:33:14,680 --> 00:33:17,660
我会在这里迅速地走过一切内容。

523
00:33:17,660 --> 00:33:20,280
因此，在那里有更多的技术细节。

524
00:33:20,280 --> 00:33:23,913
因此，最初的驱动因素是分散式增强现实。

525
00:33:23,913 --> 00:33:27,541
因此，基本的想法是，对于未来的增强现实（AR），

526
00:33:27,541 --> 00:33:31,850
我们可能会从集中式的应用程序转变过来。

527
00:33:31,850 --> 00:33:35,920
我们可能会从集中式的应用程序转变过来，它们在一个烟囱式的上下文中交付，无论是对于应用程序还是 the content to a decentralized approach, where individuals share their context,

528
00:33:35,920 --> 00:33:40,905
内容转变为一种去中心化的方式，个人在其中分享他们的上下文环境，

529
00:33:40,905 --> 00:33:43,910
位置、摄像头视角等内容。

530
00:33:43,910 --> 00:33:47,872
并且作为回报，从多个来源获取内容提供。

531
00:33:47,872 --> 00:33:52,723
并且有边缘处理节点参与其中

532
00:33:52,723 --> 00:33:57,307
计算上下文或者理解更深层次的概念

533
00:33:57,307 --> 00:34:01,537
从手机上的原始传感器读数中计算上下文，以及

534
00:34:01,537 --> 00:34:07,260
还有为最终的增强现实体验提供定制内容。

535
00:34:07,260 --> 00:34:11,765
在项目过程中，我认为我们在应用方面进行了转变。

536
00:34:11,765 --> 00:34:16,200
不仅仅关注增强现实（AR），而是真正关注媒体的更广泛转变。

537
00:34:16,200 --> 00:34:20,706
和体验以及交付来自一个旧模式，在这个模式中，计算在某种程度上是

538
00:34:20,706 --> 00:34:23,717
在生产过程的每个阶段都是孤立的。

539
00:34:23,717 --> 00:34:28,593
从构想媒体，到制作媒体，再到传递媒体，以及体验媒体，

540
00:34:28,593 --> 00:34:33,151
实现一个真正的实时模型，这一模型无疑是受到了网页运作方式的启发。

541
00:34:33,151 --> 00:34:37,635
但现在，游戏引擎以及一些实时3D渲染工具

542
00:34:37,635 --> 00:34:40,963
正在影响AR VR电影制作等领域。

543
00:34:40,963 --> 00:34:45,811
正在为边缘计算带来许多有趣的机遇，

544
00:34:45,811 --> 00:34:49,980
在这种媒介中，内容是在最后可能的时刻进行定制的。

545
00:34:49,980 --> 00:34:54,570
因此，ICE-AR项目的首要推动力是这种应用焦点，

546
00:34:54,570 --> 00:34:57,860
我实际上不打算过多讨论增强现实技术(AR)相关的内容。

547
00:34:57,860 --> 00:35:02,718
MR集成测试确实推动了我们的实践实验。

548
00:35:02,718 --> 00:35:06,750
并且我只想在这次演讲中专注于四个成果，

549
00:35:06,750 --> 00:35:09,720
在为社区提供新的API和库方面。

550
00:35:09,720 --> 00:35:13,555
第一个被称为通用名称库，NDN-CNL。

551
00:35:13,555 --> 00:35:18,980
这是一个面向NDN的集合导向API，它在某种程度上提升了一个层级。

552
00:35:18,980 --> 00:35:24,600
从大多数现有API处理的兴趣数据交换开始。

553
00:35:24,600 --> 00:35:29,379
并提出了一种与基于套接字方式思考不同的替代方案，该方案侧重于

554
00:35:29,379 --> 00:35:33,350
提出了一种以名称为基础的集合作为应用程序本身的API。

555
00:35:34,720 --> 00:35:39,820
第二个是我们之前关于实时工作的整合。

556
00:35:39,820 --> 00:35:44,800
视频转换成一种名为Touch Designer的可视化编程语言。

557
00:35:44,800 --> 00:35:49,966
这被称为TouchNDN，所以你会看到一点儿

558
00:35:49,966 --> 00:35:56,980
视频中的那一部分可能没有为你播放得很流畅。

559
00:35:56,980 --> 00:35:59,654
但你大致可以了解他的视觉编程环境用于

560
00:35:59,654 --> 00:36:01,900
实验以数据为中心的媒体。

561
00:36:01,900 --> 00:36:07,240
然后在右下角是一个NDN-Lite的堆栈图，它是最新的

562
00:36:07,240 --> 00:36:13,870
考虑到易用性和生成物联网框架需求的一种框架。

563
00:36:13,870 --> 00:36:19,430
跨平台部署适用于物联网的NDN以及增强现实支持环境。

564
00:36:19,430 --> 00:36:20,200
但也是，

565
00:36:20,200 --> 00:36:24,390
试图在之前社区中发生的大量物联网工作的基础上进行拓展。

566
00:36:24,390 --> 00:36:28,306
旨在对远程过程调用的一些方法进行探索，这些方法将会

567
00:36:28,306 --> 00:36:31,655
将用于推广我们调用远程服务的方式。

568
00:36:31,655 --> 00:36:38,053
以及一些如何修改现有视频编解码器以利用

569
00:36:38,053 --> 00:36:44,354
NDN消费者驱动方法的选择视频的空间和

570
00:36:44,354 --> 00:36:49,728
时间在个人层面上的应用，以及使用名称的兴趣。

571
00:36:49,728 --> 00:36:50,854
当然，

572
00:36:50,854 --> 00:36:56,932
我们正在研究将安全性内置于应用程序和网络之中。

573
00:36:56,932 --> 00:37:01,737
但实际上，从一个NDN研究的角度来看，重点在于持续进行

574
00:37:01,737 --> 00:37:06,640
努力通过使用名称来使安全关系动态化。

575
00:37:06,640 --> 00:37:11,940
因此，在这张幻灯片上列出了几个不同的例子，涵盖了范围从……

576
00:37:11,940 --> 00:37:17,930
新的证书方案，如Coalesce，用于物联网上高效的短期密钥，

577
00:37:17,930 --> 00:37:21,950
继续我们的证书基础设施工作。

578
00:37:21,950 --> 00:37:25,950
应用基于属性的密码学进行一些应用，它能够

579
00:37:25,950 --> 00:37:30,690
提供了一个很好的桥梁，用于我们在名称中能够指定的内容，

580
00:37:30,690 --> 00:37:35,380
在可能允许验证的属性方面

581
00:37:36,860 --> 00:37:44,400
在ABS证书中以实质上将策略内置于数据之中的方式，

582
00:37:44,400 --> 00:37:51,250
在我之前提到的那种上下文交换中进行访问控制。

583
00:37:51,250 --> 00:37:54,670
并且最后还要考虑到可用性，以及

584
00:37:54,670 --> 00:37:57,690
在这些情况下如何处理DDoS攻击。

585
00:37:57,690 --> 00:38:00,530
因此，一些安全API正在被调用，而且

586
00:38:00,530 --> 00:38:03,640
我认为如果您愿意的话，您可能会对回答详细问题感兴趣。

587
00:38:03,640 --> 00:38:08,610
了解更多关于安全工作的信息，抱歉。

588
00:38:08,610 --> 00:38:17,160
然后第三个研究领域关注的是信息影响。

589
00:38:17,160 --> 00:38:20,370
或者在无线层面上的数据中心思维方式。

590
00:38:20,370 --> 00:38:25,317
如果你考虑到NDN天生的多播行为，它非常适合用于

591
00:38:25,317 --> 00:38:28,880
无线媒介，或者至少，它应该非常适合用于……

592
00:38:28,880 --> 00:38:31,514
一种天生就是广播的媒介。

593
00:38:31,514 --> 00:38:35,936
但是WiFi的常见实现集中于单播行为。

594
00:38:35,936 --> 00:38:41,221
因此，该项目的一个重要工作重点是寻找实际的方法来...

595
00:38:41,221 --> 00:38:46,426
利用优势并创建高性能的链路层无线多播

596
00:38:46,426 --> 00:38:51,780
这是利用NDN兴趣和数据中可用的名字来发挥作用。

597
00:38:51,780 --> 00:38:57,122
并且同时，进一步利用这些名字开始进行

598
00:38:57,122 --> 00:39:02,311
运行时学习和推理关于不同类型的故障模式。

599
00:39:02,311 --> 00:39:07,190
因此，既要根据名称本身来观察交通模式，也要，

600
00:39:07,190 --> 00:39:10,085
因此，兴趣中也可以编码的事物。

601
00:39:10,085 --> 00:39:14,895
因此，无线小组的一些实验结果如下所示，

602
00:39:14,895 --> 00:39:20,610
以及更高性能的组播、增强现实和虚拟现实应用的速度得到了改善。

603
00:39:20,610 --> 00:39:25,244
以及在这些高性能组播情况下减少了数据包丢失，

604
00:39:25,244 --> 00:39:29,093
以及对Android WiFi直连进行了一些实现上的补充

605
00:39:29,093 --> 00:39:33,814
这些对我们正在研究的应用程序的未来至关重要。

606
00:39:33,814 --> 00:39:40,329
最后，作为一个由NDN很好支持的边缘服务的关键示例。

607
00:39:40,329 --> 00:39:44,367
我们考察了基于FPGA的加速技术，

608
00:39:44,367 --> 00:39:50,475
在这种情况下，对于尝试在边缘进行数据摄取表现出了兴趣，

609
00:39:50,475 --> 00:39:56,065
在这种情况下，对于尝试在边缘进行数据摄取表现出了兴趣，通过手机上携带的摄像头获得低延迟内容，

610
00:39:56,065 --> 00:39:59,920
一种耳机，从未经处理的视频开始。

611
00:39:59,920 --> 00:40:02,590
这是某个有着深刻背景的东西，

612
00:40:02,590 --> 00:40:06,270
场景中的人类发生了什么事？

613
00:40:06,270 --> 00:40:10,450
所以我们对姿态识别感兴趣，作为一种初始的基础，用于

614
00:40:10,450 --> 00:40:13,320
理解活动和人类行为。

615
00:40:13,320 --> 00:40:18,883
>> 加州大学洛杉矶分校的Jason Collins小组致力于研究一种新型的FPGA加速技术。

616
00:40:18,883 --> 00:40:24,561
这样可以实现低功耗和高帧率的优秀结果。

617
00:40:24,561 --> 00:40:29,442
这是一个可以插入加速器的示例。

618
00:40:29,442 --> 00:40:34,410
作为一种服务模式，利用了Alicia Shanks小组的工作成果，

619
00:40:34,410 --> 00:40:37,999
这种远程过程调用的一般机制。

620
00:40:37,999 --> 00:40:43,458
所以现在我将利用最后的几分钟时间来谈谈贡献和

621
00:40:43,458 --> 00:40:44,772
所以现在我将利用最后的几分钟时间来谈谈贡献和吸取的教训。

622
00:40:44,772 --> 00:40:47,956
也许应该更多地关注所学到的教训。

623
00:40:47,956 --> 00:40:52,702
我们所见证的，我们相信是对架构的进一步验证，以及它在促进这些无线边缘应用方面的方法。

624
00:40:52,702 --> 00:40:56,985
它在促进这些无线边缘应用方面的方法。

625
00:40:56,985 --> 00:40:59,838
我想特别指出一件事情，

626
00:40:59,838 --> 00:41:04,205
这是网络计算和存储的中间要点。

627
00:41:04,205 --> 00:41:07,142
实际上，内容生产者和

628
00:41:07,142 --> 00:41:10,386
消费者们也都在提供相同的数据。

629
00:41:10,386 --> 00:41:15,266
因此通过无缝集成到新设备的生态系统中，从

630
00:41:15,266 --> 00:41:19,909
物联网到媒体，我认为我们在一个非常具体和~!@#$%^&*()

631
00:41:19,909 --> 00:41:24,710
特定的方式在我的领域，那就是突然专注于应用程序。

632
00:41:24,710 --> 00:41:29,142
能够从几个不同的角度查看视频。

633
00:41:29,142 --> 00:41:32,999
我们可以接入的是一辆公交车吗，我们会收到的是一个流吗？

634
00:41:32,999 --> 00:41:34,214
一种传统的方式或者

635
00:41:34,214 --> 00:41:38,947
本质上是键值存储的一部分，这实际上非常类似于存储。

636
00:41:38,947 --> 00:41:42,361
实际上，视频是如何制作的并不重要，

637
00:41:42,361 --> 00:41:47,082
但是通过将其置于NDN（命名数据网络）数据包格式并放在网络上，我们可以使用任何一种

638
00:41:47,082 --> 00:41:51,803
这三种方法作为一个例子，用于访问实时和历史视频。

639
00:41:51,803 --> 00:41:56,548
这种架构对我们思考应用程序可能产生的影响有着深刻的启示。

640
00:41:56,548 --> 00:42:01,062
此外，ICR项目无疑加深了我们团队对……的理解。

641
00:42:01,062 --> 00:42:05,164
网络架构向上和向下的影响。

642
00:42:05,164 --> 00:42:10,556
因此影响了现在为支持IP而优化的底层技术，

643
00:42:10,556 --> 00:42:16,031
因此基本上是点对点传输机制的大部分时间以及，

644
00:42:16,031 --> 00:42:20,602
当然，这对于上层应用在它们的思考方式上的影响

645
00:42:20,602 --> 00:42:22,725
关于内容的移动，

646
00:42:22,725 --> 00:42:27,983
在他们继续交换内容等事宜之前建立联系。

647
00:42:27,983 --> 00:42:34,930
当然，这种影响也存在于中间层以及安全方法上。

648
00:42:34,930 --> 00:42:39,583
我们认为从那种对上层和下层的影响中，看到了一些挑战。

649
00:42:39,583 --> 00:42:44,464
我们确实没有预料到在量化比较的实施上，会有一些我们没有真正预期到的好的表现结果。

650
00:42:44,464 --> 00:42:49,409
我们确实看到了一些分领域内出乎意料的好的表现结果。

651
00:42:49,409 --> 00:42:52,577
我在之前的幻灯片中简要提到过，但是

652
00:42:52,577 --> 00:42:57,135
很多工作的实施努力超出了我们的预期。

653
00:42:57,135 --> 00:43:02,156
访问协议栈中的较低层或修改媒体格式和

654
00:43:02,156 --> 00:43:06,431
访问协议栈中的较低层或修改媒体格式和协议，它们以交织且日益复杂的方式存在。

655
00:43:06,431 --> 00:43:11,808
培根的假设无疑是为了开始在更大的AR平台上测试事物。

656
00:43:11,808 --> 00:43:13,726
游戏引擎本身就是 значительные программные инженерные проекты.

657
00:43:13,726 --> 00:43:17,744
游戏引擎本身就是重大的软件工程项目。

658
00:43:17,744 --> 00:43:22,394
所以有很多东西，我认为我们学到了一些关于如何可能地

659
00:43:22,394 --> 00:43:27,294
支持这种实验在未来能够得到更好的支持，并且

660
00:43:27,294 --> 00:43:30,864
也许可以稍微游说一下，争取更多地访问硬件和

661
00:43:30,864 --> 00:43:36,370
也许可以稍微游说一下，争取更多地访问硬件和操作系统功能，这对于真正展示NDN价值是必要的。

662
00:43:36,370 --> 00:43:39,033
那么，我们常收到的一个问题是，嗯，

663
00:43:39,033 --> 00:43:41,232
我们能使用IP做同样的事情吗？

664
00:43:41,232 --> 00:43:43,174
这里有一些答案。

665
00:43:43,174 --> 00:43:47,898
我不会详述所有的内容，但这是一个不错的对话，我们可能能够在接下来的几天里，在一些小组讨论中进行。

666
00:43:47,898 --> 00:43:51,742
在接下来的几天里，在一些小组讨论中进行。

667
00:43:51,742 --> 00:43:56,928
但是，为了在这里总结我们的理解，还需要进一步阐述一些内容。

668
00:43:56,928 --> 00:44:02,725
我们确实在寻找能够更深入地访问网络的操作系统平台。

669
00:44:02,725 --> 00:44:07,852
所以那是我们可能需要提供一些支持的地方。

670
00:44:07,852 --> 00:44:09,053
研究人员。

671
00:44:09,053 --> 00:44:13,789
当然我们希望尝试允许应用程序实现以数据为中心的

672
00:44:13,789 --> 00:44:16,749
范式直接应用于应用程序设计中，

673
00:44:16,749 --> 00:44:20,532
这是印度CNL图书馆试图去做的事情。

674
00:44:20,532 --> 00:44:23,947
在我们可以利用那种类型的图书馔的情况下允许

675
00:44:23,947 --> 00:44:27,932
在网络层面也设计成以数据为中心的操作方式，并且

676
00:44:27,932 --> 00:44:32,772
提供了一种方式，在这种方式中，可能没有那么大的语义差距，介于如何在应用设计师工作和NDN网络如何工作之间。

677
00:44:32,772 --> 00:44:36,924
应用设计师的工作方式，以及NDN网络的工作原理。

678
00:44:36,924 --> 00:44:42,370
这正引导我们朝着，希望是一些未来富有成果的关注领域前进。

679
00:44:42,370 --> 00:44:45,613
我们并不是想要一次性改变所有事情，而是

680
00:44:45,613 --> 00:44:50,102
我们希望逐渐地、一点一点地从边缘开始工作，专注于即插即用的行为。

681
00:44:50,102 --> 00:44:55,104
NDN平台和绿地在很大程度上是此前的这种情况

682
00:44:55,104 --> 00:45:00,473
之前对知识产权的重视和优化在很大程度上没有太大的立足点。

683
00:45:00,473 --> 00:45:05,581
因此，一些未来的工作在这里列出了，我很乐意讨论其中的任何内容。

684
00:45:05,581 --> 00:45:08,051
是的，如果有问题的话，我可以回答一个。

685
00:45:08,051 --> 00:45:12,327
如果没有的话，那或许可以对你看来最令人兴奋的未来工作做一个最后的评论。

686
00:45:14,373 --> 00:45:16,393
有没有问题？

687
00:45:16,393 --> 00:45:18,226
谢谢你精彩的演讲。

688
00:45:21,554 --> 00:45:26,152
好的，关于激动人心的未来的最后想法。

689
00:45:26,152 --> 00:45:30,663
我可以告诉你最令人激动的最后想法是什么，那就是对于

690
00:45:30,663 --> 00:45:34,937
我可以告诉你最令人激动的最后想法是什么，那就是对于我来说，所谓的即插即用听起来很简单，或者可能过于简化，但是I think the more that we can take this experience in the last three years and

691
00:45:34,937 --> 00:45:39,845
我认为我们越能够利用过去三年的经验，

692
00:45:39,845 --> 00:45:44,832
在每一个推进方向中，探索方法将这些工具交到尽可能多的研究人员和实验者手中。

693
00:45:44,832 --> 00:45:48,263
将这些工具交到尽可能多的研究人员和实验者手中。

694
00:45:48,263 --> 00:45:52,813
这似乎是当前未来工作中最令人兴奋的部分之一。

695
00:45:52,813 --> 00:45:56,673
>> 正因为此，您关注的是配置的便利性，我认为。

696
00:45:56,673 --> 00:46:01,271
>> 正因为此，您关注的是配置的便利性，但我认为也在尝试找到方法以便

697
00:46:01,271 --> 00:46:05,884
API 提供了易于理解的以数据为中心的视角。

698
00:46:05,884 --> 00:46:12,062
所以它肯定是尽可能简化事物，以便进行实验，

699
00:46:12,062 --> 00:46:18,430
但也试图在某种程度上帮助引导应用程序转向以数据为中心的视角。

700
00:46:18,430 --> 00:46:24,251
这使他们能够利用底层的网络行为。

701
00:46:24,251 --> 00:46:28,018
>> 太好了，组织者能告诉我们吗？

702
00:46:28,018 --> 00:46:31,913
我们还有时间再问一个问题吗？

703
00:46:31,913 --> 00:46:33,142
>> 不要这么想就离开。

704
00:46:33,142 --> 00:46:34,970
>> 好的，我们私下里讨论。

705
00:46:36,160 --> 00:46:36,840
>> 非常感谢您。

706
00:46:37,930 --> 00:46:40,205
>> 非常感谢大家。

707
00:46:40,205 --> 00:46:41,798
非常感谢大家。

708
00:46:41,798 --> 00:46:45,435
议程上接下来是小组讨论二，但是

709
00:46:45,435 --> 00:46:49,642
我们有伊利亚，他错过了大衰退，

710
00:46:49,642 --> 00:46:53,633
我们最多给他十分钟时间。

711
00:46:53,633 --> 00:46:58,737
所以我们最多延迟第二个小组讨论十分钟，伊利亚。

712
00:46:58,737 --> 00:47:01,015
>> 好的，很好。

713
00:47:01,015 --> 00:47:04,370
是的，感谢今天有我在此。

714
00:47:04,370 --> 00:47:10,230
我认为我的演讲或许有些脱离了上下文。

715
00:47:10,230 --> 00:47:15,772
因为这不是专门针对印度建筑的，所以那些讨论的其他内容我可能没有涉及。

716
00:47:15,772 --> 00:47:20,190
所以织物是一种中等规模的研究基础设施。

717
00:47:20,190 --> 00:47:25,153
去年资助的项目旨在建设一个全国性的

718
00:47:25,153 --> 00:47:30,018
去年资助的项目旨在建设一个全国性的网络测试平台，该平台将允许进行实验，以探索各种分布式的、垂直领域的应用和

719
00:47:30,018 --> 00:47:34,882
多种分布式的、垂直领域的应用和

720
00:47:34,882 --> 00:47:39,844
架构的一个关键思想实际上是这样的，

721
00:47:39,844 --> 00:47:45,126
是时候考虑在网络中加入更多的状态了。

722
00:47:45,126 --> 00:47:49,340
我们作为这个网络基础设施的构建者，应该考虑状态可能呈现的形式，尽量不要对...

723
00:47:49,340 --> 00:47:53,219
我们作为这个网络基础设施的构建者，应该尽量不要对其产生过多影响，

724
00:47:53,219 --> 00:47:58,730
我们只是尽量为实验者创造尽可能多的选项供他们尝试。

725
00:48:00,080 --> 00:48:05,970
当然，NDN架构是一个开放的新型互联网架构示例，它具有更多需要存储和维护状态的特性。

726
00:48:05,970 --> 00:48:11,010
需要存储和维护状态的互联网架构

727
00:48:11,010 --> 00:48:12,680
需要将处理能力从网络中分离出来。

728
00:48:13,860 --> 00:48:17,680
但正如我所说，我们作为这些基础设施的构建者，

729
00:48:17,680 --> 00:48:22,430
努力对各种可能性保持中立。

730
00:48:22,430 --> 00:48:26,490
计算机界应该有机会去探索

731
00:48:26,490 --> 00:48:29,030
这些在架构中的各种拐点和

732
00:48:29,030 --> 00:48:33,140
然后在一个合理的规模水平上决定什么有效，什么无效。

733
00:48:33,140 --> 00:48:36,610
因此，简单介绍一下领导团队，包括我自己和

734
00:48:36,610 --> 00:48:41,110
Nita Nicolaj 来自内圆柱 Urbana Champaign，在漫画中是执行主任。

735
00:48:41,110 --> 00:48:44,500
美国能源部能源科学网络的主任。

736
00:48:44,500 --> 00:48:48,290
Jim Griffin来自肯塔基大学，Casey Wang来自克莱姆森大学。

737
00:48:48,290 --> 00:48:51,350
汤姆·莱曼，还有波罗·鲁夫和宗灵，飞。

738
00:48:53,150 --> 00:48:54,070
那么什么是fabric？

739
00:48:55,330 --> 00:49:00,900
正如我所提到的，它的目标是为了使一种新的范式成为可能。

740
00:49:00,900 --> 00:49:04,050
分布式协议、应用程序和架构。

741
00:49:04,050 --> 00:49:06,960
旨在构建一个全国范围的可编程网络。

742
00:49:06,960 --> 00:49:11,190
具有在核心的每个节点内的重要计算存储能力，

743
00:49:11,190 --> 00:49:13,330
不仅仅在边缘，而且在核心。

744
00:49:13,330 --> 00:49:18,200
这样你现在就有了一个连续的可能性范围，用来决定在哪里放置你的存储设备。

745
00:49:18,200 --> 00:49:22,870
在数据通过网络传输时进行计算。

746
00:49:22,870 --> 00:49:28,297
计算可以由多种增强的计算设备支持，比如GPU、FPGA、网络处理器等等。

747
00:49:28,297 --> 00:49:33,403
计算设备如GPU、FPGA、网络处理器等等。

748
00:49:33,403 --> 00:49:37,477
服务质量从可重复性、可再现性的角度来看是非常重要的。

749
00:49:37,477 --> 00:49:41,547
从经验的角度来看，我们不应该忘记这是一个实验平台，所以

750
00:49:41,547 --> 00:49:45,055
这是通过专用的百吉比光纤链接提供的。

751
00:49:45,055 --> 00:49:49,514
而且布料的概念本身并不是沙盒，但是

752
00:49:49,514 --> 00:49:54,399
而且它将激励措施与连接其他设施的高性能计算(HPC)联系起来。

753
00:49:54,399 --> 00:49:59,536
公共云、商业云以及

754
00:49:59,536 --> 00:50:04,166
一些边缘节点，以便实验者可以选择什么样的资源是在她的全球实验范围内，

755
00:50:04,166 --> 00:50:08,880
可以选择哪些资源是在她的全球实验范围内，

756
00:50:08,880 --> 00:50:13,471
你知道的，选择那些最接近她所需的资源。

757
00:50:13,471 --> 00:50:17,717
因为纺织品，我们没有必要从头开始重新发明一切。

758
00:50:17,717 --> 00:50:21,964
我们真的不能也不应该尝试复制整个生态系统的完整性。

759
00:50:21,964 --> 00:50:25,589
它在今天研究人员可用的其他资源上进行计算。

760
00:50:25,589 --> 00:50:27,990
它正在产生。

761
00:50:27,990 --> 00:50:31,930
它提供了一种在它们之间传输数据的独立方式

762
00:50:31,930 --> 00:50:34,500
在飞行中进行计算的过程，基本上就是这样。

763
00:50:36,510 --> 00:50:40,150
这是我们对于拓扑结构完成时的样子的设想。

764
00:50:40,150 --> 00:50:43,430
当然，这在接下来的几年里可能会有所改变。

765
00:50:43,430 --> 00:50:47,060
我们现在正处于为期四年的建设项目的第一年末尾。

766
00:50:48,150 --> 00:50:52,570
所有蓝色链接都是专用的百吉比特容量。

767
00:50:52,570 --> 00:50:55,980
然后黄色的部分是我们所说的太比特超级核心。

768
00:50:55,980 --> 00:51:00,610
这是我们计划建立某种形式的太比特网络的地方。

769
00:51:00,610 --> 00:51:04,890
无论是一太比特还是每秒1.2太比特。

770
00:51:04,890 --> 00:51:08,330
当然，有些地方我们会使用公共云出现在

771
00:51:08,330 --> 00:51:09,930
互联网到云连接系统。

772
00:51:11,510 --> 00:51:14,600
因此，你真的无法想象一个实验并且

773
00:51:14,600 --> 00:51:18,140
因此，你真的无法想象一个实验并且不包含某种形式的公共云的基础设施。So obviously that's that's a requirement and

774
00:51:18,140 --> 00:51:19,950
所以很明显，这是一个要求，

775
00:51:19,950 --> 00:51:23,380
那么你也可以看到所有的设施，至少是设施的初步清单，

776
00:51:23,380 --> 00:51:28,170
我们将会连接，你看到了标签云、爱情粉末、宇宙吗？

777
00:51:28,170 --> 00:51:31,670
匹兹堡超级计算中心，MGH，PCC等等。

778
00:51:33,980 --> 00:51:35,670
关于硬件方面的一些信息。

779
00:51:35,670 --> 00:51:38,710
所以整个想法是我们想要在计算之间插入一些东西。

780
00:51:38,710 --> 00:51:40,400
存储、不同类型的计算和

781
00:51:40,400 --> 00:51:43,430
存储进入网络中快速数据包流动的路径。

782
00:51:44,520 --> 00:51:49,090
所以，你知道，每个站点都是一组高性能服务器，

783
00:51:49,090 --> 00:51:54,100
双双CPU 32核心，拥有半个TB的RAM，各站点的服务器有不同的配置。

784
00:51:54,100 --> 00:51:58,440
的RAM，每个站点的服务器配置各不相同。

785
00:51:58,440 --> 00:52:03,360
有些配备了GPU，有些配备了FPGA和网络卡。

786
00:52:03,360 --> 00:52:05,720
不同层次的存储设施包括

787
00:52:05,720 --> 00:52:11,320
一些实验性的临时NVMe驱动器以及每个站点的旋转存储设施。

788
00:52:11,320 --> 00:52:16,280
以及当然，一切都连接到了一个交换机上，该交换机具有

789
00:52:16,280 --> 00:52:20,050
不同类型的端口速度从25到100及以上。

790
00:52:20,050 --> 00:52:21,020
千兆比特每秒。

791
00:52:22,640 --> 00:52:28,600
支持P4的FPGA是另一个目标，然后是Mellanox ConnectX-5 和

792
00:52:28,600 --> 00:52:33,550
支持OBS等功能的6系列家族卡作为硬件卸载卡。

793
00:52:33,550 --> 00:52:38,890
然后，这个想法是实验者本质上能够访问这些设备。

794
00:52:38,890 --> 00:52:42,910
我们主要设想的模式是使用具有直通功能的虚拟机。

795
00:52:42,910 --> 00:52:46,640
为了一些高价值实验，我们可以看到附加了PCI设备，

796
00:52:46,640 --> 00:52:50,580
为了这些高价值实验，我们专门为它们提供了整个服务器，并为实验进行了配置。

797
00:52:50,580 --> 00:52:54,030
然而，考虑到设施的规模大小，

798
00:52:54,030 --> 00:52:56,484
考虑到每个地点的资源数量，

799
00:52:56,484 --> 00:53:01,850
我们认为，为了使这成为一种成功的多用户设施，我们必须

800
00:53:01,850 --> 00:53:06,246
为了实现一定规模的扩展，我们必须依赖于某种程度的虚拟化技术。

801
00:53:07,962 --> 00:53:12,784
为了在织物中进行一个典型的实验，这完全是不现实的，但

802
00:53:12,784 --> 00:53:17,935
它只是在某种程度上展示了一些故意在地图上方显示的想法，

803
00:53:17,935 --> 00:53:23,087
美国仅仅是为了展示这种分布式能力的水平，或者说，

804
00:53:23,087 --> 00:53:28,571
您可能会连接一些外部资源，比如集群攻击或SDSC，用于

805
00:53:28,571 --> 00:53:35,440
例如，然后你可能会抽样监测通过这个链接的流量。

806
00:53:35,440 --> 00:53:39,390
你正在使用像NVMe驱动器这样的SSD，并且

807
00:53:39,390 --> 00:53:41,880
使用FPGA对数据进行一些额外处理，并且

808
00:53:41,880 --> 00:53:45,530
它通常就像是光纤或电线上的一个凸起。

809
00:53:45,530 --> 00:53:49,290
那么或许你想要用这些不同的设备来构建一个虚拟交换机。

810
00:53:49,290 --> 00:53:51,970
网络卡，或许有些是这样的。

811
00:53:51,970 --> 00:53:55,720
With the four capabilities, some of them may just be kind of obvious, or

812
00:53:55,720 --> 00:54:00,120
也许你在网络中托管了一个应用程序，它使用了GPU，再次，

813
00:54:00,120 --> 00:54:02,570
也许是用于缓存数据的快速驱动器之类的东西。

814
00:54:02,570 --> 00:54:07,640
和我们还有空间放置少量的专用p用于~!@#$%^&*()

815
00:54:07,640 --> 00:54:11,500
如果你真的需要非常非常高的端口数量来提高密度，可以使用交换机。

816
00:54:11,500 --> 00:54:15,910
在少数几个地方，你也可以实现相对较高的端口密度。

817
00:54:15,910 --> 00:54:22,010
是的，这是对现在所谓的网络基础设施的一个概念性描述。

818
00:54:22,010 --> 00:54:22,660
~!@#$%^&*()

819
00:54:22,660 --> 00:54:28,460
这将为工人配备具有不同类型的PCI设备。

820
00:54:28,460 --> 00:54:32,610
两个交换机：一个管理交换机用于外部访问，一个数据平面交换机用于

821
00:54:32,610 --> 00:54:36,150
访问您作为实验者创建的实际拓扑结构

822
00:54:38,280 --> 00:54:40,930
这只是一些使用案例的例子，这些案例

823
00:54:42,070 --> 00:54:44,460
可能特别对这个社区有用，对吧？

824
00:54:44,460 --> 00:54:50,290
所以随着NDN想要在网络中进行数据存储和处理。

825
00:54:50,290 --> 00:54:53,970
这是架构中不可或缺的一部分。

826
00:54:53,970 --> 00:54:59,220
你可以通过交换机直接进行传递。

827
00:54:59,220 --> 00:55:03,240
如果你只是想绕过网站，你可以将流量直接弹入网站中并且在站点存储中进行一些处理或者即时处理。

828
00:55:03,240 --> 00:55:07,900
在站点存储中进行一些处理或者即时处理。

829
00:55:07,900 --> 00:55:15,080
您可以托管整个应用程序，并再次让Avid服务器提供服务。

830
00:55:15,080 --> 00:55:17,910
多个点传入的数据包流。

831
00:55:17,910 --> 00:55:20,870
所以是按行速率有状态的。

832
00:55:20,870 --> 00:55:24,920
同样，我们并不清楚这个状态所代表的含义，所以在这种情况下。

833
00:55:25,920 --> 00:55:29,130
它可能是数据缓存，也可能是某种控制平面状态，

834
00:55:29,130 --> 00:55:31,120
它可能是这两者的某种结合。

835
00:55:31,120 --> 00:55:32,889
这取决于实验者来决定。

836
00:55:34,560 --> 00:55:37,460
我们也非常关注测量能力。

837
00:55:37,460 --> 00:55:43,210
因此，每个站点很可能会有一个仅用于PTP的GPS授时钟。

838
00:55:43,210 --> 00:55:45,890
但这样你就可以进行某种

839
00:55:45,890 --> 00:55:51,390
Packet Tracer 可以以毫秒级精度捕获网络中的快照。

840
00:55:51,390 --> 00:55:53,860
并且对网络中传输的内容有所了解。

841
00:55:53,860 --> 00:55:57,150
显然，这是非常高的数据包传输速率，比如每秒百吉比特，

842
00:55:57,150 --> 00:56:00,240
这些设备无法处理大量的流量。

843
00:56:00,240 --> 00:56:05,200
但尽管如此，它确实为此打开了一种可能性。

844
00:56:06,560 --> 00:56:11,110
我们将对智能视频以及服务器本身进行仪器化处理，用于

845
00:56:11,110 --> 00:56:13,563
我们将对智能视频以及服务器本身进行仪器化处理，用于测量功耗。Some optical layer measurements were available, now this facility will not have.

846
00:56:13,563 --> 00:56:17,638
过去这个设施可以进行一些光层测量，但现在不再拥有这种功能。

847
00:56:17,638 --> 00:56:20,880
边缘光层，并不是架构的一部分。

848
00:56:20,880 --> 00:56:25,292
然而，光层应该提供某种程度的测量数据。

849
00:56:25,292 --> 00:56:30,087
当然，还有来自CPU、内存的传统利用率度量指标，

850
00:56:30,087 --> 00:56:32,154
磁盘等，用于他们的账户。

851
00:56:32,154 --> 00:56:34,266
端口镜像也将得到支持，所以

852
00:56:34,266 --> 00:56:36,500
你可以捕获特定的流量，如果你想的话。

853
00:56:38,390 --> 00:56:39,626
我认为就是这样了。

854
00:56:39,626 --> 00:56:43,581
我想保持简短，或许留一点空间给

855
00:56:43,581 --> 00:56:44,906
其他的问题。

856
00:56:44,906 --> 00:56:49,740
我现在可能会停止分享，等待问题。

857
00:56:49,740 --> 00:56:55,501
用户如何进行实验，这是一个问题，你能听到我说话吗？

858
00:56:55,501 --> 00:56:57,060
你能听清楚我说话吗？

859
00:56:57,060 --> 00:56:58,560
>> 是的，我们听到你说的了。

860
00:56:58,560 --> 00:57:02,810
是的，用户定义了他们想要做的拓扑结构，

861
00:57:02,810 --> 00:57:04,870
他们定义了该拓扑结构的属性，

862
00:57:04,870 --> 00:57:07,390
他们在配置中定义了拓扑结构的元素。

863
00:57:09,000 --> 00:57:13,820
本质上，它要么通过门户进行操作，要么使用API。

864
00:57:13,820 --> 00:57:15,865
用户界面将要，

865
00:57:15,865 --> 00:57:20,274
主要的用户界面很可能是通过Jupyter笔记本来实现的。

866
00:57:20,274 --> 00:57:24,976
以便你有一个可编程的、可脚本化的环境，在这里你可以

867
00:57:24,976 --> 00:57:28,579
启动你的实验，配置它，收集数据，

868
00:57:28,579 --> 00:57:33,150
处理数据，然后希望得到你期望的结果。

869
00:57:33,150 --> 00:57:36,073
所以这将依赖于联合身份认证。

870
00:57:36,073 --> 00:57:40,214
所以来自美国机构的研究人员是InCommon的一部分。

871
00:57:40,214 --> 00:57:43,601
联盟应该可以轻松访问这个。

872
00:57:43,601 --> 00:57:49,617
到我们完成建设时，我们也将拥有一份可接受使用政策（AUP），以及其他政策来帮助理解如何在不久的将来最好地使用设施。

873
00:57:49,617 --> 00:57:56,133
以及其他政策来帮助理解如何在不久的将来最好地使用设施。

874
00:57:56,133 --> 00:58:00,174
我们计划在夏季向早期实验者开放一个设施。

875
00:58:00,174 --> 00:58:00,790
2021.

876
00:58:00,790 --> 00:58:06,197
这将主要是一种先到先得的方式。

877
00:58:06,197 --> 00:58:10,017
我们将与研究界的一些成员合作，以便在某种程度上帮助我们。

878
00:58:10,017 --> 00:58:12,131
进来试试这个设施的性能。

879
00:58:12,131 --> 00:58:15,274
搞清楚什么有效，什么无效，什么可以做得更好。

880
00:58:18,422 --> 00:58:22,653
所以答案是否定的，这是一个建设项目，

881
00:58:22,653 --> 00:58:27,261
我们刚刚完成了第一年，正如我刚才提到的，

882
00:58:27,261 --> 00:58:34,139
总体可用性是2023年，有限的可用性是明年2021年。

883
00:58:34,139 --> 00:58:37,469
那么我们如何才能参与到这个结构中呢？

884
00:58:37,469 --> 00:58:40,814
所以我首先建议你做的就是访问我们的网站。

885
00:58:40,814 --> 00:58:43,518
fabric.net是什么？

886
00:58:43,518 --> 00:58:48,933
fabric.net是什么？那里有一个按钮，你可以点击参与进来。

887
00:58:48,933 --> 00:58:54,120
您将会定期或每月收到邮件，了解最新动态。

888
00:58:54,120 --> 00:58:58,183
我们正在举办一系列与不同社区的不同成员合作的研讨会，

889
00:58:58,183 --> 00:59:02,646
社区，试图收集更多的需求、实验的想法，

890
00:59:02,646 --> 00:59:05,594
可以对其他实验者有用的工具。

891
00:59:05,594 --> 00:59:10,407
我们考虑的一件事是能够建立一种临时的

892
00:59:10,407 --> 00:59:14,283
我们需要在网络中进行NDN配置文件实验。

893
00:59:14,283 --> 00:59:19,028
想要直接使用NDN的人可以简单地按下按钮。

894
00:59:19,028 --> 00:59:23,420
并在全国范围内按照他们想要的规模启动NDN网络。

895
00:59:24,550 --> 00:59:28,752
因此，实验配置文件的概念对我们的思考至关重要。

896
00:59:40,488 --> 00:59:45,758
是的，fabric的概念是你拥有专用资源。

897
00:59:45,758 --> 00:59:49,435
实验者如有必要，是否会拥有专用资源？

898
00:59:49,435 --> 00:59:52,575
是的，整个想法是你预留你需要的资源，以及

899
00:59:52,575 --> 00:59:56,070
我们只能说抱歉，我们无法帮助你管理日程安排。

900
00:59:56,070 --> 00:59:58,128
安排你将来的实验或者

901
00:59:58,128 --> 01:00:01,082
如果你的资源现成可用，请立即提供。

902
01:00:03,910 --> 01:00:09,068
但可重现性才是这里的驱动因素，可重现性才是关键。

903
01:00:09,068 --> 01:00:15,232
但为了获得可重现性，你必须拥有专用资源。

904
01:00:15,232 --> 01:00:16,564
通常为您专用保留。

905
01:00:20,312 --> 01:00:25,435
Fabric还将提供一个共享的三层容量用于

906
01:00:25,435 --> 01:00:30,231
这些实验类型或许是目前的IP

907
01:00:30,231 --> 01:00:34,922
实现足以进行数据传输。

908
01:00:34,922 --> 01:00:37,691
但实验者可能只是感兴趣

909
01:00:37,691 --> 01:00:41,668
在实验更高层次的概念和应用时，

910
01:00:41,668 --> 01:00:46,579
他们并不真的想要控制整个架构或协议栈。

911
01:00:46,579 --> 01:00:51,346
或者他们只是想尝试一些应用程序，但除此之外，

912
01:00:51,346 --> 01:00:55,143
到那个三层默认的尽力而为的三层，

913
01:00:55,143 --> 01:01:00,670
将会有专门的容量可以在整个足迹范围内预留。

914
01:01:03,950 --> 01:01:09,070
我们现在也有了扩展，计划扩展到欧洲和日本。

915
01:01:09,070 --> 01:01:12,473
所以英国，布里斯托，

916
01:01:12,473 --> 01:01:17,837
荷兰 Interserve 阿姆斯特丹，瑞士欧洲核子研究中心（CERN），

917
01:01:17,837 --> 01:01:22,490
Interserve 东京，我们也将在那里设立站点。

918
01:01:24,850 --> 01:01:31,380
好的，我想我们正在为物联网和边缘应用小组讨论做准备。

919
01:01:31,380 --> 01:01:35,600
也许所有的小组成员都可以开始准备了。

920
01:01:35,600 --> 01:01:40,460
我想首先说，

921
01:01:40,460 --> 01:01:43,320
区分边缘应用程序的特点是什么。

922
01:01:43,320 --> 01:01:47,360
我们很高兴能在早些时候进行这场会议，

923
01:01:47,360 --> 01:01:51,210
我们有人讲述了不同的边缘应用程序。

924
01:01:51,210 --> 01:01:56,645
我们还有那个上午的会议，可以说是与之相反的情况，

925
01:01:56,645 --> 01:02:01,595
这些应用程序大量使用了缓存和存储，以及

926
01:02:01,595 --> 01:02:04,880
这些应用程序大量使用了缓存和存储，以及持久数据的移动。

927
01:02:04,880 --> 01:02:09,944
与Ed的应用相比，我认为这种做法是出于善意的。

928
01:02:09,944 --> 01:02:14,685
专注于使用NDN作为通信协议。

929
01:02:14,685 --> 01:02:20,632
数据可能更加可靠，尽管可能依旧耐用。

930
01:02:20,632 --> 01:02:26,474
并且它非常重视安全性，以便在汽车应用中能够

931
01:02:26,474 --> 01:02:31,110
确实能够充分利用边缘网络的广播特性。

932
01:02:31,110 --> 01:02:36,790
而这正是杰夫在他的演讲中提到的一个问题。

933
01:02:36,790 --> 01:02:40,810
而我认为英特尔公司如何特别有趣。

934
01:02:40,810 --> 01:02:44,340
这个人为我们安排好了这一切。

935
01:02:44,340 --> 01:02:50,060
这个作为NSF项目的NDN确实得到了

936
01:02:50,060 --> 01:02:54,780
开始之时并未关注边缘，因为它是一种未来互联网应用。

937
01:02:54,780 --> 01:02:58,290
但有趣的是，这一切的根源和

938
01:02:58,290 --> 01:03:01,740
这种新的网络观点以及一些早期的工作

939
01:03:01,740 --> 01:03:05,310
PARC 真的非常关注你可以在网络边缘做的事情。

940
01:03:05,310 --> 01:03:09,400
当你这样做的时候，你就不需要过分担心IP路由和

941
01:03:09,400 --> 01:03:14,220
我们已经拥有的其他基础设施要素，以及

942
01:03:14,220 --> 01:03:20,070
你可以通过NDN风格的通信在边缘解决那个问题。

943
01:03:20,070 --> 01:03:23,720
所以我们要做的是我会让这些

944
01:03:23,720 --> 01:03:25,830
所以我们要做的是我会让这四位出色的小组成员也发言。We'll do it in the order of Justin Caswell,

945
01:03:25,830 --> 01:03:29,705
我们将按照Justin Caswell的顺序来进行，

946
01:03:29,705 --> 01:03:34,013
然后是Dan Massey，接着是Dang Hu。

947
01:03:34,013 --> 01:03:38,330
然后我想从Justin开始。

948
01:03:38,330 --> 01:03:45,101
然后我想介绍Justin，

949
01:03:45,101 --> 01:03:50,909
但我丢失了那个，我的介绍。

950
01:03:50,909 --> 01:03:55,512
我希望他们能明白。

951
01:03:59,325 --> 01:04:01,610
好的，我已经没有了。

952
01:04:01,610 --> 01:04:03,548
好的，稍等一下。

953
01:04:03,548 --> 01:04:08,334
好的，所以Justin是Rakhine的创始人和CEO，

954
01:04:08,334 --> 01:04:13,583
他是一家专注于区块链网络解决方案的公司的创始人兼首席执行官，该公司服务于电信行业。

955
01:04:13,583 --> 01:04:16,580
他服务于电信行业。

956
01:04:16,580 --> 01:04:22,577
他在通信系统方面拥有20多年的经验，专注于无线通讯。

957
01:04:22,577 --> 01:04:25,184
无线和卫星通信。

958
01:04:25,184 --> 01:04:30,240
这包括了像埃克森美孚和联邦快递这样的公司。

959
01:04:30,240 --> 01:04:35,290
贾斯汀是一位连续创业者、全栈开发者和创新领导者。

960
01:04:35,290 --> 01:04:39,150
他直接与网络运营商、数据中心、政府以及

961
01:04:39,150 --> 01:04:43,510
他的工作特别聚焦于5G网络内的尖端技术运营私营行业。

962
01:04:43,510 --> 01:04:47,609
他的工作特别聚焦于5G网络内，

963
01:04:47,609 --> 01:04:53,346
他的工作特别聚焦于5G网络内，高级通信系统的应用，利用人工智能，当然还有NDN。So, Justin, do you wanna go ahead and

964
01:04:53,346 --> 01:04:56,984
那么，贾斯汀，你想继续并且

965
01:04:56,984 --> 01:05:01,418
解释一下你所看到的一些问题并且

966
01:05:01,418 --> 01:05:06,500
解释一下你所看到的一些问题并且对观众来说会有趣的事情？Thanks.

967
01:05:06,500 --> 01:05:08,440
谢谢。

968
01:05:08,440 --> 01:05:12,161
谢谢你的介绍，Kathy，是的，所以

969
01:05:12,161 --> 01:05:15,079
我们正在研究的一些事情。

970
01:05:15,079 --> 01:05:19,660
我们一开始接触NDN时，我们所参与的是

971
01:05:19,660 --> 01:05:23,469
我们想要使用一个运行在NDN之上的区块链应用程序。

972
01:05:23,469 --> 01:05:28,184
因为有很多效率，你可以你可以~!@#$%^&*()

973
01:05:28,184 --> 01:05:29,982
从那里就能收集到信息。

974
01:05:29,982 --> 01:05:35,356
但随后我们深入到了核心网络运营的更多方面。

975
01:05:35,356 --> 01:05:41,496
我们开始考虑，好的，那我们如何将NDN应用于5G部署中呢？

976
01:05:41,496 --> 01:05:45,619
任何类型的现代无线网络部署，是吗？

977
01:05:45,619 --> 01:05:48,961
因此，我们开始专注于物联网方面的事务。

978
01:05:48,961 --> 01:05:55,490
加密带来的挑战，将其通过网关引入。

979
01:05:55,490 --> 01:05:57,596
许多专有网关和

980
01:05:57,596 --> 01:06:02,416
有很多需要克服的硬件问题，所以存在很多挑战。

981
01:06:02,416 --> 01:06:07,098
我认为如果我们能与原始设备制造商（OEM）进一步合作，并将NDN集成进设备中，我认为那将是一个重大的进步。

982
01:06:07,098 --> 01:06:13,110
如果我们能直接将NDN集成进设备中，我认为那将是一个重大的进步。

983
01:06:13,110 --> 01:06:16,510
除此之外，我认为如果我们能够得到NDN，

984
01:06:16,510 --> 01:06:20,050
直接在那些设备的网关中工作。

985
01:06:20,050 --> 01:06:22,300
这是另一个重大挑战，

986
01:06:22,300 --> 01:06:24,910
我认为那将会为行业带来很多好处。

987
01:06:25,980 --> 01:06:30,360
我们开始关注的其他一些事情，不仅仅是物联网，而是转向...

988
01:06:30,360 --> 01:06:34,510
我们真的在关注广泛的计算平台，对吧？

989
01:06:34,510 --> 01:06:39,316
那么你如何处理所有这些边缘设备，无论是物联网设备还是

990
01:06:39,316 --> 01:06:43,361
你正在处理的是无人驾驶汽车、无人航空器或智慧城市。

991
01:06:43,361 --> 01:06:47,071
所以有大量的数据需要你处理，尤其是，

992
01:06:47,071 --> 01:06:49,950
所以当你开始研究5G部署时。

993
01:06:51,030 --> 01:06:54,625
所以，当你说好的，我们有这么多设备的时候。

994
01:06:54,625 --> 01:06:57,998
我们有所有这些用户，仅仅是机器对机器，

995
01:06:57,998 --> 01:07:00,229
它的一些实际用户对用户来说。

996
01:07:00,229 --> 01:07:03,939
和你有所有这些不同的动态信息集合在你手中。

997
01:07:03,939 --> 01:07:04,572
吸引进来。

998
01:07:04,572 --> 01:07:08,560
现在，你不仅要处理基带处理，对吧？

999
01:07:08,560 --> 01:07:09,117
但现在，

1000
01:07:09,117 --> 01:07:13,785
您需要管理这些运行在5G网络上的应用程序。

1001
01:07:13,785 --> 01:07:18,627
然后现在，你得说，好的，我们要怎样才能推进这件事呢？

1002
01:07:18,627 --> 01:07:23,020
实际上是否能够满足5G所要求的低延迟需求呢？

1003
01:07:23,020 --> 01:07:27,536
所以看这个情况，我们正在研究一个基于边缘计算的解决方案。

1004
01:07:27,536 --> 01:07:31,671
它是一个集成了中间NDN的移动边缘计算平台。

1005
01:07:31,671 --> 01:07:33,180
技术栈。

1006
01:07:33,180 --> 01:07:40,570
所以我们在网络方面使用了Mellanox NIC的可编程网卡。

1007
01:07:40,570 --> 01:07:42,637
所以我们正在逐层加入这一功能，以及

1008
01:07:42,637 --> 01:07:47,517
因此我们正在使用子框架来构建一些智能路由平台。

1009
01:07:47,517 --> 01:07:51,876
我们正在利用一些人工智能技术和其他现有的框架。

1010
01:07:51,876 --> 01:07:55,172
目前我们就是这样，但我们将会在这些基础上进行扩展。

1011
01:07:55,172 --> 01:07:59,230
我们实际上会做的是结合基带处理。

1012
01:07:59,230 --> 01:08:01,214
我们将NDN放在中间，对，然后

1013
01:08:01,214 --> 01:08:04,490
然后我们可以将下一个Mellanox网卡推到下面。

1014
01:08:04,490 --> 01:08:09,438
这在理论上允许我们去做一些事情，但我们还没有证明这一点，

1015
01:08:09,438 --> 01:08:14,094
但我们希望能够证明的是，现在我们可以智能地移动数据，无论是跨RAND，还是从边缘或本地数据中心。

1016
01:08:14,094 --> 01:08:17,689
跨RAND或从边缘或本地数据中心移动数据。

1017
01:08:17,689 --> 01:08:20,614
返回这些边缘计算平台，因此

1018
01:08:20,614 --> 01:08:24,144
我们正在考察路由的效率水平。

1019
01:08:24,144 --> 01:08:28,826
但我们在这里真正考虑的也是拥有一个数据感知的

1020
01:08:28,826 --> 01:08:34,880
平台，在这里，您现在可以部署这些基于边缘的应用程序。

1021
01:08:34,880 --> 01:08:38,500
通常会在类似公共云层级上运行。

1022
01:08:38,500 --> 01:08:43,143
然后将其推送到这个移动边缘计算平台上，该平台通常会在类似公共云层级上运行，接着再与一个5G无线网络连接起来。

1023
01:08:43,143 --> 01:08:45,518
然后再与一个5G无线网络连接起来。

1024
01:08:45,518 --> 01:08:48,946
它不一定要是一个5G无线网络，但显然，

1025
01:08:48,946 --> 01:08:51,872
如果它与此相关联，你将会获得许多好处。

1026
01:08:51,872 --> 01:08:55,278
那么这个想法，对吧，是现在你可以让操作员在这个计算平台上运行他们的应用程序。

1027
01:08:55,278 --> 01:08:57,389
在这个计算平台上的应用程序。

1028
01:08:57,389 --> 01:09:01,996
您可以让开发者在这个计算平台上运行应用程序。

1029
01:09:01,996 --> 01:09:06,318
但您也确实在两端都获得了很多网络效率。

1030
01:09:06,318 --> 01:09:09,679
在RAND一侧，以及您的硬线网络一侧。

1031
01:09:09,679 --> 01:09:12,678
所以这些是我们主要关注的事项。

1032
01:09:12,678 --> 01:09:14,610
我们对那些项目有很大的兴趣。

1033
01:09:14,610 --> 01:09:19,513
我们在美国这里，特别是德克萨斯州，正在做一些试验基地，还有

1034
01:09:19,513 --> 01:09:22,282
然后还在其他几个国家，

1035
01:09:22,282 --> 01:09:25,941
他们对这种解决方案感兴趣的地方。

1036
01:09:25,941 --> 01:09:30,750
也就是说，我们还将在该移动平台上推出一些自己的应用程序。

1037
01:09:30,750 --> 01:09:32,200
边缘计算平台。

1038
01:09:33,260 --> 01:09:36,900
因此，这更多地将其与游戏用例联系起来，

1039
01:09:36,900 --> 01:09:39,578
因此，这更多地将其与游戏用例联系起来，我们正在与NVIDIA以及该领域的其他一些公司合作。So we've got some pretty substantial challenges on our side.

1040
01:09:41,450 --> 01:09:44,320
因此，我们这边面临着一些相当大的挑战。

1041
01:09:45,340 --> 01:09:49,148
目前一切都很新，我们还在摸索很多关于5G的事情。

1042
01:09:49,148 --> 01:09:51,286
基础设施建设和部署。

1043
01:09:51,286 --> 01:09:53,743
尤其是，无论你何时看向。

1044
01:09:53,743 --> 01:09:57,906
就在全球正在进行的5G演变之中。

1045
01:09:57,906 --> 01:10:03,280
但我们相信真正的潜力释放是在边缘计算上。

1046
01:10:04,502 --> 01:10:09,286
我们认为网络性能将达到标准。

1047
01:10:09,286 --> 01:10:14,318
通过无线端5G的发展演变。

1048
01:10:14,318 --> 01:10:15,803
然后是数据中心，

1049
01:10:15,803 --> 01:10:19,743
接着是网络本身，我们也认为这些网络将会在未来几年得到升级，以满足5G的需求。

1050
01:10:19,743 --> 01:10:22,984
在未来几年中，以满足5G的需求，我们将大幅度地升级这些设施。

1051
01:10:22,984 --> 01:10:27,807
在未来几年中，以满足5G的需求，我们将大幅度地升级这些设施。因此，坐在边缘上，配备了移动边缘计算平台的我们，可以直接交付支持NDN的产品。

1052
01:10:27,807 --> 01:10:29,920
直接交付支持NDN的产品。

1053
01:10:29,920 --> 01:10:33,413
我们的目标，我认为那是我们的第一步，

1054
01:10:33,413 --> 01:10:38,579
我们确实在尝试从我们的视角来商业化NDN，对吧？

1055
01:10:38,579 --> 01:10:44,095
再在此基础上应用NDN区块链应用解决方案。

1056
01:10:44,095 --> 01:10:49,626
为了引入更多的自动化，我们可以验证数据流。

1057
01:10:49,626 --> 01:10:53,636
现在，您可以验证分析数据、不可变的审计记录以及追踪和……各种不同的事物。

1058
01:10:53,636 --> 01:10:55,189
各种不同的事物。

1059
01:10:55,189 --> 01:10:59,889
所以这确实是我们所处的位置，就像我说的，我们面临着许多挑战，

1060
01:10:59,889 --> 01:11:00,718
在我们面前。

1061
01:11:00,718 --> 01:11:06,942
但我们越来越多地获得了工业界的兴趣，包括电信领域。

1062
01:11:06,942 --> 01:11:12,037
但同时也包括硬件和软件应用的私营产业。

1063
01:11:16,021 --> 01:11:19,847
好的，谢谢你，贾斯汀，我们来看看每个人，然后

1064
01:11:19,847 --> 01:11:24,930
然后我们将在最后提出一些问题，或者你们甚至可以互相提问。

1065
01:11:24,930 --> 01:11:30,153
接下来是Dan Massey，Dan是项目负责人，负责...

1066
01:11:30,153 --> 01:11:36,966
他曾是科罗拉多博尔德分校的一名教员，并参与了国防部从5G到下一代技术（next G）倡议的运作部分。

1067
01:11:36,966 --> 01:11:41,956
participated in the operational aspects of the Department of Defense's initiative from 5G to the next generation technology (next G).

1068
01:11:41,956 --> 01:11:46,344
项目经理，负责网络安全部门科学与……

1069
01:11:46,344 --> 01:11:49,628
技术总监，那就是CST。

1070
01:11:49,628 --> 01:11:54,629
是的，在国土安全部担任CSP项目经理，

1071
01:11:54,629 --> 01:11:59,634
他开发并管理了一个项目，在该项目中，学术界和工业界的研究人员能够识别、解决并部署网络安全解决方案，以应对来自

1072
01:11:59,634 --> 01:12:04,482
行业界的研究人员能够识别、解决并部署网络安全解决方案，以应对来自

1073
01:12:04,482 --> 01:12:08,740
提高了互联网的安全性和弹性。

1074
01:12:08,740 --> 01:12:13,690
丹是最初的NSF FIA NDN项目的成员之一。

1075
01:12:13,690 --> 01:12:16,290
好的，丹。

1076
01:12:16,290 --> 01:12:17,070
非常好。谢谢你。

1077
01:12:17,070 --> 01:12:20,930
我非常感谢有机会来到这里。

1078
01:12:20,930 --> 01:12:24,170
我有一些我认为很有趣的新东西要谈。

1079
01:12:24,170 --> 01:12:26,510
所以正如凯西刚才指出的，

1080
01:12:26,510 --> 01:12:31,780
我刚刚加入了国防部的5G下一代通信技术倡议。

1081
01:12:31,780 --> 01:12:35,534
因此，我是一个名为“能够穿透操作”的项目经理。

1082
01:12:35,534 --> 01:12:40,310
我想稍微谈谈那是什么，以及我为什么认为那是

1083
01:12:40,310 --> 01:12:44,826
特别与NDN相关，以及我们为什么应该在这里讨论这个问题？

1084
01:12:44,826 --> 01:12:49,627
所以正如你们已经知道的，对吧，正如已经提到的在

1085
01:12:49,627 --> 01:12:55,160
5G即将迅速到来。

1086
01:12:55,160 --> 01:12:57,920
它为我们提供了许多新的机会。

1087
01:12:57,920 --> 01:13:04,489
因此从国防部这边来说，我们非常感兴趣的是如何利用这一点，

1088
01:13:04,489 --> 01:13:10,775
因此，我们如何在不局限于传统模式的思维中实现这一点。

1089
01:13:10,775 --> 01:13:15,970
我将声称这源自于Paul Baran提出的多路径概念。

1090
01:13:15,970 --> 01:13:20,882
有许多方法可以达到目的，但现在通常更多的是一种环路连接，而我们太常依赖于这种方式。

1091
01:13:20,882 --> 01:13:25,990
基于连接的方式，我们太常依赖于此。

1092
01:13:25,990 --> 01:13:31,090
这个社区很清楚，与其保护数据，不如保护传输渠道。

1093
01:13:31,090 --> 01:13:35,559
如果我们使用5G来实现，那么所有这些问题都将不复存在。

1094
01:13:35,559 --> 01:13:40,263
所以在我们对5G的愿景中，在5G的运作视角下，

1095
01:13:40,263 --> 01:13:42,991
我们得说我们必须来访并且

1096
01:13:42,991 --> 01:13:48,845
我们必须通过我们不运营的现有5G网络来进行操作。

1097
01:13:48,845 --> 01:13:52,166
我们不信任，但我们需要获取敏感的，

1098
01:13:52,166 --> 01:13:57,530
我们可能需要在那些网络上获取甚至是机密的信息。

1099
01:13:57,530 --> 01:14:00,780
在一个我不知道网络是什么的环境中，

1100
01:14:00,780 --> 01:14:02,180
我没有网络设备。

1101
01:14:02,180 --> 01:14:10,050
网络设备是由谁制造的，谁在操作它也不得而知。

1102
01:14:10,050 --> 01:14:14,080
我们能通过那种网络进行操作吗？

1103
01:14:14,080 --> 01:14:15,940
这就是SD的想法，还有……

1104
01:14:15,940 --> 01:14:20,020
它适合放在边缘部分，因为很多通信工作

1105
01:14:20,020 --> 01:14:23,820
在5G世界中，尤其是边缘部分有很多有趣的东西。

1106
01:14:23,820 --> 01:14:28,610
一旦我把它接入到一个安全的国防部网络，那就是另外一回事了。

1107
01:14:28,610 --> 01:14:32,030
但是我已经把所有这些东西都接入到5G网络上了。

1108
01:14:32,030 --> 01:14:35,760
在边缘需要进行通信的可能是车辆，

1109
01:14:35,760 --> 01:14:37,120
这个问题之前已经讨论过了。

1110
01:14:38,160 --> 01:14:40,110
今天早些时候有很多有趣的东西要讨论。

1111
01:14:40,110 --> 01:14:43,610
这些车辆将会使用5G网络。

1112
01:14:43,610 --> 01:14:46,080
那么这种通信是如何工作的呢？

1113
01:14:46,080 --> 01:14:49,610
在零信任环境中，如何安全地实现这一点呢？

1114
01:14:50,840 --> 01:14:55,754
所以我打算，我认为这个团队可能对此有一些答案。

1115
01:14:55,754 --> 01:15:00,552
所以当我们谈论零信任时，我想稍微转变一下对那些真正好的东西的看法，

1116
01:15:00,552 --> 01:15:02,893
感谢NIST举办了这一切。

1117
01:15:02,893 --> 01:15:07,470
NIST已经发布了一些关于零信任的优秀文档。

1118
01:15:07,470 --> 01:15:11,060
我们想对零信任采取稍微不同的方法，即

1119
01:15:11,060 --> 01:15:16,030
我们常常关注的是零信任，而我运营的网络却是...

1120
01:15:16,030 --> 01:15:20,110
我不一定想要在我的网络周围建立一堵墙。

1121
01:15:20,110 --> 01:15:23,780
在我们的情况下，我想要进一步推进零信任模型。

1122
01:15:23,780 --> 01:15:26,710
有些人甚至可能会说，这已经在NIST文件中有所涵盖。

1123
01:15:26,710 --> 01:15:31,590
在这种情况下，我甚至不操作网络。

1124
01:15:31,590 --> 01:15:33,340
我只是网络上的一个用户。

1125
01:15:35,160 --> 01:15:41,230
有这么多不同的路径，有这么多不同的调节旋钮可以用于5G。

1126
01:15:42,780 --> 01:15:48,160
And how do I do that, and somebody posted into, Dave ran posted in,

1127
01:15:48,160 --> 01:15:52,230
我们当然非常关心流量分析，对吧。

1128
01:15:52,230 --> 01:15:56,340
实际上，我认为这是我们面临的最大的有趣挑战之一。

1129
01:15:56,340 --> 01:16:00,620
实际上，我们讨论了很多的一个问题是，

1130
01:16:00,620 --> 01:16:05,620
当我谈论在不受信任的5G网络上安全地进行操作时。

1131
01:16:05,620 --> 01:16:07,612
我会假设数据是加密的。

1132
01:16:07,612 --> 01:16:10,330
我会假设有人可以窃取数据，但是，

1133
01:16:10,330 --> 01:16:12,360
他们无法破解加密。

1134
01:16:12,360 --> 01:16:17,496
所以我并不太担心，我发送一条机密的

1135
01:16:17,496 --> 01:16:23,060
我发送给贾斯汀的信息使用了合适的加密技术进行了加密。

1136
01:16:23,060 --> 01:16:28,203
我们两个人共有的，那么谁将能够访问到那个？

1137
01:16:28,203 --> 01:16:29,617
但他将无法解密它。

1138
01:16:29,617 --> 01:16:33,162
>> [笑] 我是坏人。

1139
01:16:33,162 --> 01:16:34,015
是的。

1140
01:16:34,015 --> 01:16:36,645
我们可以设立防御，我们可以尝试去理解它。

1141
01:16:39,335 --> 01:16:44,555
但我担心的是流量分析。

1142
01:16:44,555 --> 01:16:48,891
我们一直在用的比喻是披萨送到五角大楼，对吧？

1143
01:16:48,891 --> 01:16:54,180
那么，这个想法是坐在五角大楼对面的停车场里。

1144
01:16:54,180 --> 01:16:59,018
就在五角大楼对面的街道上，只是数着进出的送餐数量。

1145
01:16:59,018 --> 01:17:03,192
你或许可以从中推断出相当多关于作战节奏的信息，对吧。

1146
01:17:03,192 --> 01:17:06,878
周五晚上，出现了许多可能是Bob点的披萨。

1147
01:17:06,878 --> 01:17:08,900
爱丽丝的退休派对。

1148
01:17:08,900 --> 01:17:11,640
这可能意味着，人们在加班并且……

1149
01:17:11,640 --> 01:17:14,160
可能正在进行某种跳跃。

1150
01:17:14,160 --> 01:17:16,230
所以我们担心的是在这种情况下，

1151
01:17:16,230 --> 01:17:20,210
所以我们担心的是在这种情况下，我是否可以通过这个网络操作而不暴露太多信息，and maybe there's a bunch of ways I could do that, but.

1152
01:17:22,280 --> 01:17:26,690
也许有很多种方式可以做到这一点，但是。

1153
01:17:26,690 --> 01:17:30,805
但毫无疑问，流量分析的体量指标是我们感兴趣的。

1154
01:17:30,805 --> 01:17:36,810
我们想要了解这是如何实现的。

1155
01:17:36,810 --> 01:17:39,781
但比起保密性方面，我们更加关注的是

1156
01:17:39,781 --> 01:17:43,167
可用性方面确实是令我们感到兴奋的部分。

1157
01:17:43,167 --> 01:17:48,213
要在这么多不同的路径中找到解决方案，这确实是个问题，对吧。

1158
01:17:48,213 --> 01:17:52,583
我们可以进行动态频谱分配，对吧。

1159
01:17:52,583 --> 01:17:57,312
所以不像我们传统的无线通信，我们只能使用频道五或频道七或者

1160
01:17:57,312 --> 01:18:01,159
所以，我们可以在不同频道间跳转，5G赋予了我们这种在频道间跳转的能力，

1161
01:18:01,159 --> 01:18:03,680
它为我们提供了所有这些其他的可能性。

1162
01:18:03,680 --> 01:18:06,340
它为我们提供了中继的机会，但是

1163
01:18:06,340 --> 01:18:10,240
我会告诉你，用电路来做这事确实很难。

1164
01:18:10,240 --> 01:18:12,080
也许有一些其他的方法。

1165
01:18:12,080 --> 01:18:15,080
我不知道，也许有一些其他的网络类型。

1166
01:18:16,740 --> 01:18:18,080
我想，是的。

1167
01:18:18,080 --> 01:18:21,500
可能是关于名字或数据之类的，而不是其他的，但是如此

1168
01:18:21,500 --> 01:18:23,740
我认为那里可能有一些有趣的东西。

1169
01:18:23,740 --> 01:18:26,310
所以那只是一个宏观上的挑战。

1170
01:18:26,310 --> 01:18:32,160
我想要，我想要画的只是想要说，什么

1171
01:18:32,160 --> 01:18:37,520
关于5G，具体而言，是可用性和5G。

1172
01:18:37,520 --> 01:18:42,510
如果我能在5G中获得额外的保密性和完整性，那就是额外的好处。

1173
01:18:42,510 --> 01:18:46,670
但是，但是我认为有一些有趣的方式来看待这个问题。

1174
01:18:46,670 --> 01:18:50,250
所以你会看到最后一件事，然后我会把它传递给下一个小组。

1175
01:18:50,250 --> 01:18:53,370
所以你会看到这个程序产生三个结果。

1176
01:18:53,370 --> 01:18:55,600
这是一个全新的程序。

1177
01:18:57,200 --> 01:19:02,790
所以我们刚刚邀请了华盛顿大学的罗伊教授，

1178
01:19:02,790 --> 01:19:04,130
他是一位5G专家。

1179
01:19:04,130 --> 01:19:06,962
所以他在负责一个叫做“超越5G”的项目。

1180
01:19:06,962 --> 01:19:10,026
我们在5G之后该做什么？

1181
01:19:10,026 --> 01:19:12,060
因为5G不会是终点。

1182
01:19:12,060 --> 01:19:15,200
我正在执行操作过程部分，也就是说，嘿，

1183
01:19:15,200 --> 01:19:18,770
我该如何在现有的5G网络上进行操作？

1184
01:19:18,770 --> 01:19:22,500
目前有一个名为accelerate的团体正在那里活动，

1185
01:19:22,500 --> 01:19:27,700
它正在帮助将这种采用推广到政府系统中。

1186
01:19:27,700 --> 01:19:30,730
这三者我认为可能对NDN都有潜在的兴趣。

1187
01:19:30,730 --> 01:19:35,570
所以我只是想把这个观点提出来给大家。

1188
01:19:35,570 --> 01:19:37,390
当然可以回答任何问题。

1189
01:19:37,390 --> 01:19:38,909
那就这样吧。我想对我来说就到此为止了。

1190
01:19:38,909 --> 01:19:40,280
>> 好的。 >> 凯西，接下来我会传递给别人。

1191
01:19:41,470 --> 01:19:41,990
>> 好的，太好了。

1192
01:19:41,990 --> 01:19:42,750
谢谢你，丹。

1193
01:19:42,750 --> 01:19:46,110
我们可能会提出一些问题后再回复您。

1194
01:19:46,110 --> 01:19:50,344
接下来我想介绍Sokwoo Rhee，他是一位企业家并且是一位在物联网、智能城市和

1195
01:19:50,344 --> 01:19:54,651
Next, I would like to introduce Sokwoo Rhee, he is an entrepreneur and an executive with expertise in the Internet of Things, smart cities, and wireless networks for commercial, industrial, and military applications.

1196
01:19:54,651 --> 01:19:59,469
无线网络在商业、工业和军事应用中的应用。

1197
01:19:59,469 --> 01:20:02,229
他是最早发起和推动IoT行业自21世纪初期以来发展的先驱之一。

1198
01:20:02,229 --> 01:20:05,474
自21世纪初期以来，他促进了IoT行业的发展。

1199
01:20:05,474 --> 01:20:10,388
他目前是网络物理系统创新的副主任。

1200
01:20:10,388 --> 01:20:15,035
国家标准技术研究院正在主办这个。

1201
01:20:15,035 --> 01:20:17,685
他已经报道得够多了。

1202
01:20:17,685 --> 01:20:20,860
他负责物联网和智能城市的站点项目。

1203
01:20:20,860 --> 01:20:26,050
他管理着全球城市团队挑战赛，这是一个美国联邦政府的项目，旨在发展一个全球性的主要商业和技术利益相关者生态系统。

1204
01:20:26,050 --> 01:20:31,910
旨在发展一个全球性的主要商业和技术利益相关者生态系统的项目

1205
01:20:31,910 --> 01:20:37,340
创建可复制和可扩展的物联网智能城市项目。

1206
01:20:37,340 --> 01:20:41,012
在加入美国政府之前，他是联合创始人和

1207
01:20:41,012 --> 01:20:43,050
在加入美国政府之前，他是联合创始人和千禧年点网公司的首席技术官。One of the first to successfully commercialize low

1208
01:20:43,050 --> 01:20:46,252
power wireless sensor networks and IoT technologies from Academia.

1209
01:20:46,252 --> 01:20:50,680
学术界的无线传感器网络和物联网技术的动力。

1210
01:20:50,680 --> 01:20:56,083
他的工作和成就已经在多个领域得到了认可，包括

1211
01:20:56,083 --> 01:21:00,917
他被《麻省理工科技评论》评为35岁以下顶尖创新者，而且他还曾就读于麻省理工学院。

1212
01:21:00,917 --> 01:21:06,840
我现在想给他一个机会发言，谢谢。

1213
01:21:08,760 --> 01:21:10,220
>> 谢谢你，顺便说一句，Kathy，

1214
01:21:10,220 --> 01:21:13,900
我没想到你会把我的整个简介都读一遍，那真的不是我的本意。

1215
01:21:15,510 --> 01:21:20,010
而且，我现在的年龄远超过35岁了，那是很久以前的事了。

1216
01:21:20,010 --> 01:21:23,498
所以不要误会，我看起来并不像35岁。

1217
01:21:23,498 --> 01:21:28,424
所以我甚至不需要说出来，感谢你的介绍。

1218
01:21:28,424 --> 01:21:34,732
所以我从事智慧城市方面的工作，我通常负责大规模物联网项目。

1219
01:21:34,732 --> 01:21:39,459
但目前智慧城市是我的重点领域。

1220
01:21:39,459 --> 01:21:46,941
现在，我想就稀疏性这个概念提供一些观点。

1221
01:21:46,941 --> 01:21:52,858
包括边缘计算在内的新型网络技术，

1222
01:21:52,858 --> 01:21:56,375
可以协同工作，也可能不行。

1223
01:21:56,375 --> 01:22:00,304
如今，边缘计算领域有很多热议。

1224
01:22:00,304 --> 01:22:02,775
然后甚至在智慧城市领域，

1225
01:22:02,775 --> 01:22:08,100
很多人都在讨论如何使用边缘计算概念。

1226
01:22:08,100 --> 01:22:11,700
在智慧城市的背景下，在许多情况下，

1227
01:22:11,700 --> 01:22:17,570
我看到的是像我这样的技术为公司服务。

1228
01:22:17,570 --> 01:22:21,219
基本上，是将这一新概念带入

1229
01:22:21,219 --> 01:22:26,688
努力推动到城市和城市官员们，在很多情况下，

1230
01:22:26,688 --> 01:22:32,789
市政当局在很多情况下都感到困惑，你总是会帮助我，对吗？

1231
01:22:32,789 --> 01:22:38,051
所以在这个实际用户之间存在着巨大的差距，那些是智慧城市的，或者说，~!@#$%^&*()

1232
01:22:38,051 --> 01:22:43,345
所以用一个更合适的词来说，那些是智慧城市技术的用户。

1233
01:22:43,345 --> 01:22:47,610
而供应商们，这个问题在这里是新的，

1234
01:22:47,610 --> 01:22:50,260
它已经存在很长时间了。

1235
01:22:50,260 --> 01:22:55,335
但是当涉及到5G或者这样的新兴技术时，

1236
01:22:55,335 --> 01:23:00,320
边缘计算会将这个问题放大得多。

1237
01:23:00,320 --> 01:23:05,290
因为从概念上讲，边缘计算通常是这样的，

1238
01:23:05,290 --> 01:23:07,729
公司解释说，这是因为~!@#$%^&*()

1239
01:23:07,729 --> 01:23:12,537
使用那种计算可以减少带宽需求。

1240
01:23:12,537 --> 01:23:16,722
而且公司们把它当成一件大事，然后说，所以

1241
01:23:16,722 --> 01:23:21,651
你必须在一个城市安装边缘计算能力，然后

1242
01:23:21,651 --> 01:23:27,055
然后市政官员会说，好吧，我为什么要担心这个呢？

1243
01:23:27,055 --> 01:23:30,833
我唯一应该担心的原因是因为我得为此付出更多的钱。

1244
01:23:30,833 --> 01:23:33,435
蜂窝网络，蜂窝带宽。

1245
01:23:33,435 --> 01:23:39,820
这真的很关键，那么问题归结为，好的，如果我安装了这些设备，

1246
01:23:39,820 --> 01:23:45,980
您是在说我不需要使用蜂窝网络就能连接到边缘计算吗？

1247
01:23:45,980 --> 01:23:48,668
所以最后一公里的问题依然没有得到解决，

1248
01:23:48,668 --> 01:23:51,571
所以最后一公里的问题依然没有得到解决，因为你不能使用WiFi，因为信号太弱了，在整个城市环境中可能还好。

1249
01:23:51,571 --> 01:23:55,550
所以在整个城市环境中可能还好。

1250
01:23:55,550 --> 01:23:59,904
但说到广阔的大都市环境，

1251
01:23:59,904 --> 01:24:04,549
你仍然无法真正避免依赖蜂窝网络，

1252
01:24:04,549 --> 01:24:07,756
即使你的边缘设备是内置的。

1253
01:24:07,756 --> 01:24:12,648
所以我想表达的观点是，在智慧城市领域，

1254
01:24:12,648 --> 01:24:16,760
边缘计算是5G的热门词汇。

1255
01:24:16,760 --> 01:24:20,799
我认为仍然有时间，而且在采纳方面还存在差距。

1256
01:24:20,799 --> 01:24:23,420
尤其是在5G计算方面。

1257
01:24:23,420 --> 01:24:28,483
我认为这会发生得更快，因为无论如何，苹果公司……

1258
01:24:28,483 --> 01:24:33,309
坦白说，运营商是不会允许我们不使用5G的。

1259
01:24:33,309 --> 01:24:37,530
他们只是想继续生产支持5G的设备，用它来替代

1260
01:24:37,530 --> 01:24:41,560
他们只是想继续生产支持5G的设备，用它来替代4G设备，而我们的选择并不多。

1261
01:24:41,560 --> 01:24:45,371
但是当你进入市政网络或市政当局，

1262
01:24:45,371 --> 01:24:49,607
可能是更大的客户，这有点不同。

1263
01:24:49,607 --> 01:24:54,587
因为他们可能仍然，尽管，网络仍在2G网络中运作。

1264
01:24:54,587 --> 01:24:57,938
很多人，许多人，不是很多人知道为什么，但是

1265
01:24:57,938 --> 01:25:01,177
很多人仍在使用2G甚至3G网络。

1266
01:25:01,177 --> 01:25:05,101
所以对于边缘计算和NDN（命名数据网络）也是如此，

1267
01:25:05,101 --> 01:25:10,552
这些有点新的概念想要进入主流。

1268
01:25:10,552 --> 01:25:14,476
我认为我们需要有一个非常明确而有说服力的陈述，

1269
01:25:14,476 --> 01:25:17,692
非常明确而有说服力的信息。

1270
01:25:17,692 --> 01:25:22,698
这些新技术将帮助市政机构运行并~!@#$%^&*()

1271
01:25:22,698 --> 01:25:26,364
这些新技术将帮助市政机构提供服务并完成它们的使命。

1272
01:25:26,364 --> 01:25:28,626
我就先说到这里吧。

1273
01:25:30,716 --> 01:25:35,590
好的，谢谢你，也感谢你介绍了这个可能性。

1274
01:25:35,590 --> 01:25:40,378
我们需要考虑创建一些具有吸引力的应用程序。

1275
01:25:40,378 --> 01:25:45,270
所以我们可能不应该强推给那些可能不想要它们的人。

1276
01:25:45,270 --> 01:25:45,969
所以我们可能在错误的地方寻找，所以-

1277
01:25:45,969 --> 01:25:48,890
哇，你总结得真好，我花了10分钟讲了一大堆，你却用[笑声] [听不清]，太棒了。

1278
01:25:48,890 --> 01:25:54,570
我花了很多时间讲了一大堆，你却用[笑声] [听不清]来总结，太棒了。

1279
01:25:54,570 --> 01:25:57,218
不，不，你做得很好，谢谢。

1280
01:25:57,218 --> 01:26:01,746
接下来，我想介绍吴耿博士，他是英特尔的资深院士以及

1281
01:26:01,746 --> 01:26:05,990
他是无线技术和标准的首席技术官。

1282
01:26:05,990 --> 01:26:12,360
他领导英特尔的5G和6G技术开发以及生态系统合作。

1283
01:26:12,360 --> 01:26:15,709
好吧，我猜那就是5G之后的事情了。

1284
01:26:15,709 --> 01:26:19,578
他担任英特尔代表团团长，参与3GPP。

1285
01:26:19,578 --> 01:26:24,654
他还是IOWN全球论坛的董事会成员。

1286
01:26:24,654 --> 01:26:31,820
多火联盟和汽车边缘计算联盟。

1287
01:26:31,820 --> 01:26:35,276
So, boy, you've got your fingers and ~!@#$%^&*()

1288
01:26:35,276 --> 01:26:39,475
一切都在边缘，继续，轮到你了。

1289
01:26:39,475 --> 01:26:45,100
谢谢你，能来到这里对我来说是一个巨大的荣幸。

1290
01:26:45,100 --> 01:26:49,172
嗯，如果没有病毒情况的话，

1291
01:26:49,172 --> 01:26:56,146
如果没有病毒情况的话，我们会在会议之后和其他小组成员一起喝一杯。Excited to be here, so let's me just

1292
01:26:56,146 --> 01:27:00,818
兴奋地来到这里，所以让我简单地

1293
01:27:00,818 --> 01:27:05,356
兴奋地来到这里，所以让我简单地说几句关于我为什么会在这里。

1294
01:27:05,356 --> 01:27:12,273
所以这个特别会议讨论的主题是，

1295
01:27:12,273 --> 01:27:16,517
它实际上非常有趣。

1296
01:27:16,517 --> 01:27:20,704
物联网和边缘计算，

1297
01:27:20,704 --> 01:27:27,915
它们都是5G行业的核心所在。

1298
01:27:27,915 --> 01:27:34,313
并且在接下来的十年内，还有下一代平台升级。

1299
01:27:34,313 --> 01:27:38,982
我们当然正在致力于下一代技术的研发。

1300
01:27:38,982 --> 01:27:44,949
所以有一些基础技术是假设的驱动因素，

1301
01:27:44,949 --> 01:27:49,767
例如，对网络性能的需求，

1302
01:27:49,767 --> 01:27:55,160
以及机器智能的本地化和

1303
01:27:55,160 --> 01:28:00,553
机器学习确实在推动网络和~!@#$%^&*()

1304
01:28:00,553 --> 01:28:04,820
机器学习确实在推动网络边缘的计算功能。

1305
01:28:06,480 --> 01:28:11,160
已经这样说了，还有一个假设，

1306
01:28:11,160 --> 01:28:14,940
这两个重要的事物之间有某种共同点，

1307
01:28:14,940 --> 01:28:20,770
科技发展最重要的方面之一可能是

1308
01:28:20,770 --> 01:28:25,280
这和下一代最重要的是，即

1309
01:28:25,280 --> 01:28:30,230
我们确实看到了解决方案，

1310
01:28:30,230 --> 01:28:35,300
在这两种情况下，我们都对设计进行了碎片化处理，

1311
01:28:35,300 --> 01:28:41,935
在这两种情况下，我们都对设计进行了碎片化处理，解决方案本质上是不同的优化。并且我们经常看到的问题是……

1312
01:28:41,935 --> 01:28:47,285
在这两种情况下，我们都对设计进行了碎片化处理，解决方案本质上是不同的优化。并且我们经常看到的问题是……，是的，这些解决方案难以扩展并且

1313
01:28:47,285 --> 01:28:51,305
是的，这些解决方案难以扩展并且

1314
01:28:51,305 --> 01:28:57,750
一些与会的小组成员，这里的同事们已经提到过了。

1315
01:28:57,750 --> 01:29:04,590
那么基本上，我们如何真正地将技术横向扩展，

1316
01:29:04,590 --> 01:29:09,277
更重要的是行业市场？

1317
01:29:09,277 --> 01:29:14,750
这可能是我们需要解决的关键问题之一。

1318
01:29:14,750 --> 01:29:21,030
如果你从纯粹的技术角度更深入地观察，

1319
01:29:21,030 --> 01:29:27,580
我认为大多数问题实际上是因为我们

1320
01:29:27,580 --> 01:29:34,250
处理一个不断发展的计算和

1321
01:29:34,250 --> 01:29:39,550
处理一个不断发展的计算和网络数据模型。

1322
01:29:39,550 --> 01:29:44,510
所以这实际上是一个特定的模型，它驱动了我们设计网络的方式，

1323
01:29:44,510 --> 01:29:46,270
我们搭建了我们的平台。

1324
01:29:46,270 --> 01:29:49,280
我们将应用程序作为实际进化的一部分来进行开发。

1325
01:29:50,760 --> 01:29:56,070
为了更具体地说明，例如，我们确实期待

1326
01:29:56,070 --> 01:30:01,940
为了更具体地说明，例如，我们确实期待下一代系统作为平台至少要比我们今天拥有的快一个数量级。

1327
01:30:01,940 --> 01:30:06,290
比我们今天拥有的快一个数量级。

1328
01:30:06,290 --> 01:30:15,300
我们正在看到网络，

1329
01:30:15,300 --> 01:30:21,370
例如，交换网络布局，如今甚至越来越可编程，

1330
01:30:21,370 --> 01:30:25,330
我们可以轻松完成单一部分。

1331
01:30:25,330 --> 01:30:31,970
这个太比特是用于每秒多太比特的全可编程交换。

1332
01:30:31,970 --> 01:30:33,450
所以那不是问题。

1333
01:30:33,450 --> 01:30:40,160
所以就是这样，那里有巨大的技术机遇。

1334
01:30:40,160 --> 01:30:42,830
我们也看到了挑战。

1335
01:30:42,830 --> 01:30:47,729
我们需要更深入地了解

1336
01:30:47,729 --> 01:30:51,620
我们需要更深入地了解计算机通信和数据模型是什么意思以及

1337
01:30:51,620 --> 01:30:55,940
数据模型是什么意思以及

1338
01:30:55,940 --> 01:31:03,017
NDN在这个新世界中扮演了一个至关重要的启用角色。

1339
01:31:03,017 --> 01:31:07,773
显然，网络不再仅仅是一个通讯管道，它连接了两端。

1340
01:31:07,773 --> 01:31:09,606
连接了两端。

1341
01:31:09,606 --> 01:31:15,666
你们的网络、计算和数据处理能力是如此巨大。

1342
01:31:15,666 --> 01:31:20,433
所以那些事实上很酷的是，NDN 是

1343
01:31:20,433 --> 01:31:25,714
实际上从一开始就非常精心设计来服务。

1344
01:31:25,714 --> 01:31:29,820
实际上假设网络不仅仅是在暗示

1345
01:31:29,820 --> 01:31:34,450
一系列通信管道的集合，这很重要。

1346
01:31:34,450 --> 01:31:40,009
我认为丹提到了零信任是因为NDN的设计方式。

1347
01:31:40,009 --> 01:31:46,039
我认为信任是因为NDN的设计方式。

1348
01:31:46,039 --> 01:31:49,542
这里有一些独特的能力，

1349
01:31:49,542 --> 01:31:55,379
这些安全能力让我们能够做一些不同的事情，

1350
01:31:55,379 --> 01:31:59,660
和那些是我们期待的领域

1351
01:31:59,660 --> 01:32:04,038
与研究界合作，解决并且

1352
01:32:04,038 --> 01:32:09,000
这就是我们为什么非常支持并且热衷于这项技术的原因。

1353
01:32:09,000 --> 01:32:12,820
对这项技术充满热情。

1354
01:32:12,820 --> 01:32:14,000
回到你这里，Nicole。

1355
01:32:17,650 --> 01:32:23,900
好的，我想我应该在这里有一个问题，这非常

1356
01:32:23,900 --> 01:32:28,790
专门针对贾斯汀，我们就这样做，然后我们看看是否还有其他问题会出现。

1357
01:32:28,790 --> 01:32:32,570
我们看看我们之间能谈论些什么。

1358
01:32:32,570 --> 01:32:38,004
如果我们想知道NDN加区块链解决方案的进展有多远，以及

1359
01:32:38,004 --> 01:32:43,990
哪些方面的开发进展最快，例如已部署的原型等？

1360
01:32:45,670 --> 01:32:50,400
是的，所以我们完成了最小可行产品并且

1361
01:32:50,400 --> 01:32:54,550
已经在去年早些时候完成了一种概念验证。

1362
01:32:54,550 --> 01:32:59,550
因此，我们一直在继续开发该产品，以便原始的

1363
01:32:59,550 --> 01:33:05,110
创世区块在一年多前被创建，现在几乎一年半了。

1364
01:33:06,210 --> 01:33:10,777
所以现在我们处于一个阶段，即我们实际上正在测试环境中部署该系统。

1365
01:33:10,777 --> 01:33:14,539
就像我说的，所以我们将会把那个应用程序的一部分

1366
01:33:14,539 --> 01:33:17,453
部署在我们的移动边缘计算平台上。

1367
01:33:17,453 --> 01:33:21,718
然后我们还有一个独立的应用程序，它主要是

1368
01:33:21,718 --> 01:33:25,330
仅将用于本地化支付处理。

1369
01:33:25,330 --> 01:33:28,250
因此，我们正在做这件事。

1370
01:33:28,250 --> 01:33:32,607
所以你实际上可以把它安装在像树莓派这样的设备上

1371
01:33:32,607 --> 01:33:33,790
无论如何，对吧？

1372
01:33:33,790 --> 01:33:37,274
然后，但是这个想法，对吧？是你已经将你的网络服务器，

1373
01:33:37,274 --> 01:33:39,810
你的API接口，一切都已本地化，对吧？

1374
01:33:39,810 --> 01:33:44,319
最终我们想要达到的目标是我们想要拥有整个

1375
01:33:44,319 --> 01:33:47,336
前端应用是基于NDN构建的，对吗？

1376
01:33:47,336 --> 01:33:48,357
基于NDN之上构建的。

1377
01:33:48,357 --> 01:33:50,960
所以现在我们只是将其作为一种中间件来使用。

1378
01:33:50,960 --> 01:33:53,704
所以我们只是通过卫星网络传输它，

1379
01:33:53,704 --> 01:33:56,197
或者我们正在使用的任何其他网络，对吧？

1380
01:33:56,197 --> 01:34:01,173
但我们正在尝试证明我们可以在这里通过卫星链路使用NDN。

1381
01:34:01,173 --> 01:34:05,410
在接下来的几周内，我们将会应用我们的区块链应用程序。

1382
01:34:05,410 --> 01:34:10,105
接下来我们要做的，我认为是继续前进。

1383
01:34:10,105 --> 01:34:14,271
回到丹提到的一些事情上。

1384
01:34:14,271 --> 01:34:17,517
我们正在研究移动边缘计算中的那个区块链应用。

1385
01:34:17,517 --> 01:34:19,920
主要是用于审计的平台，对吗？

1386
01:34:19,920 --> 01:34:22,005
保证是一个重要的方面。

1387
01:34:22,005 --> 01:34:24,440
引导新用户是另一个非常重要的方面。

1388
01:34:24,440 --> 01:34:28,060
我们必须能够将那个区块链应用程序进行调整，以便我们能够将其应用到那些类型的场景中，让它足够通用。

1389
01:34:28,060 --> 01:34:32,618
我们必须让它足够通用，以至于我们能够将其应用到那些类型的场景中。

1390
01:34:32,618 --> 01:34:37,320
我们现在可以说，嘿，看，我们可以使用零知识证明来验证

1391
01:34:37,320 --> 01:34:41,980
身份，同时不暴露他们的全部个人信息。

1392
01:34:41,980 --> 01:34:47,160
隐私，同时也验证确保网络流量和

1393
01:34:47,160 --> 01:34:50,750
通过网络的数据不是易失性的。

1394
01:34:50,750 --> 01:34:52,790
它不会引起问题。

1395
01:34:52,790 --> 01:34:53,990
它不会导致网络瘫痪。

1396
01:34:53,990 --> 01:34:59,040
它也没有包含一些恶意的负载和其他一些东西。

1397
01:34:59,040 --> 01:35:01,740
这实际上更多地体现了军事方面的情况，

1398
01:35:01,740 --> 01:35:05,300
政府应用程序我们正在看到的请求是为了

1399
01:35:05,300 --> 01:35:10,160
可验证的跟踪路由，无论您是否进行审计保证

1400
01:35:10,160 --> 01:35:15,040
部署应用程序或Kubernetes集群等，无论具体情况如何。

1401
01:35:15,040 --> 01:35:16,600
但是所有那些射频

1402
01:35:17,640 --> 01:35:21,410
类似于频谱分析也将不得不有审计追踪。

1403
01:35:21,410 --> 01:35:23,260
美国联邦通信委员会正在推动这一举措。

1404
01:35:23,260 --> 01:35:27,710
因此，许多不同的规定不仅仅来自政府，还来自私营行业。

1405
01:35:27,710 --> 01:35:30,430
同时也来自私营行业。

1406
01:35:30,430 --> 01:35:34,060
还有3GPP和其他各种管理机构。

1407
01:35:34,060 --> 01:35:35,390
所以我们正在研究这个问题。

1408
01:35:35,390 --> 01:35:39,300
我们在说，嘿，你知道的，我们接下来真的必须要做的是

1409
01:35:39,300 --> 01:35:43,100
我们接下来真的必须要做的是将区块链应用部署在移动边缘计算平台上。And now we can really open it up to all those IoT based applications to

1410
01:35:43,100 --> 01:35:46,920
start off with.

1411
01:35:46,920 --> 01:35:48,260
从这里开始。

1412
01:35:48,260 --> 01:35:52,298
现在，因为外面有一个庞大的开发者群体，我们正在从那里吸引人才进来。

1413
01:35:52,298 --> 01:35:54,419
英伟达、英特尔以及其他一些公司，对吗？

1414
01:35:54,419 --> 01:35:57,240
所以我们将能够使这些应用程序能够在边缘运行。

1415
01:35:57,240 --> 01:36:01,190
然后这将使我们有能力与行业和监管机构合作。

1416
01:36:01,190 --> 01:36:07,160
机构和所有相关人员，确保我们能够前往国防部并且

1417
01:36:07,160 --> 01:36:11,080
嘿，如果你想在网络上部署这个，这里有一个选项可以给你。

1418
01:36:12,510 --> 01:36:17,274
为了验证你的路由，你可以使用所有你需要的不同分析工具。

1419
01:36:17,274 --> 01:36:20,373
零知识证明类型的应用程序也是如此。

1420
01:36:23,820 --> 01:36:24,980
谢谢，贾斯汀。

1421
01:36:24,980 --> 01:36:27,870
有一个问题我认为你已经回答了，丹，

1422
01:36:27,870 --> 01:36:31,860
那是戴夫提出的关于交通分析的问题。

1423
01:36:31,860 --> 01:36:34,320
但这引出了一些问题。

1424
01:36:34,320 --> 01:36:39,245
这是在Van最初谈论后来成为NDN的东西时的情况。

1425
01:36:40,510 --> 01:36:45,930
我曾为这个名为TMOS的空军项目提供咨询服务，

1426
01:36:45,930 --> 01:36:50,360
它是一个基于卫星的网络，为所有这些军事网络提供服务。

1427
01:36:50,360 --> 01:36:55,158
他对这个想法非常感兴趣，因为

1428
01:36:55,158 --> 01:37:00,370
他说的那个有点违反直觉的想法，你可以发送流量

1429
01:37:00,370 --> 01:37:04,420
向各个不同的方向，而不仅仅是你想要它去的地方。

1430
01:37:04,420 --> 01:37:07,480
所以我猜这就像你在华盛顿特区到处送披萨一样，或者

1431
01:37:07,480 --> 01:37:13,150
所以我猜这就像你在华盛顿特区到处送披萨一样，或者每周五送披萨。

1432
01:37:13,150 --> 01:37:16,690
而且我是说，这在某种程度上，我们考虑的是效率。

1433
01:37:16,690 --> 01:37:20,320
但我的意思是，你怎么看待这个观点，它在某种程度上是~!@#$%^&*()

1434
01:37:20,320 --> 01:37:24,340
效率的反面，但这在某种程度上掩盖了真正发生的事情。

1435
01:37:25,360 --> 01:37:28,990
是的，我认为那是一个很好的例子。

1436
01:37:28,990 --> 01:37:34,150
我认为那里有很多有趣的潜力，其中，

1437
01:37:34,150 --> 01:37:39,090
回到我一直认为的NDN口号，那就是它非常

1438
01:37:39,090 --> 01:37:44,315
难以隐藏那种体积度量，当它是点对点电路时，对吧。

1439
01:37:44,315 --> 01:37:48,060
因为这很难说，但正如你所指出的，我们可以

1440
01:37:49,700 --> 01:37:54,180
有了5G，可能会有一些应用场景，我拥有足够的带宽，并且

1441
01:37:54,180 --> 01:37:56,580
实际上，我并不介意如果我消耗了一些额外的带宽。

1442
01:37:57,590 --> 01:38:01,540
所以我不介意如果我随机发送数据。

1443
01:38:01,540 --> 01:38:06,290
我可能会随便打电话给阿灵顿的Domino's比萨店，

1444
01:38:06,290 --> 01:38:10,677
弗吉尼亚州可能会向20个不同的方向发送比萨，谁知道呢。

1445
01:38:13,000 --> 01:38:16,022
所以这是一个真正的可能性。

1446
01:38:16,022 --> 01:38:19,480
这样一来

1447
01:38:19,480 --> 01:38:25,100
我们正试图摆脱那种能够轻易识别出来源的想法。

1448
01:38:25,100 --> 01:38:29,890
另一个例子是，是的，我有这么多设备，

1449
01:38:29,890 --> 01:38:35,230
它们可以作为中继器，它们可以作为。

1450
01:38:35,230 --> 01:38:39,830
我可以通过这次会议上的任何人与Kathy交谈，

1451
01:38:39,830 --> 01:38:42,430
也许通过会议上的你们中的20个人，然后。

1452
01:38:44,620 --> 01:38:49,230
所以，如果你把某些东西放到一边，看看你能隐藏什么，这会很有趣。

1453
01:38:49,230 --> 01:38:55,110
所以我不是带宽有限，我有充足的带宽。

1454
01:38:55,110 --> 01:38:58,711
我不是路径有限，我有充足的路径。

1455
01:38:58,711 --> 01:39:02,496
这是否给了我一些新的优势？

1456
01:39:02,496 --> 01:39:05,556
或许确实如此。

1457
01:39:05,556 --> 01:39:06,662
或许确实如此。

1458
01:39:07,760 --> 01:39:08,845
>> 静音完成。

1459
01:39:08,845 --> 01:39:13,110
Sokwoo, 看起来你好像有话要说。

1460
01:39:13,110 --> 01:39:13,830
是的，谢谢。

1461
01:39:13,830 --> 01:39:16,450
我想说这是一个迷人的想法。

1462
01:39:16,450 --> 01:39:20,080
顺便说一句，丹，欢迎回到联邦政府，顺便说一句，

1463
01:39:20,080 --> 01:39:22,498
欢迎回来。

1464
01:39:22,498 --> 01:39:27,260
因此从国防部的角度来看，可能并非如此，

1465
01:39:27,260 --> 01:39:32,490
你可能不需要处于拥有大量带宽的情况。

1466
01:39:32,490 --> 01:39:34,050
你可能仍然只有有限的带宽，但

1467
01:39:34,050 --> 01:39:38,112
你愿意为此付费，因为在某些情况下它可能更安全。

1468
01:39:38,112 --> 01:39:43,570
军事并不总是便宜的，

1469
01:39:43,570 --> 01:39:49,156
你需要最好的，也需要最安全、最强大的。

1470
01:39:49,156 --> 01:39:54,660
所以尤其是对于国防部标题应用来说，这是完全合理的。

1471
01:39:54,660 --> 01:39:59,920
嗯，你不必像部分世界那样真的非常考虑效率。

1472
01:39:59,920 --> 01:40:06,270
你可能不想将效率置于其他重要因素之上。

1473
01:40:06,270 --> 01:40:11,185
这非常有道理，而且我只是想说，我的意思是这真的很有趣。

1474
01:40:11,185 --> 01:40:17,720
这总是让人发笑，因为我们一直在思考这个问题。

1475
01:40:17,720 --> 01:40:23,510
我们必须讨论设备或制造商的安全性。

1476
01:40:23,510 --> 01:40:29,530
这就是为什么我们会有所有这些关于，你知道的，那个话题的讨论。

1477
01:40:29,530 --> 01:40:31,880
但这有点像打地鼠游戏。

1478
01:40:31,880 --> 01:40:36,130
我是说，关于验证一个设备是否安全，但这有点像打地鼠游戏。还可能有其他你可能无法验证为安全的制造商。

1479
01:40:36,130 --> 01:40:40,150
可能还有其他你可能无法验证为安全的制造商。

1480
01:40:40,150 --> 01:40:41,340
所以你不能~!@#$%^&*()

1481
01:40:41,340 --> 01:40:45,780
这有点像是一个你最终将不得不面对的无尽困境。

1482
01:40:45,780 --> 01:40:47,835
所以可能更好的方法是，

1483
01:40:47,835 --> 01:40:51,300
丹，正如你所提到的，我们假设每个人都不安全。

1484
01:40:51,300 --> 01:40:54,060
让我们假设所有设备都是不安全的。

1485
01:40:54,060 --> 01:40:59,500
让我们找到一种方法在这个基础上继续完成我们的工作。

1486
01:40:59,500 --> 01:41:02,290
较不安全的、假定为不安全的网络。

1487
01:41:02,290 --> 01:41:04,250
这是一个引人入胜的方法。

1488
01:41:05,270 --> 01:41:08,980
这可能会有解决办法，如果你能找到一些真正非常非常真实的东西，

1489
01:41:08,980 --> 01:41:13,610
这可能会解决我们现在面临的很多困境。

1490
01:41:13,610 --> 01:41:15,390
>> 谢谢。

1491
01:41:15,390 --> 01:41:19,622
这份荣誉很大一部分要归功于我的老板，Joe Evans博士，他……

1492
01:41:19,622 --> 01:41:23,420
Joe Evans博士为该项目构建了宏大的框架。

1493
01:41:23,420 --> 01:41:30,790
但我确实认为这是一个，我确实认为有一种有趣的方式来

1494
01:41:30,790 --> 01:41:33,980
我确实认为有一种有趣的方式来思考这个问题，打破旧有的模式。

1495
01:41:33,980 --> 01:41:39,490
正因为此，我特别有兴趣在这个小组里交流，

1496
01:41:39,490 --> 01:41:42,870
正因为我这么认为，

1497
01:41:42,870 --> 01:41:47,870
也有助于拥有一种沿着不同思路构建的架构。

1498
01:41:47,870 --> 01:41:53,040
要说我怎样才能隐藏这件事，那又是另外一回事了。

1499
01:41:53,040 --> 01:41:58,160
源头A与目的地B的交流事实，在我已经在很大程度上摒弃了源与目的地这一概念之后，我对内容的改变更多了。

1500
01:41:58,160 --> 01:42:03,470
在摒弃了源与目的地这一概念之后，我对内容的改变更多了。

1501
01:42:03,470 --> 01:42:09,260
所以是的，我认为这里面有一些真正有趣的潜力。

1502
01:42:09,260 --> 01:42:13,620
所以希望，希望这其中能产生一些有趣的东西。

1503
01:42:13,620 --> 01:42:15,980
我们希望能够获得一些兴趣。

1504
01:42:15,980 --> 01:42:19,785
但即使不是为了国防部的设置，Sokwoo 说得完全正确，

1505
01:42:19,785 --> 01:42:26,170
即使不是在国防部的环境中，他们也能支付得起，安全在那里是值得付出代价的。

1506
01:42:26,170 --> 01:42:29,120
所以我们可以支付那些资源的费用。

1507
01:42:29,120 --> 01:42:31,050
但即使不是在点播（VOD）的环境中，对吧，

1508
01:42:31,050 --> 01:42:34,820
这个关于5G网络增加敏捷性的想法。

1509
01:42:34,820 --> 01:42:37,220
我们能利用这一点吗？

1510
01:42:37,220 --> 01:42:40,624
而且再次强调，由于这个讨论小组专注于边缘计算，

1511
01:42:40,624 --> 01:42:46,028
很多在那些智能城市中的通信，在车辆中，在区块链上的通信，

1512
01:42:46,028 --> 01:42:51,300
认证实际上会在边缘进行，真正大规模地发生。

1513
01:42:53,330 --> 01:42:55,700
那是怎么运作的？

1514
01:42:55,700 --> 01:43:00,290
如果我把它放在一个集中式模型中，效果并不好，因为所有的东西都会去那里。

1515
01:43:00,290 --> 01:43:05,020
回到中央服务器那边，我们把所有东西都发回去，然后执行它。

1516
01:43:05,020 --> 01:43:07,898
它在分布式方式下工作得很好，

1517
01:43:07,898 --> 01:43:12,793
它非常适合完成很多NDN社区的工作。

1518
01:43:15,460 --> 01:43:19,063
您中有人可能有任何特别的想法吗？

1519
01:43:19,063 --> 01:43:24,050
您会对NDN研究社区说的看法是什么？

1520
01:43:24,050 --> 01:43:29,521
您觉得特别会是什么？

1521
01:43:29,521 --> 01:43:35,002
那些似乎被忽视的领域值得好好研究吗？

1522
01:43:35,002 --> 01:43:38,144
回到那个推力与拉力的模型，

1523
01:43:38,144 --> 01:43:43,394
如果你看到有人在研究那个，会是什么东西吸引你？

1524
01:43:43,394 --> 01:43:45,470
它会让你不禁惊叹。

1525
01:43:46,970 --> 01:43:47,770
这是一件很棒的事情。

1526
01:43:49,960 --> 01:43:51,806
>> 我有一些了。

1527
01:43:51,806 --> 01:43:52,880
>> 是的。>> 等等，我们看看。

1528
01:43:52,880 --> 01:43:56,970
我们先从庚午开始，他还没有为我们发言。

1529
01:43:56,970 --> 01:43:58,300
>> 好的，谢谢。

1530
01:43:58,300 --> 01:44:01,190
所以有好几件事情。

1531
01:44:01,190 --> 01:44:10,750
首先，我想要回应前面的评论，并且表示赞同。

1532
01:44:10,750 --> 01:44:14,270
实际上，即便是对于商业系统来说，

1533
01:44:15,310 --> 01:44:21,150
实际上，即便是对于商业系统来说，网络的性质也使得安全性变得越来越关键，

1534
01:44:21,150 --> 01:44:26,280
我们正在见证私人网络、企业网络等的迅速增长，这一事实也表明了

1535
01:44:26,280 --> 01:44:32,180
私人网络、企业网络的增长以及

1536
01:44:32,180 --> 01:44:36,340
任务至关重要，即使是从商业角度来看。

1537
01:44:36,340 --> 01:44:39,230
那么，实际上如何确保会话安全连接的洞察力？

1538
01:44:40,640 --> 01:44:45,530
如何确保会话安全连接的洞察力？

1539
01:44:45,530 --> 01:44:50,720
如何直接保护数据安全以及如何保护隐私？

1540
01:44:50,720 --> 01:44:55,670
所以那些是真正重要的事情之一，

1541
01:44:55,670 --> 01:45:00,008
我们需要一个研究社区，这是关于父与子的。

1542
01:45:00,008 --> 01:45:05,860
我们有两个部分，有一个是关于我提出的问题的日光方面。

1543
01:45:05,860 --> 01:45:10,160
研究社区你还有什么其他建议吗？

1544
01:45:10,160 --> 01:45:14,430
我认为可以从两个角度来看待这个问题。

1545
01:45:14,430 --> 01:45:19,520
这个问题可以从一个角度来理解。

1546
01:45:19,520 --> 01:45:24,180
我认为丹实际上提到了那些机会，

1547
01:45:26,160 --> 01:45:31,730
我们将要大幅升级的下一代技术

1548
01:45:31,730 --> 01:45:36,721
设备到网络再到架构的网络性能。

1549
01:45:36,721 --> 01:45:43,310
所以与其试图节省每一点然后再。

1550
01:45:43,310 --> 01:45:47,610
印度的技术潜力会是什么样的，

1551
01:45:47,610 --> 01:45:50,900
因为做事的方式截然不同。

1552
01:45:50,900 --> 01:45:56,250
假设你在跑步，饮食会给我们带来什么？

1553
01:45:56,250 --> 01:45:58,440
下一代网络。

1554
01:45:58,440 --> 01:46:00,690
所以那是最后一个方面。

1555
01:46:00,690 --> 01:46:02,630
要更具体一点。

1556
01:46:02,630 --> 01:46:10,390
另一个方面是我们非常感兴趣的事情。

1557
01:46:10,390 --> 01:46:18,790
是将印第安语视为一种工具，一种机会。

1558
01:46:18,790 --> 01:46:24,140
为了让网络达到一种状态并且专业化。

1559
01:46:24,140 --> 01:46:30,890
这是两个不同的事物，但人们经常一起称呼它们为伦敦。

1560
01:46:30,890 --> 01:46:36,530
"Stay less"意味着由于你们的服务更加本地化，

1561
01:46:36,530 --> 01:46:43,130
你们正在边缘领域进行探索等等，我们还在使用非常高的频段，

1562
01:46:43,130 --> 01:46:46,870
他们有毫米波，他们还将推出太赫兹波。

1563
01:46:46,870 --> 01:46:54,075
那么连接性真的并不总是存在。

1564
01:46:54,075 --> 01:46:56,085
可能更多是出于机会主义。

1565
01:46:56,085 --> 01:47:01,165
那么问题来了，究竟是什么技术能够真正让它工作呢？

1566
01:47:01,165 --> 01:47:07,010
And so the night one devices need to go stay less and session, less. ~!@#$%^&*()

1567
01:47:07,010 --> 01:47:11,130
那么，你真的可以围绕周围建立安全措施吗？

1568
01:47:13,620 --> 01:47:17,780
是否更独立于会话本身？

1569
01:47:17,780 --> 01:47:19,880
所以有很多很多的好处。

1570
01:47:19,880 --> 01:47:27,970
我认为我的联席专家们已经解决了这个问题，所以我不会重复他们的话。

1571
01:47:27,970 --> 01:47:34,210
所以我认为，我们可能想要努力研究的一件事是

1572
01:47:34,210 --> 01:47:40,340
我们可能想要努力研究的一件事是社群如何帮助我们理解新的计算通讯数据模型。假设你拥有一个下一代平台，并且……

1573
01:47:40,340 --> 01:47:45,250
~!@#$%^&*()

1574
01:47:45,250 --> 01:47:51,040
如何让MDN神圣地帮助我们

1575
01:47:51,040 --> 01:47:55,960
构建下一代系统，使每个人都能受益。

1576
01:47:57,760 --> 01:47:58,260
谢谢你。

1577
01:47:58,260 --> 01:47:58,990
是的，谢谢你。

1578
01:48:00,030 --> 01:48:03,400
>> 还有谁想在这个问题上补充点什么吗？

1579
01:48:04,750 --> 01:48:08,010
>> 嗯，让我接下来说，然后我知道贾斯汀也想加入。

1580
01:48:08,010 --> 01:48:12,320
但我话很多，贾斯汀，只是微笑，我喜欢你的微笑。

1581
01:48:12,320 --> 01:48:17,060
而且，我再次强调，我从事的是智能城市方面的工作。

1582
01:48:17,060 --> 01:48:24,020
所以从数据的角度来看，我们城市面临的最大问题之一，

1583
01:48:24,020 --> 01:48:31,250
所以这甚至是城市运营内部缺乏互操作性的问题。

1584
01:48:31,250 --> 01:48:35,680
所以我的意思是交通部门可能有他们自己的数据集和他们自己的通信与连接机制。

1585
01:48:35,680 --> 01:48:43,132
所以我的意思是交通部门可能有他们自己的数据集和他们自己的通信与连接机制。

1586
01:48:43,132 --> 01:48:45,140
但数据包和~!@#$%^&*()

1587
01:48:45,140 --> 01:48:48,370
数据并不一定是打包的，这并不意味着没有内容。

1588
01:48:49,600 --> 01:48:52,800
这通常意味着如果你使用这种沟通方式或者

1589
01:48:52,800 --> 01:48:59,100
如果只是部门内部的系统还好，因为它并不是来自于何时。

1590
01:48:59,100 --> 01:49:03,780
想要创建一个横跨所有不同部门的智慧城市系统？

1591
01:49:03,780 --> 01:49:10,960
突然间，数据的格式或数据打包成为了一个大问题。

1592
01:49:11,960 --> 01:49:15,770
所以，我并不一定要深入到网络层，或者

1593
01:49:15,770 --> 01:49:20,020
所以，我并不一定要深入到网络层，甚至以下，我也没有通过更多的讨论应用层来获取数据。

1594
01:49:20,020 --> 01:49:24,000
但我们看到的最大问题之一是数据包，

1595
01:49:24,000 --> 01:49:28,280
它通常是带有IP地址的标签，

1596
01:49:28,280 --> 01:49:34,940
它通常是某种地址，而内容的上下文则完全是独立的。

1597
01:49:34,940 --> 01:49:39,550
这正导致在开发一个更全面的过程中出现了许多问题，

1598
01:49:39,550 --> 01:49:41,970
智慧城市数据交换网络。

1599
01:49:43,390 --> 01:49:48,320
所以我并不一定认为那是问题所在。

1600
01:49:48,320 --> 01:49:52,160
网络将能够像银色子弹一样解决问题。

1601
01:49:52,160 --> 01:49:57,150
但问题是，从智能城市的角度来看，这正是我所看到的问题。

1602
01:49:57,150 --> 01:50:00,920
如果网络能做出任何贡献的话。

1603
01:50:00,920 --> 01:50:08,170
如果网络能做出任何贡献的话，可能是将这一概念引入数据交换平台，该平台正由众多不同的城市、州和政府共同开发。

1604
01:50:08,170 --> 01:50:13,940
正在由众多不同的城市、州和政府共同开发。

1605
01:50:13,940 --> 01:50:16,690
这可能会改变整个游戏规则。

1606
01:50:16,690 --> 01:50:18,420
我只是随口一说。

1607
01:50:21,508 --> 01:50:23,690
That's right, Justin [笑声] >> 是的，

1608
01:50:24,890 --> 01:50:28,610
我会简短地说，我完全同意你们的看法，

1609
01:50:28,610 --> 01:50:33,350
我认为我们专注于更宏观的大局非常重要。

1610
01:50:33,350 --> 01:50:37,720
无论何时我们在展望未来，因此我们可以在任何可能的地方采取行动。

1611
01:50:37,720 --> 01:50:42,980
杠杆作用，可以在小范围甚至大范围上改善事物。

1612
01:50:42,980 --> 01:50:45,170
这确实是我们应该关注的重点。

1613
01:50:45,170 --> 01:50:50,370
对我来说，因为我现在大部分时间都在处理细节问题。

1614
01:50:50,370 --> 01:50:56,450
目前来看，我认为货代可能是我们现在面临的最大挑战。

1615
01:50:56,450 --> 01:50:58,380
那么如果我们能看一下它，你知道的，

1616
01:50:58,380 --> 01:51:02,640
我认为在之前的一些讨论中我们已经提到了这个，你知道的。

1617
01:51:02,640 --> 01:51:06,390
我之所以这么说是因为，如果你去了解一下5G是如何工作的，以及

1618
01:51:06,390 --> 01:51:08,770
动态时隙，你知道的，就是切片很长，对吧？

1619
01:51:08,770 --> 01:51:12,050
我们在看动态切片时，还有很多其他的事情需要考虑。

1620
01:51:12,050 --> 01:51:16,050
在讨论动态切片方面，我们还需要考虑到其他像这样的因素，对吧？

1621
01:51:16,050 --> 01:51:19,730
但是随着我们进入5G时代，以及进入那些类型的

1622
01:51:19,730 --> 01:51:22,840
网络中包含了网络切片和CBR，对吧？

1623
01:51:22,840 --> 01:51:27,680
你有不同的分配用于不同的用途。

1624
01:51:27,680 --> 01:51:32,880
所以我们真的在深入研究网络利用率、频谱利用率的问题。

1625
01:51:32,880 --> 01:51:36,210
但是当你从一个转发者的角度来看这个问题时。

1626
01:51:36,210 --> 01:51:42,250
能够即时为成千上万的设备创建动态面孔，

1627
01:51:42,250 --> 01:51:45,420
或者成千上万的用户，能够做到这一点并且

1628
01:51:45,420 --> 01:51:50,660
在短短32秒的时间框架内，非常迅速地更新整个网络，或者

1629
01:51:50,660 --> 01:51:53,790
在短短32秒的时间框架内，非常迅速地更新整个网络，或者对于新政策和其他一切来说，权限更小了。I think that's where our substantial challenges are at.

1630
01:51:53,790 --> 01:51:56,540
我认为那是我们面临的主要挑战所在。

1631
01:51:56,540 --> 01:51:58,390
目前就在佛罗里达。

1632
01:51:58,390 --> 01:52:03,450
并且探讨我们如何在5G挑战中解决这个问题。

1633
01:52:03,450 --> 01:52:06,220
不仅仅是从身份的角度来看，对吧？

1634
01:52:06,220 --> 01:52:10,680
因为这确实从根本上回归到了身份问题上。

1635
01:52:10,680 --> 01:52:12,440
我脑海中的问题。

1636
01:52:12,440 --> 01:52:14,190
对吧？那么问题是你如何识别用户？

1637
01:52:14,190 --> 01:52:15,160
你如何识别节点？

1638
01:52:15,160 --> 01:52:18,000
How do you identify the traffic and so ~!@#$%^&*()

1639
01:52:18,000 --> 01:52:23,860
如果我们有一个可靠的来源或一个可信的目的地，

1640
01:52:23,860 --> 01:52:27,510
对，我们需要解决中间的所有问题才能达到那个目标。

1641
01:52:27,510 --> 01:52:33,360
我认为印度是一个巨大的飞跃，可以让你知道，达到90%的目标。

1642
01:52:33,360 --> 01:52:35,680
我认为我们还能做得更多一点。

1643
01:52:36,980 --> 01:52:41,010
在转发器上真正细化身份识别的方面。

1644
01:52:41,010 --> 01:52:43,385
并且同样动态地创建面孔。

1645
01:52:43,385 --> 01:52:46,680
只是，减轻开发者的负担。

1646
01:52:48,615 --> 01:52:52,850
>> 丹，你还有什么想补充的吗？

1647
01:52:52,850 --> 01:52:56,270
>> 我认为大部分内容已经有人说过了，我只简单补充一点。

1648
01:52:56,270 --> 01:52:58,520
我同意那里的所有评论。

1649
01:52:58,520 --> 01:53:03,460
我认为看到可用性如何变化特别有趣，

1650
01:53:03,460 --> 01:53:07,770
在一个无会话无状态的环境中我能获得一个高可用的网络吗？还有

1651
01:53:07,770 --> 01:53:10,160
我认为这给了我很多

1652
01:53:10,160 --> 01:53:12,230
新的机会，这是我以前无法探索的。

1653
01:53:12,230 --> 01:53:17,050
所以我认为，这里有很多有趣的方向可以追寻。

1654
01:53:19,320 --> 01:53:22,150
好的，那么，我没有看到其他的问题。

1655
01:53:22,150 --> 01:53:26,670
那么我猜Dave大概有一个后续问题。

1656
01:53:26,670 --> 01:53:31,370
想知道我们是否要求所有的NBN路由器都要进行物理上和

1657
01:53:31,370 --> 01:53:34,820
我不认为我们需要要求所有的NBN路由器都要进行物理上和逻辑上的安全保护，但我并不是这么认为。

1658
01:53:34,820 --> 01:53:39,750
当我听你们中的几位谈论这个问题时，更多的是，你知道的，我们如何工作。

1659
01:53:39,750 --> 01:53:45,010
在当前的环境中，并不似乎是这样的要求。

1660
01:53:45,010 --> 01:53:50,100
但是无论如何，我在想或许我们应该继续进行并结束这件事。

1661
01:53:50,100 --> 01:53:55,130
我不知道是否为此我们还要再花半小时才能平息这件事。

1662
01:53:55,130 --> 01:53:59,620
休息一下还是少一点？有人想给我们一些建议吗？

1663
01:54:01,010 --> 01:54:05,666
是的，我认为我们应该在3点15分回来。

1664
01:54:05,666 --> 01:54:08,530
那我们将休息20分钟然后

1665
01:54:08,530 --> 01:54:14,319
我们将在3点20分回来 >> 很好。

1666
01:54:14,319 --> 01:54:16,539
>> 好的，很高兴见到你们。

1667
01:54:16,539 --> 01:54:17,759
>> 好的，稍后见。

1668
01:54:17,759 --> 01:54:18,579
>> 很高兴见到你。

1669
01:54:18,579 --> 01:54:21,479
>> 非常感谢所有的小组成员。

1670
01:54:21,479 --> 01:54:22,969
>> 谢谢。>> 谢谢。

1671
01:54:22,969 --> 01:54:23,469
>> 再见。

1672
01:54:23,469 --> 01:54:23,969
>> 再见。

